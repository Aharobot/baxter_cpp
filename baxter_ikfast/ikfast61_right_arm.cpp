/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-08 16:30:04.845777
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49;
x0=IKsin(j[0]);
x1=IKsin(j[2]);
x2=IKcos(j[0]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKcos(j[1]);
x6=IKcos(j[3]);
x7=IKsin(j[3]);
x8=IKcos(j[5]);
x9=IKsin(j[5]);
x10=IKsin(j[4]);
x11=IKcos(j[4]);
x12=((IkReal(0.374290000000000))*(x6));
x13=((IkReal(0.0100000000000000))*(x7));
x14=((IkReal(1.00000000000000))*(x0));
x15=((IkReal(1.00000000000000))*(x6));
x16=((IkReal(1.00000000000000))*(x7));
x17=((IkReal(0.0100000000000000))*(x4));
x18=((IkReal(0.0690000000000000))*(x0));
x19=((IkReal(0.0100000000000000))*(x6));
x20=((IkReal(1.00000000000000))*(x4));
x21=((IkReal(0.0100000000000000))*(x3));
x22=((x2)*(x5));
x23=((x4)*(x6));
x24=((x1)*(x2));
x25=((x5)*(x7));
x26=((x2)*(x3));
x27=((x0)*(x1));
x28=((x0)*(x5));
x29=((x5)*(x6));
x30=((x3)*(x5));
x31=((x3)*(x4));
x32=((x1)*(x5));
x33=((x15)*(x22));
x34=((x16)*(x22));
x35=((x14)*(x31));
x36=((x14)*(x29));
x37=((x14)*(x25));
x38=((x15)*(x30));
x39=((((IkReal(-1.00000000000000))*(x35)))+(x24));
x40=((((IkReal(-1.00000000000000))*(x14)*(x3)))+(((x20)*(x24))));
x41=((((IkReal(-1.00000000000000))*(x24)))+(x35));
x42=((((x1)*(x14)))+(((x20)*(x26))));
x43=((IkReal(-1.00000000000000))*(x42));
x44=((((x1)*(x14)*(x4)))+(((IkReal(1.00000000000000))*(x26))));
x45=((x41)*(x7));
x46=((x43)*(x6));
x47=((((x11)*(((((IkReal(-1.00000000000000))*(x38)))+(((x4)*(x7)))))))+(((x10)*(x32))));
x48=((((x10)*(x44)))+(((x11)*(((((IkReal(-1.00000000000000))*(x37)))+(((x39)*(x6))))))));
x49=((((x10)*(x40)))+(((x11)*(((((IkReal(-1.00000000000000))*(x34)))+(x46))))));
eerot[0]=((((x49)*(x9)))+(((x8)*(((((IkReal(-1.00000000000000))*(x16)*(x42)))+(x33))))));
eerot[1]=((((x49)*(x8)))+(((x9)*(((((IkReal(-1.00000000000000))*(x33)))+(((x42)*(x7))))))));
eerot[2]=((((x11)*(x40)))+(((x10)*(((((IkReal(-1.00000000000000))*(x15)*(x43)))+(x34))))));
IkReal x50=((x26)*(x4));
eetrans[0]=((IkReal(0.0556950000000000))+(((IkReal(0.0690000000000000))*(x2)))+(((IkReal(-1.00000000000000))*(x1)*(x18)))+(((IkReal(-0.0690000000000000))*(x50)))+(((x7)*(((((IkReal(-0.374290000000000))*(x27)))+(((IkReal(-0.374290000000000))*(x50)))))))+(((x10)*(((((IkReal(-1.00000000000000))*(x0)*(x21)))+(((x17)*(x24)))))))+(((x12)*(x22)))+(((x11)*(((((x19)*(x43)))+(((IkReal(-1.00000000000000))*(x13)*(x22)))))))+(((IkReal(0.364420000000000))*(x22))));
eerot[3]=((((x8)*(((((IkReal(-1.00000000000000))*(x16)*(x41)))+(x36)))))+(((x48)*(x9))));
eerot[4]=((((x48)*(x8)))+(((x9)*(((((IkReal(-1.00000000000000))*(x36)))+(x45))))));
eerot[5]=((((x11)*(x44)))+(((x10)*(((x37)+(((IkReal(-1.00000000000000))*(x15)*(x39))))))));
eetrans[1]=((((IkReal(-1.00000000000000))*(x18)*(x31)))+(((x7)*(((((IkReal(0.374290000000000))*(x24)))+(((IkReal(-0.374290000000000))*(x0)*(x31)))))))+(((x10)*(((((x2)*(x21)))+(((x17)*(x27)))))))+(x18)+(((x12)*(x28)))+(((IkReal(0.0690000000000000))*(x24)))+(((IkReal(0.364420000000000))*(x28)))+(((x11)*(((((x19)*(x39)))+(((IkReal(-1.00000000000000))*(x13)*(x28))))))));
eerot[6]=((((x47)*(x9)))+(((x8)*(((((IkReal(-1.00000000000000))*(x16)*(x30)))+(((IkReal(-1.00000000000000))*(x15)*(x4))))))));
eerot[7]=((((x9)*(((x23)+(((x25)*(x3)))))))+(((x47)*(x8))));
eerot[8]=((((x11)*(x32)))+(((x10)*(((((IkReal(-1.00000000000000))*(x16)*(x4)))+(x38))))));
eetrans[2]=((IkReal(0.281388000000000))+(((IkReal(0.0100000000000000))*(x10)*(x32)))+(((IkReal(-1.00000000000000))*(x12)*(x4)))+(((x11)*(((((IkReal(-1.00000000000000))*(x19)*(x30)))+(((x13)*(x4)))))))+(((IkReal(-0.374290000000000))*(x25)*(x3)))+(((IkReal(-0.364420000000000))*(x4)))+(((IkReal(-0.0690000000000000))*(x30))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j9,cj9,sj9,htj9,j10,cj10,sj10,htj10,j11,cj11,sj11,htj11,j12,cj12,sj12,htj12,j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij9[2], _nj9,_ij10[2], _nj10,_ij11[2], _nj11,_ij12[2], _nj12,_ij13[2], _nj13,_ij14[2], _nj14;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j9=numeric_limits<IkReal>::quiet_NaN(); _ij9[0] = -1; _ij9[1] = -1; _nj9 = -1; j10=numeric_limits<IkReal>::quiet_NaN(); _ij10[0] = -1; _ij10[1] = -1; _nj10 = -1; j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; j12=numeric_limits<IkReal>::quiet_NaN(); _ij12[0] = -1; _ij12[1] = -1; _nj12 = -1; j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r01;
new_r01=((IkReal(-1.00000000000000))*(r00));
new_r02=r02;
new_px=((IkReal(-0.0556950000000000))+(px));
new_r10=r11;
new_r11=((IkReal(-1.00000000000000))*(r10));
new_r12=r12;
new_py=py;
new_r20=r21;
new_r21=((IkReal(-1.00000000000000))*(r20));
new_r22=r22;
new_pz=((IkReal(-0.281388000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x51=((IkReal(0.0516520200000000))*(r01));
IkReal x52=((IkReal(0.0200000000000000))*(npx));
IkReal x53=((IkReal(0.138000000000000))*(px));
IkReal x54=((IkReal(0.748580000000000))*(npy));
IkReal x55=((IkReal(0.00138000000000000))*(r00));
IkReal x56=((IkReal(0.866840000000000))*(rxp1_2));
IkReal x57=((IkReal(0.748580000000000))*(py));
IkReal x58=((IkReal(0.0526208923000000))*(r11));
IkReal x59=((IkReal(0.0200000000000000))*(rxp2_1));
IkReal x60=((IkReal(0.00748580000000000))*(r10));
IkReal x61=((IkReal(0.00866840000000000))*(r22));
IkReal x62=((IkReal(0.728840000000000))*(rxp1_0));
IkReal x63=((IkReal(0.00728840000000000))*(r02));
IkReal x64=((IkReal(0.0149716000000000))*(r11));
IkReal x65=((pp)*(r11));
IkReal x66=((IkReal(0.00590840000000000))*(r22));
IkReal x67=((IkReal(0.590840000000000))*(rxp1_2));
IkReal x68=((IkReal(0.0479590277000000))*(r11));
IkReal x69=((IkReal(0.103304040000000))*(r11));
IkReal x70=((IkReal(0.276000000000000))*(py));
IkReal x71=((IkReal(0.00276000000000000))*(r10));
IkReal x72=((IkReal(0.105241784600000))*(r01));
IkReal x73=((IkReal(0.0400000000000000))*(rxp2_0));
IkReal x74=((IkReal(0.0149716000000000))*(r00));
IkReal x75=((IkReal(1.49716000000000))*(px));
IkReal x76=((IkReal(1.45768000000000))*(rxp1_1));
IkReal x77=((IkReal(0.0145768000000000))*(r12));
IkReal x78=((IkReal(0.0299432000000000))*(r01));
IkReal x79=((IkReal(0.0959180554000000))*(r01));
IkReal x80=((IkReal(1.49716000000000))*(npx));
IkReal x81=((IkReal(0.00276000000000000))*(r01));
IkReal x82=((IkReal(0.103304040000000))*(r00));
IkReal x83=((IkReal(0.0400000000000000))*(npy));
IkReal x84=((IkReal(0.105241784600000))*(r10));
IkReal x85=((IkReal(1.73368000000000))*(rxp0_2));
IkReal x86=((IkReal(1.45768000000000))*(rxp0_0));
IkReal x87=((IkReal(1.18168000000000))*(rxp0_2));
IkReal x88=((IkReal(0.0959180554000000))*(r10));
IkReal x89=((IkReal(0.00739106770000000))+(pp));
IkReal x90=((IkReal(2.00000000000000))*(pp));
IkReal x91=((IkReal(2.00000000000000))*(npy)*(py));
IkReal x92=((IkReal(1.00000000000000))*(x65));
IkReal x93=((IkReal(-1.45768000000000))*(rxp0_0));
IkReal x94=((IkReal(4.00000000000000))*(npx)*(py));
IkReal x95=((r10)*(x90));
IkReal x96=((x62)+(((IkReal(-1.00000000000000))*(x63))));
IkReal x97=((IkReal(4.00000000000000))*(npy)*(px));
IkReal x98=((r01)*(x90));
IkReal x99=((IkReal(-2.91536000000000))*(rxp0_1));
IkReal x100=((IkReal(4.00000000000000))*(pp)*(r00));
IkReal x101=((IkReal(8.00000000000000))*(npx)*(px));
IkReal x102=((((IkReal(-1.00000000000000))*(x77)))+(x76));
IkReal x103=((x63)+(((IkReal(-1.00000000000000))*(x62))));
IkReal x104=((((IkReal(-1.00000000000000))*(x63)))+(((IkReal(-1.00000000000000))*(x62))));
IkReal x105=((((IkReal(-0.00552000000000000))*(r11)))+(((IkReal(-0.206608080000000))*(r10))));
IkReal x106=((((IkReal(-1.00000000000000))*(x76)))+(((IkReal(-1.00000000000000))*(x77))));
IkReal x107=((x62)+(x63));
IkReal x108=((x59)+(x57));
IkReal x109=((x55)+(x53));
IkReal x110=((x60)+(x67));
IkReal x111=((x65)+(x66));
IkReal x112=((x83)+(x80));
IkReal x113=((x82)+(x81));
IkReal x114=((x58)+(x60));
IkReal x115=((x54)+(x51));
IkReal x116=((x75)+(x73));
IkReal x117=((x51)+(x52));
IkReal x118=((((IkReal(-1.00000000000000))*(x70)))+(x71)+(((IkReal(-1.00000000000000))*(x69))));
IkReal x119=((((IkReal(-1.00000000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x70)))+(x69));
IkReal x120=((x61)+(x92));
IkReal x121=((x56)+(x91));
IkReal x122=((x68)+(x91));
IkReal x123=((x79)+(x97));
IkReal x124=((x84)+(x95));
IkReal x125=((x74)+(x98));
IkReal x126=((x64)+(x94));
IkReal x127=((x101)+(x78));
IkReal x128=((x114)+(x56));
IkReal x129=((((IkReal(-1.00000000000000))*(x113)))+(x112));
IkReal x130=((x113)+(x112));
IkReal x131=((x125)+(x116));
IkReal x132=((((IkReal(-1.00000000000000))*(x117)))+(x55)+(x54)+(x89)+(((IkReal(-1.00000000000000))*(x53))));
IkReal x133=((((IkReal(-1.00000000000000))*(x109)))+(x117)+(x89)+(((IkReal(-1.00000000000000))*(x54))));
IkReal x134=((x115)+(x53)+(x89)+(((IkReal(-1.00000000000000))*(x55)))+(((IkReal(-1.00000000000000))*(x52))));
IkReal x135=((((IkReal(-1.00000000000000))*(x115)))+(x109)+(x52)+(x89));
op[0]=x132;
op[1]=IkReal(0);
op[2]=x129;
op[3]=IkReal(0);
op[4]=x133;
op[5]=IkReal(0);
op[6]=IkReal(0);
op[7]=x132;
op[8]=IkReal(0);
op[9]=x129;
op[10]=IkReal(0);
op[11]=x133;
op[12]=((((IkReal(-1.00000000000000))*(x120)))+(((IkReal(-1.00000000000000))*(x128)))+(x108)+(x91));
op[13]=x104;
op[14]=((((IkReal(-1.00000000000000))*(x124)))+(x126)+(((IkReal(-1.00000000000000))*(x85))));
op[15]=x93;
op[16]=((x128)+(x108)+(x65)+(((IkReal(-1.00000000000000))*(x91)))+(((IkReal(-1.00000000000000))*(x61))));
op[17]=x96;
op[18]=x104;
op[19]=((x122)+(x108)+(x66)+(x67)+(((IkReal(-1.00000000000000))*(x92)))+(((IkReal(-1.00000000000000))*(x60))));
op[20]=x93;
op[21]=((x126)+(x88)+(x87)+(((IkReal(-1.00000000000000))*(x95))));
op[22]=x96;
op[23]=((((IkReal(-1.00000000000000))*(x122)))+(x111)+(x108)+(x60)+(((IkReal(-1.00000000000000))*(x67))));
op[24]=x118;
op[25]=IkReal(0);
op[26]=x105;
op[27]=IkReal(0);
op[28]=x119;
op[29]=IkReal(0);
op[30]=IkReal(0);
op[31]=x118;
op[32]=IkReal(0);
op[33]=x105;
op[34]=IkReal(0);
op[35]=x119;
op[36]=((((IkReal(-1.00000000000000))*(x116)))+(x125)+(x72)+(((IkReal(-1.00000000000000))*(x97))));
op[37]=x106;
op[38]=((((IkReal(-1.00000000000000))*(x127)))+(x100)+(((IkReal(0.210483569200000))*(r00))));
op[39]=x99;
op[40]=((((IkReal(-1.00000000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x131)))+(x97));
op[41]=x102;
op[42]=x106;
op[43]=((((IkReal(-1.00000000000000))*(x116)))+(((IkReal(-1.00000000000000))*(x123)))+(x125));
op[44]=x99;
op[45]=((((IkReal(-1.00000000000000))*(x127)))+(x100)+(((IkReal(-0.191836110800000))*(r00))));
op[46]=x102;
op[47]=((x123)+(((IkReal(-1.00000000000000))*(x131))));
op[48]=x134;
op[49]=IkReal(0);
op[50]=x130;
op[51]=IkReal(0);
op[52]=x135;
op[53]=IkReal(0);
op[54]=IkReal(0);
op[55]=x134;
op[56]=IkReal(0);
op[57]=x130;
op[58]=IkReal(0);
op[59]=x135;
op[60]=((((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x121)))+(x114)+(x65)+(((IkReal(-1.00000000000000))*(x61))));
op[61]=x107;
op[62]=((((IkReal(-1.00000000000000))*(x126)))+(x124)+(((IkReal(-1.00000000000000))*(x85))));
op[63]=x86;
op[64]=((((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x114)))+(((IkReal(-1.00000000000000))*(x120)))+(x121));
op[65]=x103;
op[66]=x107;
op[67]=((((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x122)))+(x111)+(x110));
op[68]=x86;
op[69]=((((IkReal(-1.00000000000000))*(x126)))+(x87)+(x95)+(((IkReal(-1.00000000000000))*(x88))));
op[70]=x103;
op[71]=((((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x110)))+(x122)+(x66)+(((IkReal(-1.00000000000000))*(x92))));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j9array[16], cj9array[16], sj9array[16], j14array[16], cj14array[16], sj14array[16], j10array[16], cj10array[16], sj10array[16];
int numsolutions = 0;
for(int ij9 = 0; ij9 < numroots; ij9 += 3)
{
IkReal htj9 = zeror[ij9+0], htj14 = zeror[ij9+1], htj10 = zeror[ij9+2];
j9array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj9)));
j14array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj14)));
j10array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj10)));
IkReal x136=(htj9)*(htj9);
IkReal x137=(htj14)*(htj14);
IkReal x138=(htj10)*(htj10);
cj9array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x136))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x136)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x136))))));
cj14array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x137))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x137)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x137))))));
cj10array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x138))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x138)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x138))))));
sj9array[numsolutions]=((IkReal(2.00000000000000))*(htj9)*(((IKabs(((IkReal(1.00000000000000))+((htj9)*(htj9)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj9)*(htj9))))):(IkReal)1.0e30)));
sj14array[numsolutions]=((IkReal(2.00000000000000))*(htj14)*(((IKabs(((IkReal(1.00000000000000))+((htj14)*(htj14)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj14)*(htj14))))):(IkReal)1.0e30)));
sj10array[numsolutions]=((IkReal(2.00000000000000))*(htj10)*(((IKabs(((IkReal(1.00000000000000))+((htj10)*(htj10)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj10)*(htj10))))):(IkReal)1.0e30)));
if( j9array[numsolutions] > IKPI )
{
    j9array[numsolutions]-=IK2PI;
}
else if( j9array[numsolutions] < -IKPI )
{
    j9array[numsolutions]+=IK2PI;
}
if( j14array[numsolutions] > IKPI )
{
    j14array[numsolutions]-=IK2PI;
}
else if( j14array[numsolutions] < -IKPI )
{
    j14array[numsolutions]+=IK2PI;
}
if( j10array[numsolutions] > IKPI )
{
    j10array[numsolutions]-=IK2PI;
}
else if( j10array[numsolutions] < -IKPI )
{
    j10array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j9valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj9 = 16;
_nj14 = 1;
_nj10 = 1;
for(int ij9 = 0; ij9 < numsolutions; ++ij9)
    {
if( !j9valid[ij9] )
{
    continue;
}
_ij9[0] = ij9; _ij9[1] = -1;
_ij14[0] = 0; _ij14[1] = -1;
_ij10[0] = 0; _ij10[1] = -1;
for(int iij9 = ij9+1; iij9 < numsolutions; ++iij9)
{
if( !j9valid[iij9] ) { continue; }
if( IKabs(cj9array[ij9]-cj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj9array[ij9]-sj9array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(cj14array[ij9]-cj14array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij9]-sj14array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(cj10array[ij9]-cj10array[iij9]) < IKFAST_SOLUTION_THRESH && IKabs(sj10array[ij9]-sj10array[iij9]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j9valid[iij9]=false; _ij9[1] = iij9; _ij14[1] = 0; _ij10[1] = 0;  break; 
}
}
    j9 = j9array[ij9]; cj9 = cj9array[ij9]; sj9 = sj9array[ij9];

    j14 = j14array[ij9]; cj14 = cj14array[ij9]; sj14 = sj14array[ij9];

    j10 = j10array[ij9]; cj10 = cj10array[ij9]; sj10 = sj10array[ij9];

{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
IkReal x139=((IkReal(0.0100000000000000))*(sj9));
IkReal x140=((cj9)*(r00));
IkReal x141=((IkReal(0.374290000000000))*(sj14));
IkReal x142=((cj9)*(r01));
IkReal x143=((IkReal(0.374290000000000))*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.433420000000000))+(((IkReal(-0.0100000000000000))*(sj14)*(x142)))+(((cj14)*(r10)*(x139)))+(((IkReal(-1.00000000000000))*(x140)*(x141)))+(((IkReal(-1.00000000000000))*(x142)*(x143)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x139)))+(((IkReal(0.0100000000000000))*(cj14)*(x140)))+(((IkReal(-1.00000000000000))*(py)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x141)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x143))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x144=((IkReal(5.42449275362319))*(cj14));
IkReal x145=((IkReal(0.144927536231884))*(sj14));
IkReal x146=((IkReal(5.42449275362319))*(sj14));
IkReal x147=((r00)*(sj9));
IkReal x148=((cj9)*(r11));
IkReal x149=((r01)*(sj9));
IkReal x150=((cj9)*(r10));
IkReal x151=((IkReal(0.144927536231884))*(cj14));
if( IKabs(((((IkReal(-14.4927536231884))*(px)*(sj9)))+(((x144)*(x148)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((IkReal(-1.00000000000000))*(x144)*(x149)))+(((x145)*(x148)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((x146)*(x150)))+(((IkReal(-1.00000000000000))*(x146)*(x147)))+(((x147)*(x151)))+(((IkReal(-1.00000000000000))*(x145)*(x149))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-14.4927536231884))*(pz)))+(((r20)*(x151)))+(((IkReal(-1.00000000000000))*(r21)*(x144)))+(((IkReal(-1.00000000000000))*(r21)*(x145)))+(((IkReal(-1.00000000000000))*(r20)*(x146))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-14.4927536231884))*(px)*(sj9)))+(((x144)*(x148)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((IkReal(-1.00000000000000))*(x144)*(x149)))+(((x145)*(x148)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((x146)*(x150)))+(((IkReal(-1.00000000000000))*(x146)*(x147)))+(((x147)*(x151)))+(((IkReal(-1.00000000000000))*(x145)*(x149)))))+IKsqr(((((IkReal(-14.4927536231884))*(pz)))+(((r20)*(x151)))+(((IkReal(-1.00000000000000))*(r21)*(x144)))+(((IkReal(-1.00000000000000))*(r21)*(x145)))+(((IkReal(-1.00000000000000))*(r20)*(x146)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(-14.4927536231884))*(px)*(sj9)))+(((x144)*(x148)))+(((IkReal(-1.00000000000000))*(x150)*(x151)))+(((IkReal(-1.00000000000000))*(x144)*(x149)))+(((x145)*(x148)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((x146)*(x150)))+(((IkReal(-1.00000000000000))*(x146)*(x147)))+(((x147)*(x151)))+(((IkReal(-1.00000000000000))*(x145)*(x149)))), ((((IkReal(-14.4927536231884))*(pz)))+(((r20)*(x151)))+(((IkReal(-1.00000000000000))*(r21)*(x144)))+(((IkReal(-1.00000000000000))*(r21)*(x145)))+(((IkReal(-1.00000000000000))*(r20)*(x146)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x152=((cj9)*(sj14));
IkReal x153=((cj14)*(cj9));
IkReal x154=((IkReal(0.0100000000000000))*(sj9));
IkReal x155=((IkReal(0.374290000000000))*(sj14));
IkReal x156=((IkReal(0.374290000000000))*(cj14));
evalcond[0]=((((r20)*(x155)))+(((IkReal(-0.0100000000000000))*(cj14)*(r20)))+(((IkReal(0.0100000000000000))*(r21)*(sj14)))+(pz)+(((r21)*(x156)))+(((IkReal(0.0690000000000000))*(IKcos(j11)))));
evalcond[1]=((((IkReal(-0.0100000000000000))*(r11)*(x152)))+(((r00)*(sj9)*(x155)))+(((r01)*(sj9)*(x156)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x154)))+(((IkReal(0.0690000000000000))*(IKsin(j11))))+(((IkReal(-0.374290000000000))*(r10)*(x152)))+(((IkReal(0.0100000000000000))*(r10)*(x153)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(py)))+(((IkReal(-0.374290000000000))*(r11)*(x153)))+(((r01)*(sj14)*(x154))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x157=((cj9)*(sj14));
IkReal x158=((IkReal(1.00000000000000))*(r22));
IkReal x159=((sj14)*(sj9));
IkReal x160=((cj14)*(sj9));
IkReal x161=((IkReal(1.00000000000000))*(r20));
IkReal x162=((cj14)*(cj9));
gconst40=IKsign(((((r12)*(r21)*(x159)))+(((r02)*(r21)*(x157)))+(((IkReal(-1.00000000000000))*(r12)*(x160)*(x161)))+(((IkReal(-1.00000000000000))*(r01)*(x157)*(x158)))+(((r00)*(r22)*(x162)))+(((IkReal(-1.00000000000000))*(r02)*(x161)*(x162)))+(((IkReal(-1.00000000000000))*(r11)*(x158)*(x159)))+(((r10)*(r22)*(x160)))));
IkReal x163=((cj9)*(sj14));
IkReal x164=((IkReal(1.00000000000000))*(r22));
IkReal x165=((sj14)*(sj9));
IkReal x166=((cj14)*(sj9));
IkReal x167=((IkReal(1.00000000000000))*(r20));
IkReal x168=((cj14)*(cj9));
dummyeval[0]=((((r02)*(r21)*(x163)))+(((IkReal(-1.00000000000000))*(r02)*(x167)*(x168)))+(((IkReal(-1.00000000000000))*(r11)*(x164)*(x165)))+(((IkReal(-1.00000000000000))*(r01)*(x163)*(x164)))+(((r00)*(r22)*(x168)))+(((IkReal(-1.00000000000000))*(r12)*(x166)*(x167)))+(((r10)*(r22)*(x166)))+(((r12)*(r21)*(x165))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x169=((cj14)*(cj9));
IkReal x170=((cj14)*(sj9));
IkReal x171=((r21)*(sj14));
IkReal x172=((IkReal(1.00000000000000))*(r22));
gconst39=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r10)*(x169)*(x172)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x172)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x170)))+(((r02)*(sj9)*(x171)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x171)))+(((r12)*(r20)*(x169)))+(((r00)*(r22)*(x170)))));
IkReal x173=((cj14)*(cj9));
IkReal x174=((cj14)*(sj9));
IkReal x175=((r21)*(sj14));
IkReal x176=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r10)*(x173)*(x176)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x176)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x174)))+(((r02)*(sj9)*(x175)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x175)))+(((r12)*(r20)*(x173)))+(((r00)*(r22)*(x174))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x177=((IkReal(0.0100000000000000))*(cj14));
IkReal x178=((r10)*(sj9));
IkReal x179=((cj14)*(r21));
IkReal x180=((cj9)*(r00));
IkReal x181=((IkReal(0.0100000000000000))*(sj14));
IkReal x182=((r00)*(sj9));
IkReal x183=((IkReal(0.374290000000000))*(sj14));
IkReal x184=((r01)*(sj9));
IkReal x185=((IkReal(1.00000000000000))*(py));
IkReal x186=((cj9)*(r10));
IkReal x187=((IkReal(0.374290000000000))*(cj14));
IkReal x188=((r11)*(sj9));
IkReal x189=((cj9)*(x187));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x179));
evalcond[2]=((((r20)*(x183)))+(((r21)*(x181)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x177)))+(((IkReal(0.374290000000000))*(x179))));
evalcond[3]=((IkReal(0.0690000000000000))+(((x177)*(x186)))+(((IkReal(-1.00000000000000))*(r11)*(x189)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x181)))+(((x184)*(x187)))+(((IkReal(-1.00000000000000))*(x177)*(x182)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x185)))+(((IkReal(-1.00000000000000))*(x183)*(x186)))+(((x182)*(x183)))+(((x181)*(x184))));
evalcond[4]=((IkReal(0.433420000000000))+(((x177)*(x180)))+(((IkReal(-1.00000000000000))*(x178)*(x183)))+(((IkReal(-1.00000000000000))*(r01)*(x189)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x181)))+(((IkReal(-1.00000000000000))*(x187)*(x188)))+(((IkReal(-1.00000000000000))*(x180)*(x183)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x185)))+(((IkReal(-1.00000000000000))*(x181)*(x188)))+(((x177)*(x178))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x190=((r00)*(sj14));
IkReal x191=((cj14)*(sj9));
IkReal x192=((IkReal(1.00000000000000))*(r11));
IkReal x193=((IkReal(1.00000000000000))*(cj9));
IkReal x194=((r10)*(sj14));
if( IKabs(((((r01)*(x191)))+(((sj9)*(x190)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x192)))+(((IkReal(-1.00000000000000))*(x193)*(x194))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x191)*(x192)))+(((IkReal(-1.00000000000000))*(x190)*(x193)))+(((IkReal(-1.00000000000000))*(sj9)*(x194)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x193))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(x191)))+(((sj9)*(x190)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x192)))+(((IkReal(-1.00000000000000))*(x193)*(x194)))))+IKsqr(((((IkReal(-1.00000000000000))*(x191)*(x192)))+(((IkReal(-1.00000000000000))*(x190)*(x193)))+(((IkReal(-1.00000000000000))*(sj9)*(x194)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x193)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((r01)*(x191)))+(((sj9)*(x190)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x192)))+(((IkReal(-1.00000000000000))*(x193)*(x194)))), ((((IkReal(-1.00000000000000))*(x191)*(x192)))+(((IkReal(-1.00000000000000))*(x190)*(x193)))+(((IkReal(-1.00000000000000))*(sj9)*(x194)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x193)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x195=((r00)*(sj14));
IkReal x196=((cj14)*(sj9));
IkReal x197=((IkReal(1.00000000000000))*(r11));
IkReal x198=((IkReal(1.00000000000000))*(cj9));
IkReal x199=((r10)*(sj14));
evalcond[0]=((((r01)*(x196)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(x198)*(x199)))+(((sj9)*(x195)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x197))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x196)*(x197)))+(((IkReal(-1.00000000000000))*(x195)*(x198)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(sj9)*(x199)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x198))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst46;
gconst46=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst47;
IkReal x200=((r22)*(sj14));
IkReal x201=((IkReal(1.00000000000000))*(cj9));
IkReal x202=((cj14)*(sj9));
IkReal x203=((r21)*(sj14));
gconst47=IKsign(((((r01)*(sj9)*(x200)))+(((r02)*(r20)*(x202)))+(((cj9)*(r12)*(x203)))+(((IkReal(-1.00000000000000))*(r11)*(x200)*(x201)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x202)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x203)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x201)))));
IkReal x204=((r22)*(sj14));
IkReal x205=((IkReal(1.00000000000000))*(cj9));
IkReal x206=((cj14)*(sj9));
IkReal x207=((r21)*(sj14));
dummyeval[0]=((((r01)*(sj9)*(x204)))+(((r02)*(r20)*(x206)))+(((cj9)*(r12)*(x207)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x206)))+(((IkReal(-1.00000000000000))*(r11)*(x204)*(x205)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x207)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x205))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x208=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(r12)*(x208)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x208)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(r12)*(x208)))+(((r02)*(sj9)))))), ((gconst47)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x208)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x209=IKsin(j13);
IkReal x210=IKcos(j13);
IkReal x211=((r11)*(sj14));
IkReal x212=((IkReal(1.00000000000000))*(r02));
IkReal x213=((r01)*(sj14));
IkReal x214=((cj14)*(r00));
IkReal x215=((IkReal(1.00000000000000))*(r12));
IkReal x216=((r21)*(sj14));
IkReal x217=((cj14)*(r20));
IkReal x218=((cj9)*(x209));
IkReal x219=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x220=((sj9)*(x209));
IkReal x221=((sj9)*(x210));
IkReal x222=((cj9)*(x210));
IkReal x223=((IkReal(1.00000000000000))*(x209));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x216)*(x223)))+(((x209)*(x217)))+(((r22)*(x210))));
evalcond[1]=((((x210)*(x217)))+(((IkReal(-1.00000000000000))*(x210)*(x216)))+(((IkReal(-1.00000000000000))*(r22)*(x223))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x213)*(x220)))+(((IkReal(-1.00000000000000))*(x215)*(x222)))+(((x214)*(x220)))+(((x211)*(x218)))+(((IkReal(-1.00000000000000))*(x218)*(x219)))+(((r02)*(x221))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x213)*(x221)))+(((x214)*(x221)))+(((r12)*(x218)))+(((IkReal(-1.00000000000000))*(x219)*(x222)))+(cj12)+(((IkReal(-1.00000000000000))*(x212)*(x220)))+(((x211)*(x222))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x215)*(x221)))+(((x213)*(x218)))+(((IkReal(-1.00000000000000))*(x214)*(x218)))+(((IkReal(-1.00000000000000))*(x219)*(x220)))+(((IkReal(-1.00000000000000))*(x212)*(x222)))+(((x211)*(x220))));
evalcond[5]=((((r12)*(x220)))+(((x213)*(x222)))+(((IkReal(-1.00000000000000))*(x219)*(x221)))+(((IkReal(-1.00000000000000))*(sj12)))+(((r02)*(x218)))+(((x211)*(x221)))+(((IkReal(-1.00000000000000))*(x214)*(x222))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst46)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst46)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst46)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x224=IKsin(j13);
IkReal x225=IKcos(j13);
IkReal x226=((r11)*(sj14));
IkReal x227=((IkReal(1.00000000000000))*(r02));
IkReal x228=((r01)*(sj14));
IkReal x229=((cj14)*(r00));
IkReal x230=((IkReal(1.00000000000000))*(r12));
IkReal x231=((r21)*(sj14));
IkReal x232=((cj14)*(r20));
IkReal x233=((cj9)*(x224));
IkReal x234=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x235=((sj9)*(x224));
IkReal x236=((sj9)*(x225));
IkReal x237=((cj9)*(x225));
IkReal x238=((IkReal(1.00000000000000))*(x224));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x231)*(x238)))+(((x224)*(x232)))+(((r22)*(x225))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x238)))+(((x225)*(x232)))+(((IkReal(-1.00000000000000))*(x225)*(x231))));
evalcond[2]=((((r02)*(x236)))+(((IkReal(-1.00000000000000))*(x233)*(x234)))+(((IkReal(-1.00000000000000))*(x230)*(x237)))+(((x229)*(x235)))+(((x226)*(x233)))+(((IkReal(-1.00000000000000))*(x228)*(x235))));
evalcond[3]=((((x229)*(x236)))+(((IkReal(-1.00000000000000))*(x227)*(x235)))+(((x226)*(x237)))+(cj12)+(((IkReal(-1.00000000000000))*(x228)*(x236)))+(((IkReal(-1.00000000000000))*(x234)*(x237)))+(((r12)*(x233))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x230)*(x236)))+(((IkReal(-1.00000000000000))*(x227)*(x237)))+(((x228)*(x233)))+(((x226)*(x235)))+(((IkReal(-1.00000000000000))*(x229)*(x233)))+(((IkReal(-1.00000000000000))*(x234)*(x235))));
evalcond[5]=((((r02)*(x233)))+(((x228)*(x237)))+(((x226)*(x236)))+(((IkReal(-1.00000000000000))*(x229)*(x237)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x234)*(x236)))+(((r12)*(x235))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x239=((IkReal(0.0100000000000000))*(cj14));
IkReal x240=((r10)*(sj9));
IkReal x241=((cj14)*(r21));
IkReal x242=((cj9)*(r00));
IkReal x243=((IkReal(0.0100000000000000))*(sj14));
IkReal x244=((r00)*(sj9));
IkReal x245=((IkReal(0.374290000000000))*(sj14));
IkReal x246=((r01)*(sj9));
IkReal x247=((IkReal(1.00000000000000))*(py));
IkReal x248=((cj9)*(r10));
IkReal x249=((IkReal(0.374290000000000))*(cj14));
IkReal x250=((r11)*(sj9));
IkReal x251=((cj9)*(x249));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x241));
evalcond[2]=((((r21)*(x243)))+(((IkReal(-1.00000000000000))*(r20)*(x239)))+(pz)+(((IkReal(0.374290000000000))*(x241)))+(((r20)*(x245))));
evalcond[3]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x247)))+(((x244)*(x245)))+(((x239)*(x248)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x243)))+(((IkReal(-1.00000000000000))*(r11)*(x251)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x245)*(x248)))+(((IkReal(-1.00000000000000))*(x239)*(x244)))+(((x246)*(x249)))+(((x243)*(x246))));
evalcond[4]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x242)*(x245)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x243)))+(((x239)*(x240)))+(((x239)*(x242)))+(((IkReal(-1.00000000000000))*(r01)*(x251)))+(((IkReal(-1.00000000000000))*(x249)*(x250)))+(((IkReal(-1.00000000000000))*(x240)*(x245)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x247)))+(((IkReal(-1.00000000000000))*(x243)*(x250))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x252=((cj14)*(r11));
IkReal x253=((IkReal(1.00000000000000))*(sj9));
IkReal x254=((cj14)*(r01));
IkReal x255=((r00)*(sj14));
IkReal x256=((r10)*(sj14));
IkReal x257=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x256)))+(((cj9)*(x252)))+(((IkReal(-1.00000000000000))*(x253)*(x255)))+(((IkReal(-1.00000000000000))*(x253)*(x254))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((IkReal(-1.00000000000000))*(x255)*(x257)))+(((IkReal(-1.00000000000000))*(x254)*(x257)))+(((IkReal(-1.00000000000000))*(x253)*(x256))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x256)))+(((cj9)*(x252)))+(((IkReal(-1.00000000000000))*(x253)*(x255)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))))+IKsqr(((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((IkReal(-1.00000000000000))*(x255)*(x257)))+(((IkReal(-1.00000000000000))*(x254)*(x257)))+(((IkReal(-1.00000000000000))*(x253)*(x256)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x256)))+(((cj9)*(x252)))+(((IkReal(-1.00000000000000))*(x253)*(x255)))+(((IkReal(-1.00000000000000))*(x253)*(x254)))), ((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((IkReal(-1.00000000000000))*(x255)*(x257)))+(((IkReal(-1.00000000000000))*(x254)*(x257)))+(((IkReal(-1.00000000000000))*(x253)*(x256)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x258=((r00)*(sj14));
IkReal x259=((cj14)*(sj9));
IkReal x260=((IkReal(1.00000000000000))*(r11));
IkReal x261=((IkReal(1.00000000000000))*(cj9));
IkReal x262=((r10)*(sj14));
evalcond[0]=((IKsin(j12))+(((r01)*(x259)))+(((IkReal(-1.00000000000000))*(x261)*(x262)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x260)))+(((sj9)*(x258))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x258)*(x261)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(x259)*(x260)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x261)))+(((IkReal(-1.00000000000000))*(sj9)*(x262))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst50;
gconst50=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst51;
IkReal x263=((cj14)*(cj9));
IkReal x264=((cj14)*(sj9));
IkReal x265=((r21)*(sj14));
IkReal x266=((IkReal(1.00000000000000))*(r22));
gconst51=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r10)*(x263)*(x266)))+(((r12)*(r20)*(x263)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x264)))+(((r00)*(r22)*(x264)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x265)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x266)))+(((r02)*(sj9)*(x265)))));
IkReal x267=((cj14)*(cj9));
IkReal x268=((cj14)*(sj9));
IkReal x269=((r21)*(sj14));
IkReal x270=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((r12)*(r20)*(x267)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x268)))+(((r00)*(r22)*(x268)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x270)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x269)))+(((r02)*(sj9)*(x269)))+(((IkReal(-1.00000000000000))*(r10)*(x267)*(x270))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x271=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r12)*(x271)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x271))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(r12)*(x271)))+(((r02)*(sj9)))))), ((gconst51)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x271)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x272=IKsin(j13);
IkReal x273=IKcos(j13);
IkReal x274=((r11)*(sj14));
IkReal x275=((IkReal(1.00000000000000))*(r02));
IkReal x276=((r01)*(sj14));
IkReal x277=((cj14)*(r00));
IkReal x278=((IkReal(1.00000000000000))*(r12));
IkReal x279=((r21)*(sj14));
IkReal x280=((cj14)*(r20));
IkReal x281=((cj9)*(x272));
IkReal x282=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x283=((sj9)*(x272));
IkReal x284=((sj9)*(x273));
IkReal x285=((cj9)*(x273));
IkReal x286=((IkReal(1.00000000000000))*(x272));
evalcond[0]=((IkReal(1.00000000000000))+(((r22)*(x273)))+(((x272)*(x280)))+(((IkReal(-1.00000000000000))*(x279)*(x286))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x273)*(x279)))+(((IkReal(-1.00000000000000))*(r22)*(x286)))+(((x273)*(x280))));
evalcond[2]=((((x274)*(x281)))+(((r02)*(x284)))+(((IkReal(-1.00000000000000))*(x281)*(x282)))+(((IkReal(-1.00000000000000))*(x276)*(x283)))+(((x277)*(x283)))+(((IkReal(-1.00000000000000))*(x278)*(x285))));
evalcond[3]=((((x274)*(x285)))+(((r12)*(x281)))+(((IkReal(-1.00000000000000))*(x282)*(x285)))+(((IkReal(-1.00000000000000))*(x276)*(x284)))+(((IkReal(-1.00000000000000))*(cj12)))+(((x277)*(x284)))+(((IkReal(-1.00000000000000))*(x275)*(x283))));
evalcond[4]=((((x274)*(x283)))+(((IkReal(-1.00000000000000))*(x277)*(x281)))+(((IkReal(-1.00000000000000))*(x282)*(x283)))+(((IkReal(-1.00000000000000))*(x275)*(x285)))+(((x276)*(x281)))+(((IkReal(-1.00000000000000))*(x278)*(x284))));
evalcond[5]=((((x274)*(x284)))+(((r02)*(x281)))+(((r12)*(x283)))+(((IkReal(-1.00000000000000))*(x277)*(x285)))+(((IkReal(-1.00000000000000))*(x282)*(x284)))+(((IkReal(-1.00000000000000))*(sj12)))+(((x276)*(x285))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst50)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst50)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst50)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst50)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x287=IKsin(j13);
IkReal x288=IKcos(j13);
IkReal x289=((r11)*(sj14));
IkReal x290=((IkReal(1.00000000000000))*(r02));
IkReal x291=((r01)*(sj14));
IkReal x292=((cj14)*(r00));
IkReal x293=((IkReal(1.00000000000000))*(r12));
IkReal x294=((r21)*(sj14));
IkReal x295=((cj14)*(r20));
IkReal x296=((cj9)*(x287));
IkReal x297=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x298=((sj9)*(x287));
IkReal x299=((sj9)*(x288));
IkReal x300=((cj9)*(x288));
IkReal x301=((IkReal(1.00000000000000))*(x287));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x294)*(x301)))+(((x287)*(x295)))+(((r22)*(x288))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x301)))+(((IkReal(-1.00000000000000))*(x288)*(x294)))+(((x288)*(x295))));
evalcond[2]=((((x289)*(x296)))+(((IkReal(-1.00000000000000))*(x296)*(x297)))+(((IkReal(-1.00000000000000))*(x293)*(x300)))+(((r02)*(x299)))+(((IkReal(-1.00000000000000))*(x291)*(x298)))+(((x292)*(x298))));
evalcond[3]=((((r12)*(x296)))+(((IkReal(-1.00000000000000))*(x290)*(x298)))+(((IkReal(-1.00000000000000))*(x297)*(x300)))+(((x289)*(x300)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x291)*(x299)))+(((x292)*(x299))));
evalcond[4]=((((x289)*(x298)))+(((x291)*(x296)))+(((IkReal(-1.00000000000000))*(x297)*(x298)))+(((IkReal(-1.00000000000000))*(x293)*(x299)))+(((IkReal(-1.00000000000000))*(x292)*(x296)))+(((IkReal(-1.00000000000000))*(x290)*(x300))));
evalcond[5]=((((x289)*(x299)))+(((r12)*(x298)))+(((IkReal(-1.00000000000000))*(x292)*(x300)))+(((x291)*(x300)))+(((IkReal(-1.00000000000000))*(x297)*(x299)))+(((IkReal(-1.00000000000000))*(sj12)))+(((r02)*(x296))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x302=((IkReal(1.00000000000000))*(cj14));
IkReal x303=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x303)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x303)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x302)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x302))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x303)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x303)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x302)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x302)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x303)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x303)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x302)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x302)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x304=IKsin(j12);
IkReal x305=((r00)*(sj14));
IkReal x306=((cj14)*(sj9));
IkReal x307=((IkReal(1.00000000000000))*(r11));
IkReal x308=((IkReal(1.00000000000000))*(cj9));
IkReal x309=((r10)*(sj14));
IkReal x310=((IkReal(1.00000000000000))*(x304));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x310)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((sj9)*(x305)))+(((IkReal(-1.00000000000000))*(x308)*(x309)))+(((IkReal(-1.00000000000000))*(sj11)*(x310)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x307)))+(((r01)*(x306))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x309)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(x306)*(x307)))+(((IkReal(-1.00000000000000))*(x305)*(x308)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x308))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst42;
IkReal x311=((r22)*(sj14));
IkReal x312=((IkReal(1.00000000000000))*(cj9));
IkReal x313=((cj14)*(sj9));
IkReal x314=((r21)*(sj14));
gconst42=IKsign(((((r02)*(r20)*(x313)))+(((IkReal(-1.00000000000000))*(r11)*(x311)*(x312)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x314)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x313)))+(((r01)*(sj9)*(x311)))+(((cj14)*(cj9)*(r10)*(r22)))+(((cj9)*(r12)*(x314)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x312)))));
IkReal x315=((r22)*(sj14));
IkReal x316=((IkReal(1.00000000000000))*(cj9));
IkReal x317=((cj14)*(sj9));
IkReal x318=((r21)*(sj14));
dummyeval[0]=((((r02)*(r20)*(x317)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x318)))+(((IkReal(-1.00000000000000))*(r11)*(x315)*(x316)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x317)))+(((r01)*(sj9)*(x315)))+(((cj14)*(cj9)*(r10)*(r22)))+(((cj9)*(r12)*(x318)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x316))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x319=((IkReal(1.00000000000000))*(cj14));
IkReal x320=((sj11)*(sj9));
IkReal x321=((cj9)*(sj11));
if( IKabs(((gconst42)*(((((r02)*(x320)))+(((IkReal(-1.00000000000000))*(r12)*(x321)))+(((cj11)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst42)*(((((IkReal(-1.00000000000000))*(r00)*(x319)*(x320)))+(((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(r20)*(x319)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x321)))+(((cj14)*(r10)*(x321)))+(((r01)*(sj14)*(x320))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst42)*(((((r02)*(x320)))+(((IkReal(-1.00000000000000))*(r12)*(x321)))+(((cj11)*(r22)))))), ((gconst42)*(((((IkReal(-1.00000000000000))*(r00)*(x319)*(x320)))+(((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(r20)*(x319)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x321)))+(((cj14)*(r10)*(x321)))+(((r01)*(sj14)*(x320)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x322=IKsin(j13);
IkReal x323=IKcos(j13);
IkReal x324=((r11)*(sj14));
IkReal x325=((IkReal(1.00000000000000))*(r02));
IkReal x326=((r01)*(sj14));
IkReal x327=((cj14)*(r00));
IkReal x328=((IkReal(1.00000000000000))*(r12));
IkReal x329=((r21)*(sj14));
IkReal x330=((cj14)*(r20));
IkReal x331=((cj9)*(x322));
IkReal x332=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x333=((sj9)*(x322));
IkReal x334=((sj9)*(x323));
IkReal x335=((cj9)*(x323));
IkReal x336=((IkReal(1.00000000000000))*(x322));
evalcond[0]=((((IkReal(-1.00000000000000))*(x329)*(x336)))+(((r22)*(x323)))+(((IkReal(-1.00000000000000))*(sj11)))+(((x322)*(x330))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x323)*(x329)))+(((cj11)*(cj12)))+(((x323)*(x330)))+(((IkReal(-1.00000000000000))*(r22)*(x336))));
evalcond[2]=((((x324)*(x331)))+(((IkReal(-1.00000000000000))*(x328)*(x335)))+(((r02)*(x334)))+(cj11)+(((x327)*(x333)))+(((IkReal(-1.00000000000000))*(x331)*(x332)))+(((IkReal(-1.00000000000000))*(x326)*(x333))));
evalcond[3]=((((r12)*(x331)))+(((x324)*(x335)))+(((x327)*(x334)))+(((cj12)*(sj11)))+(((IkReal(-1.00000000000000))*(x326)*(x334)))+(((IkReal(-1.00000000000000))*(x332)*(x335)))+(((IkReal(-1.00000000000000))*(x325)*(x333))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x327)*(x331)))+(((x324)*(x333)))+(((IkReal(-1.00000000000000))*(x328)*(x334)))+(((IkReal(-1.00000000000000))*(x332)*(x333)))+(((x326)*(x331)))+(((IkReal(-1.00000000000000))*(x325)*(x335))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x327)*(x335)))+(((r12)*(x333)))+(((x324)*(x334)))+(((r02)*(x331)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x332)*(x334)))+(((x326)*(x335))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x337=((cj11)*(cj12));
IkReal x338=((cj14)*(r20));
IkReal x339=((r21)*(sj14));
if( IKabs(((gconst41)*(((((r22)*(x337)))+(((IkReal(-1.00000000000000))*(sj11)*(x339)))+(((sj11)*(x338))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((x337)*(x339)))+(((r22)*(sj11)))+(((IkReal(-1.00000000000000))*(x337)*(x338))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst41)*(((((r22)*(x337)))+(((IkReal(-1.00000000000000))*(sj11)*(x339)))+(((sj11)*(x338)))))), ((gconst41)*(((((x337)*(x339)))+(((r22)*(sj11)))+(((IkReal(-1.00000000000000))*(x337)*(x338)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x340=IKsin(j13);
IkReal x341=IKcos(j13);
IkReal x342=((r11)*(sj14));
IkReal x343=((IkReal(1.00000000000000))*(r02));
IkReal x344=((r01)*(sj14));
IkReal x345=((cj14)*(r00));
IkReal x346=((IkReal(1.00000000000000))*(r12));
IkReal x347=((r21)*(sj14));
IkReal x348=((cj14)*(r20));
IkReal x349=((cj9)*(x340));
IkReal x350=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x351=((sj9)*(x340));
IkReal x352=((sj9)*(x341));
IkReal x353=((cj9)*(x341));
IkReal x354=((IkReal(1.00000000000000))*(x340));
evalcond[0]=((((r22)*(x341)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x347)*(x354)))+(((x340)*(x348))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x354)))+(((IkReal(-1.00000000000000))*(x341)*(x347)))+(((cj11)*(cj12)))+(((x341)*(x348))));
evalcond[2]=((((x345)*(x351)))+(((IkReal(-1.00000000000000))*(x349)*(x350)))+(((IkReal(-1.00000000000000))*(x346)*(x353)))+(cj11)+(((r02)*(x352)))+(((IkReal(-1.00000000000000))*(x344)*(x351)))+(((x342)*(x349))));
evalcond[3]=((((x345)*(x352)))+(((IkReal(-1.00000000000000))*(x343)*(x351)))+(((x342)*(x353)))+(((cj12)*(sj11)))+(((r12)*(x349)))+(((IkReal(-1.00000000000000))*(x344)*(x352)))+(((IkReal(-1.00000000000000))*(x350)*(x353))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x346)*(x352)))+(((IkReal(-1.00000000000000))*(x343)*(x353)))+(((x344)*(x349)))+(((x342)*(x351)))+(((IkReal(-1.00000000000000))*(x345)*(x349)))+(((IkReal(-1.00000000000000))*(x350)*(x351))));
evalcond[5]=((((r12)*(x351)))+(((IkReal(-1.00000000000000))*(x345)*(x353)))+(((x344)*(x353)))+(((x342)*(x352)))+(((r02)*(x349)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x350)*(x352))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x355=((cj9)*(sj11));
IkReal x356=((IkReal(1.00000000000000))*(cj11));
IkReal x357=((IkReal(1.00000000000000))*(sj11)*(sj9));
if( IKabs(((gconst39)*(((((r12)*(x355)))+(((IkReal(-1.00000000000000))*(r22)*(x356)))+(((IkReal(-1.00000000000000))*(r02)*(x357))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x357)))+(((cj14)*(r00)*(sj11)*(sj9)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x356)))+(((r11)*(sj14)*(x355)))+(((IkReal(-1.00000000000000))*(cj14)*(r10)*(x355))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst39)*(((((r12)*(x355)))+(((IkReal(-1.00000000000000))*(r22)*(x356)))+(((IkReal(-1.00000000000000))*(r02)*(x357)))))), ((gconst39)*(((((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x357)))+(((cj14)*(r00)*(sj11)*(sj9)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x356)))+(((r11)*(sj14)*(x355)))+(((IkReal(-1.00000000000000))*(cj14)*(r10)*(x355)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x358=IKsin(j13);
IkReal x359=IKcos(j13);
IkReal x360=((cj14)*(r10));
IkReal x361=((sj14)*(sj9));
IkReal x362=((cj14)*(r00));
IkReal x363=((cj9)*(sj14));
IkReal x364=((IkReal(1.00000000000000))*(x358));
IkReal x365=((r11)*(x358));
IkReal x366=((r02)*(x359));
IkReal x367=((IkReal(1.00000000000000))*(r12)*(x359));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj11)))+(((r22)*(x359)))+(((cj14)*(r20)*(x358)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x364))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj9)*(x367)))+(cj11)+(((IkReal(-1.00000000000000))*(r01)*(x361)*(x364)))+(((sj9)*(x366)))+(((IkReal(-1.00000000000000))*(cj9)*(x360)*(x364)))+(((sj9)*(x358)*(x362)))+(((x363)*(x365))));
evalcond[2]=((((x361)*(x365)))+(((IkReal(-1.00000000000000))*(sj9)*(x367)))+(((IkReal(-1.00000000000000))*(cj9)*(x366)))+(((IkReal(-1.00000000000000))*(cj9)*(x362)*(x364)))+(((IkReal(-1.00000000000000))*(sj9)*(x360)*(x364)))+(((r01)*(x358)*(x363))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x368=((IkReal(0.0100000000000000))*(cj14));
IkReal x369=((r10)*(sj9));
IkReal x370=((cj9)*(r11));
IkReal x371=((sj13)*(sj14));
IkReal x372=((cj9)*(r00));
IkReal x373=((IkReal(0.374290000000000))*(cj14));
IkReal x374=((cj9)*(r01));
IkReal x375=((r01)*(sj9));
IkReal x376=((IkReal(0.0100000000000000))*(sj14));
IkReal x377=((r00)*(sj9));
IkReal x378=((IkReal(0.374290000000000))*(sj14));
IkReal x379=((cj13)*(r02));
IkReal x380=((cj9)*(r12));
IkReal x381=((IkReal(1.00000000000000))*(sj9));
IkReal x382=((IkReal(1.00000000000000))*(cj9));
IkReal x383=((r11)*(sj9));
IkReal x384=((cj9)*(r10));
IkReal x385=((cj14)*(sj13));
IkReal x386=((IkReal(1.00000000000000))*(cj13));
IkReal x387=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x385)))+(((IkReal(-1.00000000000000))*(r21)*(x371)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((r20)*(x378)))+(((IkReal(-1.00000000000000))*(r20)*(x368)))+(pz)+(((r21)*(x373)))+(((r21)*(x376))));
evalcond[3]=((((sj14)*(x377)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x382)))+(((IkReal(-1.00000000000000))*(cj14)*(x370)))+(((cj14)*(x375))));
evalcond[4]=((IkReal(1.00000000000000))+(((x377)*(x385)))+(((x370)*(x371)))+(((IkReal(-1.00000000000000))*(x380)*(x386)))+(((IkReal(-1.00000000000000))*(x371)*(x375)))+(((sj9)*(x379)))+(((IkReal(-1.00000000000000))*(r10)*(x382)*(x385))));
evalcond[5]=((((x377)*(x387)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x381)))+(((cj13)*(sj14)*(x370)))+(((sj13)*(x380)))+(((IkReal(-1.00000000000000))*(sj14)*(x375)*(x386)))+(((IkReal(-1.00000000000000))*(r10)*(x382)*(x387))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x381)))+(((IkReal(-1.00000000000000))*(x369)*(x385)))+(((IkReal(-1.00000000000000))*(x379)*(x382)))+(((x371)*(x383)))+(((IkReal(-1.00000000000000))*(x372)*(x385)))+(((x371)*(x374))));
evalcond[7]=((((IkReal(-1.00000000000000))*(py)*(x382)))+(((IkReal(-1.00000000000000))*(x368)*(x377)))+(((x375)*(x376)))+(((IkReal(-1.00000000000000))*(x370)*(x376)))+(((IkReal(-1.00000000000000))*(x370)*(x373)))+(((x368)*(x384)))+(((x377)*(x378)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x378)*(x384)))+(((x373)*(x375))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(py)*(x381)))+(((IkReal(-1.00000000000000))*(x373)*(x383)))+(((IkReal(-1.00000000000000))*(x372)*(x378)))+(((IkReal(-1.00000000000000))*(x376)*(x383)))+(((IkReal(-1.00000000000000))*(px)*(x382)))+(((IkReal(-1.00000000000000))*(x374)*(x376)))+(((IkReal(-1.00000000000000))*(x373)*(x374)))+(((IkReal(-1.00000000000000))*(x369)*(x378)))+(((x368)*(x372)))+(((x368)*(x369))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x388=IKcos(j12);
IkReal x389=((cj13)*(sj9));
IkReal x390=((IkReal(1.00000000000000))*(cj14));
IkReal x391=((cj13)*(sj14));
IkReal x392=((cj9)*(r00));
IkReal x393=((cj9)*(r01));
IkReal x394=((IkReal(1.00000000000000))*(sj14));
IkReal x395=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x395)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x388)+(((IkReal(-1.00000000000000))*(r21)*(x391))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x388)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x390)))+(((IkReal(-1.00000000000000))*(x390)*(x393)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x394)))+(((IkReal(-1.00000000000000))*(x392)*(x394))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(r10)*(x389)*(x390)))+(((cj9)*(r02)*(sj13)))+(((x391)*(x393)))+(((r11)*(sj14)*(x389)))+(((IkReal(-1.00000000000000))*(cj13)*(x390)*(x392)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x396=((IkReal(0.0100000000000000))*(cj14));
IkReal x397=((r10)*(sj9));
IkReal x398=((cj9)*(r11));
IkReal x399=((sj13)*(sj14));
IkReal x400=((cj9)*(r00));
IkReal x401=((IkReal(0.374290000000000))*(cj14));
IkReal x402=((cj9)*(r01));
IkReal x403=((r01)*(sj9));
IkReal x404=((IkReal(0.0100000000000000))*(sj14));
IkReal x405=((r00)*(sj9));
IkReal x406=((IkReal(0.374290000000000))*(sj14));
IkReal x407=((cj13)*(r02));
IkReal x408=((cj9)*(r12));
IkReal x409=((IkReal(1.00000000000000))*(sj9));
IkReal x410=((IkReal(1.00000000000000))*(cj9));
IkReal x411=((r11)*(sj9));
IkReal x412=((cj9)*(r10));
IkReal x413=((cj14)*(sj13));
IkReal x414=((IkReal(1.00000000000000))*(cj13));
IkReal x415=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x399)))+(((r20)*(x413)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x396)))+(pz)+(((r21)*(x404)))+(((r21)*(x401)))+(((r20)*(x406))));
evalcond[3]=((((cj14)*(x403)))+(((IkReal(-1.00000000000000))*(cj14)*(x398)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x410)))+(((sj14)*(x405))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x410)*(x413)))+(((x405)*(x413)))+(((x398)*(x399)))+(((IkReal(-1.00000000000000))*(x399)*(x403)))+(((sj9)*(x407)))+(((IkReal(-1.00000000000000))*(x408)*(x414))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x410)*(x415)))+(((sj13)*(x408)))+(((x405)*(x415)))+(((IkReal(-1.00000000000000))*(sj14)*(x403)*(x414)))+(((cj13)*(sj14)*(x398)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x409))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x397)*(x413)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x409)))+(((IkReal(-1.00000000000000))*(x407)*(x410)))+(((x399)*(x402)))+(((x399)*(x411)))+(((IkReal(-1.00000000000000))*(x400)*(x413))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x406)*(x412)))+(((x405)*(x406)))+(((IkReal(-1.00000000000000))*(x398)*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x404)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x410)))+(((IkReal(-1.00000000000000))*(x396)*(x405)))+(((x403)*(x404)))+(((x401)*(x403)))+(((x396)*(x412))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(px)*(x410)))+(((x396)*(x397)))+(((IkReal(-1.00000000000000))*(x402)*(x404)))+(((IkReal(-1.00000000000000))*(x401)*(x402)))+(((IkReal(-1.00000000000000))*(x401)*(x411)))+(((IkReal(-1.00000000000000))*(x400)*(x406)))+(((IkReal(-1.00000000000000))*(x404)*(x411)))+(((IkReal(-1.00000000000000))*(x397)*(x406)))+(((IkReal(-1.00000000000000))*(py)*(x409)))+(((x396)*(x400))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x416=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(x416)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x416))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(x416)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x416)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(x416)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x416)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x417=IKsin(j12);
IkReal x418=((cj13)*(sj9));
IkReal x419=((IkReal(1.00000000000000))*(cj14));
IkReal x420=((cj13)*(sj14));
IkReal x421=((cj9)*(r00));
IkReal x422=((cj9)*(r01));
IkReal x423=((IkReal(1.00000000000000))*(sj14));
IkReal x424=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x417));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x420)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x424)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x421)*(x423)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x419)))+(((IkReal(-1.00000000000000))*(x424)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x423)))+(((IkReal(-1.00000000000000))*(x419)*(x422))));
evalcond[3]=((((x420)*(x422)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r10)*(x418)*(x419)))+(((r11)*(sj14)*(x418)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x419)*(x421)))+(((IkReal(-1.00000000000000))*(x417))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x425=((IkReal(0.0100000000000000))*(cj14));
IkReal x426=((r10)*(sj9));
IkReal x427=((cj9)*(r11));
IkReal x428=((sj13)*(sj14));
IkReal x429=((cj14)*(r21));
IkReal x430=((cj9)*(r00));
IkReal x431=((IkReal(0.374290000000000))*(cj14));
IkReal x432=((cj9)*(r01));
IkReal x433=((r01)*(sj9));
IkReal x434=((IkReal(0.0100000000000000))*(sj14));
IkReal x435=((IkReal(1.00000000000000))*(sj13));
IkReal x436=((r00)*(sj9));
IkReal x437=((IkReal(0.374290000000000))*(sj14));
IkReal x438=((cj13)*(sj9));
IkReal x439=((IkReal(1.00000000000000))*(cj13));
IkReal x440=((IkReal(1.00000000000000))*(py));
IkReal x441=((r11)*(sj9));
IkReal x442=((cj9)*(r10));
IkReal x443=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x429));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x428)))+(((r20)*(x443)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x434)))+(((IkReal(-1.00000000000000))*(r20)*(x425)))+(((IkReal(0.374290000000000))*(x429)))+(pz)+(((r20)*(x437))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x435)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x439))));
evalcond[5]=((((x427)*(x428)))+(((r02)*(x438)))+(((IkReal(-1.00000000000000))*(x428)*(x433)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x439)))+(((IkReal(-1.00000000000000))*(cj14)*(x435)*(x442)))+(((x436)*(x443))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r02)*(x439)))+(((x428)*(x432)))+(((IkReal(-1.00000000000000))*(r12)*(x438)))+(((x428)*(x441)))+(((IkReal(-1.00000000000000))*(cj14)*(x430)*(x435)))+(((IkReal(-1.00000000000000))*(cj14)*(x426)*(x435))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x436)*(x437)))+(((IkReal(-1.00000000000000))*(x437)*(x442)))+(((IkReal(-1.00000000000000))*(x427)*(x431)))+(((IkReal(-1.00000000000000))*(x427)*(x434)))+(((x425)*(x442)))+(((IkReal(-1.00000000000000))*(cj9)*(x440)))+(((x431)*(x433)))+(((px)*(sj9)))+(((x433)*(x434)))+(((IkReal(-1.00000000000000))*(x425)*(x436))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x430)*(x437)))+(((x425)*(x426)))+(((IkReal(-1.00000000000000))*(sj9)*(x440)))+(((IkReal(-1.00000000000000))*(x431)*(x432)))+(((x425)*(x430)))+(((IkReal(-1.00000000000000))*(x432)*(x434)))+(((IkReal(-1.00000000000000))*(x434)*(x441)))+(((IkReal(-1.00000000000000))*(x431)*(x441)))+(((IkReal(-1.00000000000000))*(x426)*(x437)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x444=((r00)*(sj14));
IkReal x445=((cj14)*(sj9));
IkReal x446=((IkReal(1.00000000000000))*(r11));
IkReal x447=((IkReal(1.00000000000000))*(cj9));
IkReal x448=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x446)))+(((sj9)*(x444)))+(((r01)*(x445)))+(((IkReal(-1.00000000000000))*(x447)*(x448))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x444)*(x447)))+(((IkReal(-1.00000000000000))*(x445)*(x446)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x447)))+(((IkReal(-1.00000000000000))*(sj9)*(x448))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x446)))+(((sj9)*(x444)))+(((r01)*(x445)))+(((IkReal(-1.00000000000000))*(x447)*(x448)))))+IKsqr(((((IkReal(-1.00000000000000))*(x444)*(x447)))+(((IkReal(-1.00000000000000))*(x445)*(x446)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x447)))+(((IkReal(-1.00000000000000))*(sj9)*(x448)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x446)))+(((sj9)*(x444)))+(((r01)*(x445)))+(((IkReal(-1.00000000000000))*(x447)*(x448)))), ((((IkReal(-1.00000000000000))*(x444)*(x447)))+(((IkReal(-1.00000000000000))*(x445)*(x446)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x447)))+(((IkReal(-1.00000000000000))*(sj9)*(x448)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x449=IKcos(j12);
IkReal x450=((cj9)*(sj14));
IkReal x451=((IkReal(1.00000000000000))*(r00));
IkReal x452=((cj14)*(sj9));
IkReal x453=((IkReal(1.00000000000000))*(r11));
IkReal x454=((cj13)*(r01));
IkReal x455=((IkReal(1.00000000000000))*(r10));
IkReal x456=((cj9)*(sj13));
IkReal x457=((cj14)*(cj9));
IkReal x458=((sj14)*(sj9));
IkReal x459=((sj13)*(sj9));
IkReal x460=((cj13)*(r11));
IkReal x461=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x461)))+(((IkReal(-1.00000000000000))*(x453)*(x457)))+(((IkReal(-1.00000000000000))*(x450)*(x455)))+(((r00)*(x458)))+(((r01)*(x452))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x449)))+(((IkReal(-1.00000000000000))*(x455)*(x458)))+(((IkReal(-1.00000000000000))*(x452)*(x453)))+(((IkReal(-1.00000000000000))*(x450)*(x451)))+(((IkReal(-1.00000000000000))*(r01)*(x457))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x455)*(x457)))+(((cj13)*(r00)*(x452)))+(((IkReal(-1.00000000000000))*(r02)*(x459)))+(x449)+(((r12)*(x456)))+(((x450)*(x460)))+(((IkReal(-1.00000000000000))*(x454)*(x458))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x452)*(x455)))+(((IkReal(-1.00000000000000))*(x461)))+(((r12)*(x459)))+(((IkReal(-1.00000000000000))*(cj13)*(x451)*(x457)))+(((r02)*(x456)))+(((x450)*(x454)))+(((x458)*(x460))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x462=((IkReal(0.0100000000000000))*(cj14));
IkReal x463=((r10)*(sj9));
IkReal x464=((cj9)*(r11));
IkReal x465=((sj13)*(sj14));
IkReal x466=((cj14)*(r21));
IkReal x467=((cj9)*(r00));
IkReal x468=((IkReal(0.374290000000000))*(cj14));
IkReal x469=((cj9)*(r01));
IkReal x470=((r01)*(sj9));
IkReal x471=((IkReal(0.0100000000000000))*(sj14));
IkReal x472=((IkReal(1.00000000000000))*(sj13));
IkReal x473=((r00)*(sj9));
IkReal x474=((IkReal(0.374290000000000))*(sj14));
IkReal x475=((cj13)*(sj9));
IkReal x476=((IkReal(1.00000000000000))*(cj13));
IkReal x477=((IkReal(1.00000000000000))*(py));
IkReal x478=((r11)*(sj9));
IkReal x479=((cj9)*(r10));
IkReal x480=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x466));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x480)))+(((IkReal(-1.00000000000000))*(r21)*(x465)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x471)))+(((r20)*(x474)))+(pz)+(((IkReal(0.374290000000000))*(x466)))+(((IkReal(-1.00000000000000))*(r20)*(x462))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x472)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x476))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x472)*(x479)))+(((r02)*(x475)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x476)))+(((x464)*(x465)))+(((IkReal(-1.00000000000000))*(x465)*(x470)))+(((x473)*(x480))));
evalcond[6]=((((x465)*(x469)))+(((x465)*(x478)))+(((IkReal(-1.00000000000000))*(cj14)*(x467)*(x472)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x476)))+(((IkReal(-1.00000000000000))*(cj14)*(x463)*(x472)))+(((IkReal(-1.00000000000000))*(r12)*(x475))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x462)*(x473)))+(((x462)*(x479)))+(((x473)*(x474)))+(((x470)*(x471)))+(((IkReal(-1.00000000000000))*(x464)*(x468)))+(((IkReal(-1.00000000000000))*(x464)*(x471)))+(((IkReal(-1.00000000000000))*(cj9)*(x477)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x474)*(x479)))+(((x468)*(x470))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x467)*(x474)))+(((IkReal(-1.00000000000000))*(x468)*(x478)))+(((IkReal(-1.00000000000000))*(x469)*(x471)))+(((IkReal(-1.00000000000000))*(x468)*(x469)))+(((IkReal(-1.00000000000000))*(x471)*(x478)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((x462)*(x463)))+(((x462)*(x467)))+(((IkReal(-1.00000000000000))*(x463)*(x474)))+(((IkReal(-1.00000000000000))*(sj9)*(x477))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x481=((cj14)*(r11));
IkReal x482=((IkReal(1.00000000000000))*(sj9));
IkReal x483=((cj14)*(r01));
IkReal x484=((r00)*(sj14));
IkReal x485=((r10)*(sj14));
IkReal x486=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x481)))+(((cj9)*(x485)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((IkReal(-1.00000000000000))*(x482)*(x483))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(x483)*(x486)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(-1.00000000000000))*(x482)*(x485))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x481)))+(((cj9)*(x485)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((IkReal(-1.00000000000000))*(x482)*(x483)))))+IKsqr(((((IkReal(-1.00000000000000))*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(x483)*(x486)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x481)))+(((cj9)*(x485)))+(((IkReal(-1.00000000000000))*(x482)*(x484)))+(((IkReal(-1.00000000000000))*(x482)*(x483)))), ((((IkReal(-1.00000000000000))*(x484)*(x486)))+(((IkReal(-1.00000000000000))*(x483)*(x486)))+(((IkReal(-1.00000000000000))*(x481)*(x482)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x487=IKsin(j12);
IkReal x488=((cj13)*(r10));
IkReal x489=((cj9)*(sj14));
IkReal x490=((cj13)*(r01));
IkReal x491=((IkReal(1.00000000000000))*(r10));
IkReal x492=((cj14)*(r01));
IkReal x493=((cj9)*(sj13));
IkReal x494=((IkReal(1.00000000000000))*(cj9));
IkReal x495=((sj14)*(sj9));
IkReal x496=((sj13)*(sj9));
IkReal x497=((cj13)*(r11));
IkReal x498=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x499=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x500=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x494)))+(((IkReal(-1.00000000000000))*(x489)*(x491)))+(x487)+(((r00)*(x495)))+(((sj9)*(x492))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x498)))+(((IkReal(-1.00000000000000))*(x491)*(x495)))+(((IkReal(-1.00000000000000))*(r00)*(x489)))+(((IkReal(-1.00000000000000))*(r11)*(x499)))+(((IkReal(-1.00000000000000))*(x492)*(x494))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x488)*(x494)))+(((IkReal(-1.00000000000000))*(x498)))+(((x489)*(x497)))+(((r12)*(x493)))+(((IkReal(-1.00000000000000))*(r02)*(x496)))+(((sj9)*(x500)))+(((IkReal(-1.00000000000000))*(x490)*(x495))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x488)*(x499)))+(((r02)*(x493)))+(((x495)*(x497)))+(((x489)*(x490)))+(((IkReal(-1.00000000000000))*(x487)))+(((IkReal(-1.00000000000000))*(x494)*(x500)))+(((r12)*(x496))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x501=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x501)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x501)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x501)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x501)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x501)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x501)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x502=IKsin(j12);
IkReal x503=IKcos(j12);
IkReal x504=((IkReal(1.00000000000000))*(sj13));
IkReal x505=((cj13)*(r10));
IkReal x506=((cj9)*(sj14));
IkReal x507=((cj13)*(r01));
IkReal x508=((IkReal(1.00000000000000))*(r10));
IkReal x509=((r12)*(sj13));
IkReal x510=((cj13)*(sj14));
IkReal x511=((cj14)*(r01));
IkReal x512=((cj13)*(cj14));
IkReal x513=((IkReal(1.00000000000000))*(cj9));
IkReal x514=((sj14)*(sj9));
IkReal x515=((IkReal(1.00000000000000))*(x502));
IkReal x516=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x515))));
evalcond[1]=((((cj11)*(x503)))+(((IkReal(-1.00000000000000))*(r22)*(x504)))+(((r20)*(x512)))+(((IkReal(-1.00000000000000))*(r21)*(x510))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x506)*(x508)))+(((IkReal(-1.00000000000000))*(sj11)*(x515)))+(((sj9)*(x511)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x513)))+(((r00)*(x514))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x511)*(x513)))+(((IkReal(-1.00000000000000))*(r11)*(x516)))+(((IkReal(-1.00000000000000))*(r00)*(x506)))+(((IkReal(-1.00000000000000))*(x503)))+(((IkReal(-1.00000000000000))*(x508)*(x514))));
evalcond[4]=((((r00)*(sj9)*(x512)))+(((cj9)*(x509)))+(((IkReal(-1.00000000000000))*(cj14)*(x505)*(x513)))+(((IkReal(-1.00000000000000))*(x507)*(x514)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x504)))+(((cj13)*(r11)*(x506)))+(((sj11)*(x503))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((x506)*(x507)))+(((IkReal(-1.00000000000000))*(r00)*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(x505)*(x516)))+(((r11)*(sj9)*(x510)))+(((IkReal(-1.00000000000000))*(x515)))+(((sj9)*(x509))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x517=((IkReal(1.00000000000000))*(cj14));
IkReal x518=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x517)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x518)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x517)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x518))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x517)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x518)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x517)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x518)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x517)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x518)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x517)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x518)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x519=IKsin(j12);
IkReal x520=IKcos(j12);
IkReal x521=((IkReal(1.00000000000000))*(sj13));
IkReal x522=((cj13)*(r10));
IkReal x523=((cj9)*(sj14));
IkReal x524=((cj13)*(r01));
IkReal x525=((IkReal(1.00000000000000))*(r10));
IkReal x526=((r12)*(sj13));
IkReal x527=((cj13)*(sj14));
IkReal x528=((cj14)*(r01));
IkReal x529=((cj13)*(cj14));
IkReal x530=((IkReal(1.00000000000000))*(cj9));
IkReal x531=((sj14)*(sj9));
IkReal x532=((IkReal(1.00000000000000))*(x519));
IkReal x533=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x532))));
evalcond[1]=((((r20)*(x529)))+(((IkReal(-1.00000000000000))*(r21)*(x527)))+(((cj11)*(x520)))+(((IkReal(-1.00000000000000))*(r22)*(x521))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x532)))+(((IkReal(-1.00000000000000))*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x530)))+(((sj9)*(x528)))+(((r00)*(x531))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x525)*(x531)))+(((IkReal(-1.00000000000000))*(x520)))+(((IkReal(-1.00000000000000))*(x528)*(x530)))+(((IkReal(-1.00000000000000))*(r11)*(x533)))+(((IkReal(-1.00000000000000))*(r00)*(x523))));
evalcond[4]=((((cj13)*(r11)*(x523)))+(((IkReal(-1.00000000000000))*(cj14)*(x522)*(x530)))+(((cj9)*(x526)))+(((sj11)*(x520)))+(((IkReal(-1.00000000000000))*(x524)*(x531)))+(((r00)*(sj9)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x521))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x529)*(x530)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x532)))+(((r11)*(sj9)*(x527)))+(((sj9)*(x526)))+(((x523)*(x524)))+(((IkReal(-1.00000000000000))*(x522)*(x533))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst43)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst43)*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((gconst43)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x534=IKsin(j12);
IkReal x535=IKcos(j12);
IkReal x536=((IkReal(1.00000000000000))*(sj13));
IkReal x537=((cj13)*(r10));
IkReal x538=((cj9)*(sj14));
IkReal x539=((cj13)*(r01));
IkReal x540=((IkReal(1.00000000000000))*(r10));
IkReal x541=((r12)*(sj13));
IkReal x542=((cj13)*(sj14));
IkReal x543=((cj14)*(r01));
IkReal x544=((cj13)*(cj14));
IkReal x545=((IkReal(1.00000000000000))*(cj9));
IkReal x546=((sj14)*(sj9));
IkReal x547=((IkReal(1.00000000000000))*(x534));
IkReal x548=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x547))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x536)))+(((r20)*(x544)))+(((IkReal(-1.00000000000000))*(r21)*(x542)))+(((cj11)*(x535))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x545)))+(((IkReal(-1.00000000000000))*(sj11)*(x547)))+(((IkReal(-1.00000000000000))*(x538)*(x540)))+(((sj9)*(x543)))+(((r00)*(x546))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x535)))+(((IkReal(-1.00000000000000))*(x540)*(x546)))+(((IkReal(-1.00000000000000))*(x543)*(x545)))+(((IkReal(-1.00000000000000))*(r00)*(x538)))+(((IkReal(-1.00000000000000))*(r11)*(x548))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x537)*(x545)))+(((IkReal(-1.00000000000000))*(x539)*(x546)))+(((cj9)*(x541)))+(((sj11)*(x535)))+(((r00)*(sj9)*(x544)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x536)))+(((cj13)*(r11)*(x538))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x544)*(x545)))+(((IkReal(-1.00000000000000))*(x537)*(x548)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x547)))+(((r11)*(sj9)*(x542)))+(((sj9)*(x541)))+(((x538)*(x539))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x549=((cj14)*(sj11));
IkReal x550=((IkReal(1.00000000000000))*(sj11)*(sj9));
IkReal x551=((IkReal(1.00000000000000))*(cj9)*(sj11));
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(r12)*(x550)))+(((IkReal(-1.00000000000000))*(r02)*(x551))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((r10)*(sj9)*(x549)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x550)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x551)))+(((cj9)*(r00)*(x549))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(r12)*(x550)))+(((IkReal(-1.00000000000000))*(r02)*(x551)))))), ((gconst40)*(((((r10)*(sj9)*(x549)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x550)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x551)))+(((cj9)*(r00)*(x549)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x552=IKsin(j13);
IkReal x553=IKcos(j13);
IkReal x554=((cj14)*(r10));
IkReal x555=((sj14)*(sj9));
IkReal x556=((cj14)*(r00));
IkReal x557=((cj9)*(sj14));
IkReal x558=((IkReal(1.00000000000000))*(x552));
IkReal x559=((r11)*(x552));
IkReal x560=((r02)*(x553));
IkReal x561=((IkReal(1.00000000000000))*(r12)*(x553));
evalcond[0]=((((cj14)*(r20)*(x552)))+(((IkReal(-1.00000000000000))*(sj11)))+(((r22)*(x553)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x558))));
evalcond[1]=((((x557)*(x559)))+(cj11)+(((IkReal(-1.00000000000000))*(cj9)*(x561)))+(((IkReal(-1.00000000000000))*(r01)*(x555)*(x558)))+(((sj9)*(x552)*(x556)))+(((IkReal(-1.00000000000000))*(cj9)*(x554)*(x558)))+(((sj9)*(x560))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x554)*(x558)))+(((IkReal(-1.00000000000000))*(cj9)*(x560)))+(((r01)*(x552)*(x557)))+(((x555)*(x559)))+(((IkReal(-1.00000000000000))*(sj9)*(x561)))+(((IkReal(-1.00000000000000))*(cj9)*(x556)*(x558))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst43;
gconst43=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x562=((IkReal(0.0100000000000000))*(cj14));
IkReal x563=((r10)*(sj9));
IkReal x564=((cj9)*(r11));
IkReal x565=((sj13)*(sj14));
IkReal x566=((cj9)*(r00));
IkReal x567=((IkReal(0.374290000000000))*(cj14));
IkReal x568=((cj9)*(r01));
IkReal x569=((r01)*(sj9));
IkReal x570=((IkReal(0.0100000000000000))*(sj14));
IkReal x571=((r00)*(sj9));
IkReal x572=((IkReal(0.374290000000000))*(sj14));
IkReal x573=((cj13)*(r02));
IkReal x574=((cj9)*(r12));
IkReal x575=((IkReal(1.00000000000000))*(sj9));
IkReal x576=((IkReal(1.00000000000000))*(cj9));
IkReal x577=((r11)*(sj9));
IkReal x578=((cj9)*(r10));
IkReal x579=((cj14)*(sj13));
IkReal x580=((IkReal(1.00000000000000))*(cj13));
IkReal x581=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x565)))+(((r20)*(x579)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((r20)*(x572)))+(((r21)*(x567)))+(pz)+(((r21)*(x570)))+(((IkReal(-1.00000000000000))*(r20)*(x562))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x576)))+(((IkReal(-1.00000000000000))*(cj14)*(x564)))+(((sj14)*(x571)))+(((cj14)*(x569))));
evalcond[4]=((IkReal(1.00000000000000))+(((x571)*(x579)))+(((x564)*(x565)))+(((IkReal(-1.00000000000000))*(x565)*(x569)))+(((sj9)*(x573)))+(((IkReal(-1.00000000000000))*(x574)*(x580)))+(((IkReal(-1.00000000000000))*(r10)*(x576)*(x579))));
evalcond[5]=((((sj13)*(x574)))+(((cj13)*(sj14)*(x564)))+(((IkReal(-1.00000000000000))*(r10)*(x576)*(x581)))+(((IkReal(-1.00000000000000))*(sj14)*(x569)*(x580)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x575)))+(((x571)*(x581))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x566)*(x579)))+(((x565)*(x568)))+(((IkReal(-1.00000000000000))*(x573)*(x576)))+(((x565)*(x577)))+(((IkReal(-1.00000000000000))*(x563)*(x579)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x575))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x564)*(x567)))+(((x571)*(x572)))+(((x562)*(x578)))+(((x567)*(x569)))+(((IkReal(-1.00000000000000))*(py)*(x576)))+(((IkReal(-1.00000000000000))*(x564)*(x570)))+(((x569)*(x570)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x572)*(x578)))+(((IkReal(-1.00000000000000))*(x562)*(x571))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x566)*(x572)))+(((IkReal(-1.00000000000000))*(px)*(x576)))+(((IkReal(-1.00000000000000))*(x570)*(x577)))+(((x562)*(x563)))+(((x562)*(x566)))+(((IkReal(-1.00000000000000))*(py)*(x575)))+(((IkReal(-1.00000000000000))*(x563)*(x572)))+(((IkReal(-1.00000000000000))*(x567)*(x577)))+(((IkReal(-1.00000000000000))*(x568)*(x570)))+(((IkReal(-1.00000000000000))*(x567)*(x568))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x582=IKcos(j12);
IkReal x583=((cj13)*(sj9));
IkReal x584=((IkReal(1.00000000000000))*(cj14));
IkReal x585=((cj13)*(sj14));
IkReal x586=((cj9)*(r00));
IkReal x587=((cj9)*(r01));
IkReal x588=((IkReal(1.00000000000000))*(sj14));
IkReal x589=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x589))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x585)))+(x582));
evalcond[2]=((((IkReal(-1.00000000000000))*(x582)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x588)))+(((IkReal(-1.00000000000000))*(x584)*(x587)))+(((IkReal(-1.00000000000000))*(x586)*(x588)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x584))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x583)*(x584)))+(((cj9)*(r02)*(sj13)))+(((x585)*(x587)))+(((IkReal(-1.00000000000000))*(cj13)*(x584)*(x586)))+(((r11)*(sj14)*(x583)))+(((IkReal(-1.00000000000000))*(x589)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x590=((IkReal(0.0100000000000000))*(cj14));
IkReal x591=((r10)*(sj9));
IkReal x592=((cj9)*(r11));
IkReal x593=((sj13)*(sj14));
IkReal x594=((cj9)*(r00));
IkReal x595=((IkReal(0.374290000000000))*(cj14));
IkReal x596=((cj9)*(r01));
IkReal x597=((r01)*(sj9));
IkReal x598=((IkReal(0.0100000000000000))*(sj14));
IkReal x599=((r00)*(sj9));
IkReal x600=((IkReal(0.374290000000000))*(sj14));
IkReal x601=((cj13)*(r02));
IkReal x602=((cj9)*(r12));
IkReal x603=((IkReal(1.00000000000000))*(sj9));
IkReal x604=((IkReal(1.00000000000000))*(cj9));
IkReal x605=((r11)*(sj9));
IkReal x606=((cj9)*(r10));
IkReal x607=((cj14)*(sj13));
IkReal x608=((IkReal(1.00000000000000))*(cj13));
IkReal x609=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x607)))+(((IkReal(-1.00000000000000))*(r21)*(x593)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x590)))+(((r20)*(x600)))+(((r21)*(x598)))+(((r21)*(x595)))+(pz));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x604)))+(((cj14)*(x597)))+(((IkReal(-1.00000000000000))*(cj14)*(x592)))+(((sj14)*(x599))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x602)*(x608)))+(((IkReal(-1.00000000000000))*(x593)*(x597)))+(((sj9)*(x601)))+(((IkReal(-1.00000000000000))*(r10)*(x604)*(x607)))+(((x599)*(x607)))+(((x592)*(x593))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj14)*(x597)*(x608)))+(((sj13)*(x602)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x603)))+(((IkReal(-1.00000000000000))*(r10)*(x604)*(x609)))+(((cj13)*(sj14)*(x592)))+(((x599)*(x609))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x594)*(x607)))+(((IkReal(-1.00000000000000))*(x591)*(x607)))+(((x593)*(x605)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x603)))+(((x593)*(x596)))+(((IkReal(-1.00000000000000))*(x601)*(x604))));
evalcond[7]=((((x595)*(x597)))+(((IkReal(-1.00000000000000))*(x592)*(x595)))+(((IkReal(-1.00000000000000))*(x592)*(x598)))+(((IkReal(-1.00000000000000))*(x590)*(x599)))+(((x590)*(x606)))+(((IkReal(-1.00000000000000))*(x600)*(x606)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x604)))+(((x599)*(x600)))+(((x597)*(x598))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x596)*(x598)))+(((IkReal(-1.00000000000000))*(x598)*(x605)))+(((IkReal(-1.00000000000000))*(x591)*(x600)))+(((IkReal(-1.00000000000000))*(x595)*(x596)))+(((x590)*(x591)))+(((x590)*(x594)))+(((IkReal(-1.00000000000000))*(py)*(x603)))+(((IkReal(-1.00000000000000))*(x594)*(x600)))+(((IkReal(-1.00000000000000))*(px)*(x604)))+(((IkReal(-1.00000000000000))*(x595)*(x605))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x610=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(x610)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x610))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(x610)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x610)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(x610)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x610)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x611=IKsin(j12);
IkReal x612=((cj13)*(sj9));
IkReal x613=((IkReal(1.00000000000000))*(cj14));
IkReal x614=((cj13)*(sj14));
IkReal x615=((cj9)*(r00));
IkReal x616=((cj9)*(r01));
IkReal x617=((IkReal(1.00000000000000))*(sj14));
IkReal x618=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x611));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x618)))+(((IkReal(-1.00000000000000))*(r21)*(x614))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x613)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x617)))+(((IkReal(-1.00000000000000))*(x618)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(x615)*(x617))));
evalcond[3]=((((r11)*(sj14)*(x612)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x611)))+(((x614)*(x616)))+(((IkReal(-1.00000000000000))*(r10)*(x612)*(x613)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x613)*(x615))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x619=((IkReal(0.0100000000000000))*(cj14));
IkReal x620=((r10)*(sj9));
IkReal x621=((cj9)*(r11));
IkReal x622=((sj13)*(sj14));
IkReal x623=((cj14)*(r21));
IkReal x624=((cj9)*(r00));
IkReal x625=((IkReal(0.374290000000000))*(cj14));
IkReal x626=((cj9)*(r01));
IkReal x627=((r01)*(sj9));
IkReal x628=((IkReal(0.0100000000000000))*(sj14));
IkReal x629=((IkReal(1.00000000000000))*(sj13));
IkReal x630=((r00)*(sj9));
IkReal x631=((IkReal(0.374290000000000))*(sj14));
IkReal x632=((cj13)*(sj9));
IkReal x633=((IkReal(1.00000000000000))*(cj13));
IkReal x634=((IkReal(1.00000000000000))*(py));
IkReal x635=((r11)*(sj9));
IkReal x636=((cj9)*(r10));
IkReal x637=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x623));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x622)))+(((r20)*(x637)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x628)))+(((IkReal(-1.00000000000000))*(r20)*(x619)))+(pz)+(((IkReal(0.374290000000000))*(x623)))+(((r20)*(x631))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x633)))+(((IkReal(-1.00000000000000))*(r22)*(x629))));
evalcond[5]=((((r02)*(x632)))+(((IkReal(-1.00000000000000))*(x622)*(x627)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x633)))+(((IkReal(-1.00000000000000))*(cj14)*(x629)*(x636)))+(((x621)*(x622)))+(((x630)*(x637))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x632)))+(((IkReal(-1.00000000000000))*(cj14)*(x620)*(x629)))+(((IkReal(-1.00000000000000))*(cj14)*(x624)*(x629)))+(((x622)*(x635)))+(((x622)*(x626)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x633))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x631)*(x636)))+(((IkReal(-1.00000000000000))*(x621)*(x628)))+(((IkReal(-1.00000000000000))*(x621)*(x625)))+(((x619)*(x636)))+(((x625)*(x627)))+(((IkReal(-1.00000000000000))*(x619)*(x630)))+(((px)*(sj9)))+(((x630)*(x631)))+(((x627)*(x628)))+(((IkReal(-1.00000000000000))*(cj9)*(x634))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x634)))+(((IkReal(-1.00000000000000))*(x628)*(x635)))+(((x619)*(x624)))+(((x619)*(x620)))+(((IkReal(-1.00000000000000))*(x620)*(x631)))+(((IkReal(-1.00000000000000))*(x624)*(x631)))+(((IkReal(-1.00000000000000))*(x625)*(x626)))+(((IkReal(-1.00000000000000))*(x625)*(x635)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x626)*(x628))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x638=((r00)*(sj14));
IkReal x639=((cj14)*(sj9));
IkReal x640=((IkReal(1.00000000000000))*(r11));
IkReal x641=((IkReal(1.00000000000000))*(cj9));
IkReal x642=((r10)*(sj14));
if( IKabs(((((sj9)*(x638)))+(((IkReal(-1.00000000000000))*(x641)*(x642)))+(((r01)*(x639)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x640))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x641)))+(((IkReal(-1.00000000000000))*(sj9)*(x642)))+(((IkReal(-1.00000000000000))*(x638)*(x641))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj9)*(x638)))+(((IkReal(-1.00000000000000))*(x641)*(x642)))+(((r01)*(x639)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x640)))))+IKsqr(((((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x641)))+(((IkReal(-1.00000000000000))*(sj9)*(x642)))+(((IkReal(-1.00000000000000))*(x638)*(x641)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((sj9)*(x638)))+(((IkReal(-1.00000000000000))*(x641)*(x642)))+(((r01)*(x639)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x640)))), ((((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x641)))+(((IkReal(-1.00000000000000))*(sj9)*(x642)))+(((IkReal(-1.00000000000000))*(x638)*(x641)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x643=IKcos(j12);
IkReal x644=((cj9)*(sj14));
IkReal x645=((IkReal(1.00000000000000))*(r00));
IkReal x646=((cj14)*(sj9));
IkReal x647=((IkReal(1.00000000000000))*(r11));
IkReal x648=((cj13)*(r01));
IkReal x649=((IkReal(1.00000000000000))*(r10));
IkReal x650=((cj9)*(sj13));
IkReal x651=((cj14)*(cj9));
IkReal x652=((sj14)*(sj9));
IkReal x653=((sj13)*(sj9));
IkReal x654=((cj13)*(r11));
IkReal x655=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x647)*(x651)))+(((IkReal(-1.00000000000000))*(x655)))+(((IkReal(-1.00000000000000))*(x644)*(x649)))+(((r01)*(x646)))+(((r00)*(x652))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x643)))+(((IkReal(-1.00000000000000))*(x646)*(x647)))+(((IkReal(-1.00000000000000))*(x644)*(x645)))+(((IkReal(-1.00000000000000))*(r01)*(x651)))+(((IkReal(-1.00000000000000))*(x649)*(x652))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj13)*(x649)*(x651)))+(((IkReal(-1.00000000000000))*(r02)*(x653)))+(((x644)*(x654)))+(x643)+(((IkReal(-1.00000000000000))*(x648)*(x652)))+(((cj13)*(r00)*(x646)))+(((r12)*(x650))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x646)*(x649)))+(((x644)*(x648)))+(((IkReal(-1.00000000000000))*(cj13)*(x645)*(x651)))+(((r02)*(x650)))+(((x652)*(x654)))+(((IkReal(-1.00000000000000))*(x655)))+(((r12)*(x653))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x656=((IkReal(0.0100000000000000))*(cj14));
IkReal x657=((r10)*(sj9));
IkReal x658=((cj9)*(r11));
IkReal x659=((sj13)*(sj14));
IkReal x660=((cj14)*(r21));
IkReal x661=((cj9)*(r00));
IkReal x662=((IkReal(0.374290000000000))*(cj14));
IkReal x663=((cj9)*(r01));
IkReal x664=((r01)*(sj9));
IkReal x665=((IkReal(0.0100000000000000))*(sj14));
IkReal x666=((IkReal(1.00000000000000))*(sj13));
IkReal x667=((r00)*(sj9));
IkReal x668=((IkReal(0.374290000000000))*(sj14));
IkReal x669=((cj13)*(sj9));
IkReal x670=((IkReal(1.00000000000000))*(cj13));
IkReal x671=((IkReal(1.00000000000000))*(py));
IkReal x672=((r11)*(sj9));
IkReal x673=((cj9)*(r10));
IkReal x674=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x660));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x674)))+(((IkReal(-1.00000000000000))*(r21)*(x659)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x668)))+(((IkReal(0.374290000000000))*(x660)))+(((r21)*(x665)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x656))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x670)))+(((IkReal(-1.00000000000000))*(r22)*(x666))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x666)*(x673)))+(((x667)*(x674)))+(((r02)*(x669)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x670)))+(((IkReal(-1.00000000000000))*(x659)*(x664)))+(((x658)*(x659))));
evalcond[6]=((((x659)*(x672)))+(((IkReal(-1.00000000000000))*(cj14)*(x661)*(x666)))+(((IkReal(-1.00000000000000))*(r12)*(x669)))+(((IkReal(-1.00000000000000))*(cj14)*(x657)*(x666)))+(((x659)*(x663)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x670))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x667)*(x668)))+(((x664)*(x665)))+(((x662)*(x664)))+(((IkReal(-1.00000000000000))*(x668)*(x673)))+(((IkReal(-1.00000000000000))*(x658)*(x662)))+(((IkReal(-1.00000000000000))*(x658)*(x665)))+(((IkReal(-1.00000000000000))*(cj9)*(x671)))+(((IkReal(-1.00000000000000))*(x656)*(x667)))+(((px)*(sj9)))+(((x656)*(x673))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x662)*(x663)))+(((IkReal(-1.00000000000000))*(x663)*(x665)))+(((IkReal(-1.00000000000000))*(x662)*(x672)))+(((IkReal(-1.00000000000000))*(sj9)*(x671)))+(((x656)*(x661)))+(((IkReal(-1.00000000000000))*(x661)*(x668)))+(((IkReal(-1.00000000000000))*(x665)*(x672)))+(((IkReal(-1.00000000000000))*(x657)*(x668)))+(((x656)*(x657)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x675=((cj14)*(r11));
IkReal x676=((IkReal(1.00000000000000))*(sj9));
IkReal x677=((cj14)*(r01));
IkReal x678=((r00)*(sj14));
IkReal x679=((r10)*(sj14));
IkReal x680=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x676)*(x677)))+(((IkReal(-1.00000000000000))*(x676)*(x678)))+(((cj9)*(x675)))+(((cj9)*(x679))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(x678)*(x680)))+(((IkReal(-1.00000000000000))*(x676)*(x679)))+(((IkReal(-1.00000000000000))*(x677)*(x680))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x676)*(x677)))+(((IkReal(-1.00000000000000))*(x676)*(x678)))+(((cj9)*(x675)))+(((cj9)*(x679)))))+IKsqr(((((IkReal(-1.00000000000000))*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(x678)*(x680)))+(((IkReal(-1.00000000000000))*(x676)*(x679)))+(((IkReal(-1.00000000000000))*(x677)*(x680)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x676)*(x677)))+(((IkReal(-1.00000000000000))*(x676)*(x678)))+(((cj9)*(x675)))+(((cj9)*(x679)))), ((((IkReal(-1.00000000000000))*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(x678)*(x680)))+(((IkReal(-1.00000000000000))*(x676)*(x679)))+(((IkReal(-1.00000000000000))*(x677)*(x680)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x681=IKsin(j12);
IkReal x682=((cj13)*(r10));
IkReal x683=((cj9)*(sj14));
IkReal x684=((cj13)*(r01));
IkReal x685=((IkReal(1.00000000000000))*(r10));
IkReal x686=((cj14)*(r01));
IkReal x687=((cj9)*(sj13));
IkReal x688=((IkReal(1.00000000000000))*(cj9));
IkReal x689=((sj14)*(sj9));
IkReal x690=((sj13)*(sj9));
IkReal x691=((cj13)*(r11));
IkReal x692=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x693=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x694=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x688)))+(((sj9)*(x686)))+(x681)+(((r00)*(x689)))+(((IkReal(-1.00000000000000))*(x683)*(x685))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x685)*(x689)))+(((IkReal(-1.00000000000000))*(x686)*(x688)))+(((IkReal(-1.00000000000000))*(r11)*(x693)))+(((IkReal(-1.00000000000000))*(r00)*(x683)))+(((IkReal(-1.00000000000000))*(x692))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x684)*(x689)))+(((IkReal(-1.00000000000000))*(r02)*(x690)))+(((IkReal(-1.00000000000000))*(cj14)*(x682)*(x688)))+(((IkReal(-1.00000000000000))*(x692)))+(((sj9)*(x694)))+(((r12)*(x687)))+(((x683)*(x691))));
evalcond[3]=((((x683)*(x684)))+(((x689)*(x691)))+(((IkReal(-1.00000000000000))*(x682)*(x693)))+(((IkReal(-1.00000000000000))*(x688)*(x694)))+(((r12)*(x690)))+(((IkReal(-1.00000000000000))*(x681)))+(((r02)*(x687))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x695=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x695)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x695)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x695)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x695)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x695)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x695)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x696=IKsin(j12);
IkReal x697=IKcos(j12);
IkReal x698=((IkReal(1.00000000000000))*(sj13));
IkReal x699=((cj13)*(r10));
IkReal x700=((cj9)*(sj14));
IkReal x701=((cj13)*(r01));
IkReal x702=((IkReal(1.00000000000000))*(r10));
IkReal x703=((r12)*(sj13));
IkReal x704=((cj13)*(sj14));
IkReal x705=((cj14)*(r01));
IkReal x706=((cj13)*(cj14));
IkReal x707=((IkReal(1.00000000000000))*(cj9));
IkReal x708=((sj14)*(sj9));
IkReal x709=((IkReal(1.00000000000000))*(x696));
IkReal x710=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x709)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x704)))+(((cj11)*(x697)))+(((r20)*(x706)))+(((IkReal(-1.00000000000000))*(r22)*(x698))));
evalcond[2]=((((sj9)*(x705)))+(((IkReal(-1.00000000000000))*(sj11)*(x709)))+(((r00)*(x708)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x707)))+(((IkReal(-1.00000000000000))*(x700)*(x702))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x710)))+(((IkReal(-1.00000000000000))*(x702)*(x708)))+(((IkReal(-1.00000000000000))*(r00)*(x700)))+(((IkReal(-1.00000000000000))*(x705)*(x707)))+(((IkReal(-1.00000000000000))*(x697))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x699)*(x707)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x698)))+(((r00)*(sj9)*(x706)))+(((cj9)*(x703)))+(((sj11)*(x697)))+(((cj13)*(r11)*(x700)))+(((IkReal(-1.00000000000000))*(x701)*(x708))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x706)*(x707)))+(((sj9)*(x703)))+(((x700)*(x701)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x709)))+(((IkReal(-1.00000000000000))*(x699)*(x710)))+(((r11)*(sj9)*(x704))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x711=((IkReal(1.00000000000000))*(cj14));
IkReal x712=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x711)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x711)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x712)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x712))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x711)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x711)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x712)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x712)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x711)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x711)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x712)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x712)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x713=IKsin(j12);
IkReal x714=IKcos(j12);
IkReal x715=((IkReal(1.00000000000000))*(sj13));
IkReal x716=((cj13)*(r10));
IkReal x717=((cj9)*(sj14));
IkReal x718=((cj13)*(r01));
IkReal x719=((IkReal(1.00000000000000))*(r10));
IkReal x720=((r12)*(sj13));
IkReal x721=((cj13)*(sj14));
IkReal x722=((cj14)*(r01));
IkReal x723=((cj13)*(cj14));
IkReal x724=((IkReal(1.00000000000000))*(cj9));
IkReal x725=((sj14)*(sj9));
IkReal x726=((IkReal(1.00000000000000))*(x713));
IkReal x727=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x726))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x715)))+(((IkReal(-1.00000000000000))*(r21)*(x721)))+(((r20)*(x723)))+(((cj11)*(x714))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x724)))+(((sj9)*(x722)))+(((IkReal(-1.00000000000000))*(sj11)*(x726)))+(((r00)*(x725)))+(((IkReal(-1.00000000000000))*(x717)*(x719))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x717)))+(((IkReal(-1.00000000000000))*(x714)))+(((IkReal(-1.00000000000000))*(x722)*(x724)))+(((IkReal(-1.00000000000000))*(x719)*(x725)))+(((IkReal(-1.00000000000000))*(r11)*(x727))));
evalcond[4]=((((sj11)*(x714)))+(((r00)*(sj9)*(x723)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x715)))+(((IkReal(-1.00000000000000))*(cj14)*(x716)*(x724)))+(((cj13)*(r11)*(x717)))+(((cj9)*(x720)))+(((IkReal(-1.00000000000000))*(x718)*(x725))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x723)*(x724)))+(((sj9)*(x720)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x726)))+(((x717)*(x718)))+(((r11)*(sj9)*(x721)))+(((IkReal(-1.00000000000000))*(x716)*(x727))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst43)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst43)*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((gconst43)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x728=IKsin(j12);
IkReal x729=IKcos(j12);
IkReal x730=((IkReal(1.00000000000000))*(sj13));
IkReal x731=((cj13)*(r10));
IkReal x732=((cj9)*(sj14));
IkReal x733=((cj13)*(r01));
IkReal x734=((IkReal(1.00000000000000))*(r10));
IkReal x735=((r12)*(sj13));
IkReal x736=((cj13)*(sj14));
IkReal x737=((cj14)*(r01));
IkReal x738=((cj13)*(cj14));
IkReal x739=((IkReal(1.00000000000000))*(cj9));
IkReal x740=((sj14)*(sj9));
IkReal x741=((IkReal(1.00000000000000))*(x728));
IkReal x742=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x741))));
evalcond[1]=((((cj11)*(x729)))+(((r20)*(x738)))+(((IkReal(-1.00000000000000))*(r22)*(x730)))+(((IkReal(-1.00000000000000))*(r21)*(x736))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x732)*(x734)))+(((sj9)*(x737)))+(((r00)*(x740)))+(((IkReal(-1.00000000000000))*(sj11)*(x741)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x739))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x742)))+(((IkReal(-1.00000000000000))*(x737)*(x739)))+(((IkReal(-1.00000000000000))*(r00)*(x732)))+(((IkReal(-1.00000000000000))*(x729)))+(((IkReal(-1.00000000000000))*(x734)*(x740))));
evalcond[4]=((((cj9)*(x735)))+(((IkReal(-1.00000000000000))*(cj14)*(x731)*(x739)))+(((r00)*(sj9)*(x738)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x730)))+(((cj13)*(r11)*(x732)))+(((sj11)*(x729)))+(((IkReal(-1.00000000000000))*(x733)*(x740))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((sj9)*(x735)))+(((IkReal(-1.00000000000000))*(x731)*(x742)))+(((IkReal(-1.00000000000000))*(r00)*(x738)*(x739)))+(((r11)*(sj9)*(x736)))+(((IkReal(-1.00000000000000))*(x741)))+(((x732)*(x733))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
IkReal x743=((IkReal(0.0100000000000000))*(sj9));
IkReal x744=((cj9)*(r00));
IkReal x745=((IkReal(0.374290000000000))*(sj14));
IkReal x746=((cj9)*(r01));
IkReal x747=((IkReal(0.374290000000000))*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x746)*(x747)))+(((cj14)*(r10)*(x743)))+(((IkReal(-1.00000000000000))*(x744)*(x745)))+(((IkReal(0.0100000000000000))*(cj14)*(x744)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x745)))+(((IkReal(-1.00000000000000))*(py)*(sj9)))+(((IkReal(-0.0100000000000000))*(sj14)*(x746)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x747)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x743))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x748=((IkReal(0.144927536231884))*(sj14));
IkReal x749=((IkReal(5.42449275362319))*(sj9));
IkReal x750=((cj14)*(cj9));
IkReal x751=((IkReal(5.42449275362319))*(sj14));
IkReal x752=((IkReal(0.144927536231884))*(cj14));
if( IKabs(((((r00)*(sj9)*(x752)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x749)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((IkReal(-1.00000000000000))*(r01)*(sj9)*(x748)))+(((cj9)*(r10)*(x751)))+(((IkReal(-0.144927536231884))*(r10)*(x750)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x749)))+(((IkReal(5.42449275362319))*(r11)*(x750)))+(((cj9)*(r11)*(x748))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(5.42449275362319))*(cj14)*(r21)))+(((r21)*(x748)))+(((IkReal(14.4927536231884))*(pz)))+(((r20)*(x751)))+(((IkReal(-1.00000000000000))*(r20)*(x752))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj9)*(x752)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x749)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((IkReal(-1.00000000000000))*(r01)*(sj9)*(x748)))+(((cj9)*(r10)*(x751)))+(((IkReal(-0.144927536231884))*(r10)*(x750)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x749)))+(((IkReal(5.42449275362319))*(r11)*(x750)))+(((cj9)*(r11)*(x748)))))+IKsqr(((((IkReal(5.42449275362319))*(cj14)*(r21)))+(((r21)*(x748)))+(((IkReal(14.4927536231884))*(pz)))+(((r20)*(x751)))+(((IkReal(-1.00000000000000))*(r20)*(x752)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((r00)*(sj9)*(x752)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x749)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((IkReal(-1.00000000000000))*(r01)*(sj9)*(x748)))+(((cj9)*(r10)*(x751)))+(((IkReal(-0.144927536231884))*(r10)*(x750)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x749)))+(((IkReal(5.42449275362319))*(r11)*(x750)))+(((cj9)*(r11)*(x748)))), ((((IkReal(5.42449275362319))*(cj14)*(r21)))+(((r21)*(x748)))+(((IkReal(14.4927536231884))*(pz)))+(((r20)*(x751)))+(((IkReal(-1.00000000000000))*(r20)*(x752)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x753=((cj9)*(sj14));
IkReal x754=((cj14)*(cj9));
IkReal x755=((IkReal(0.0100000000000000))*(sj9));
IkReal x756=((IkReal(0.374290000000000))*(sj14));
IkReal x757=((IkReal(0.374290000000000))*(cj14));
evalcond[0]=((((r21)*(x757)))+(((IkReal(-0.0100000000000000))*(cj14)*(r20)))+(((IkReal(0.0100000000000000))*(r21)*(sj14)))+(pz)+(((IkReal(-0.0690000000000000))*(IKcos(j11))))+(((r20)*(x756))));
evalcond[1]=((((r00)*(sj9)*(x756)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x755)))+(((IkReal(0.0100000000000000))*(r10)*(x754)))+(((IkReal(0.0690000000000000))*(IKsin(j11))))+(((r01)*(sj9)*(x757)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(py)))+(((IkReal(-0.374290000000000))*(r11)*(x754)))+(((r01)*(sj14)*(x755)))+(((IkReal(-0.0100000000000000))*(r11)*(x753)))+(((IkReal(-0.374290000000000))*(r10)*(x753))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst53;
IkReal x758=((cj14)*(r20));
IkReal x759=((r12)*(sj9));
IkReal x760=((r22)*(sj14));
IkReal x761=((cj9)*(r02));
IkReal x762=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x763=((IkReal(1.00000000000000))*(r21)*(sj14));
gconst53=IKsign(((((cj9)*(r01)*(x760)))+(((x758)*(x759)))+(((x758)*(x761)))+(((r11)*(sj9)*(x760)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x762)))+(((IkReal(-1.00000000000000))*(x761)*(x763)))+(((IkReal(-1.00000000000000))*(x759)*(x763)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x762)))));
IkReal x764=((cj14)*(r20));
IkReal x765=((r12)*(sj9));
IkReal x766=((r22)*(sj14));
IkReal x767=((cj9)*(r02));
IkReal x768=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x769=((IkReal(1.00000000000000))*(r21)*(sj14));
dummyeval[0]=((((cj9)*(r01)*(x766)))+(((IkReal(-1.00000000000000))*(x765)*(x769)))+(((IkReal(-1.00000000000000))*(x767)*(x769)))+(((r11)*(sj9)*(x766)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x768)))+(((x764)*(x767)))+(((x764)*(x765)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x768))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
IkReal x770=((cj14)*(cj9));
IkReal x771=((cj14)*(sj9));
IkReal x772=((r21)*(sj14));
IkReal x773=((IkReal(1.00000000000000))*(r22));
gconst52=IKsign(((((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x773)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x771)))+(((r12)*(r20)*(x770)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r02)*(sj9)*(x772)))+(((IkReal(-1.00000000000000))*(r10)*(x770)*(x773)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x772)))+(((r00)*(r22)*(x771)))));
IkReal x774=((cj14)*(cj9));
IkReal x775=((cj14)*(sj9));
IkReal x776=((r21)*(sj14));
IkReal x777=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x777)))+(((IkReal(-1.00000000000000))*(r10)*(x774)*(x777)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x775)))+(((r12)*(r20)*(x774)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r02)*(sj9)*(x776)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x776)))+(((r00)*(r22)*(x775))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x778=((IkReal(0.0100000000000000))*(cj14));
IkReal x779=((r10)*(sj9));
IkReal x780=((cj14)*(r21));
IkReal x781=((cj9)*(r00));
IkReal x782=((IkReal(0.0100000000000000))*(sj14));
IkReal x783=((r00)*(sj9));
IkReal x784=((IkReal(0.374290000000000))*(sj14));
IkReal x785=((r01)*(sj9));
IkReal x786=((IkReal(1.00000000000000))*(py));
IkReal x787=((cj9)*(r10));
IkReal x788=((IkReal(0.374290000000000))*(cj14));
IkReal x789=((r11)*(sj9));
IkReal x790=((cj9)*(x788));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x780));
evalcond[2]=((((IkReal(0.374290000000000))*(x780)))+(((IkReal(-1.00000000000000))*(r20)*(x778)))+(((r20)*(x784)))+(((r21)*(x782)))+(pz));
evalcond[3]=((IkReal(0.0690000000000000))+(((x785)*(x788)))+(((x782)*(x785)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x782)))+(((x783)*(x784)))+(((x778)*(x787)))+(((IkReal(-1.00000000000000))*(r11)*(x790)))+(((IkReal(-1.00000000000000))*(cj9)*(x786)))+(((IkReal(-1.00000000000000))*(x784)*(x787)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x778)*(x783))));
evalcond[4]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x786)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x782)))+(((IkReal(-1.00000000000000))*(r01)*(x790)))+(((IkReal(-1.00000000000000))*(x788)*(x789)))+(((IkReal(-1.00000000000000))*(x781)*(x784)))+(((x778)*(x779)))+(((x778)*(x781)))+(((IkReal(-1.00000000000000))*(x782)*(x789)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x779)*(x784))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x791=((r00)*(sj14));
IkReal x792=((cj14)*(r01));
IkReal x793=((cj14)*(r11));
IkReal x794=((r10)*(sj14));
IkReal x795=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x794)*(x795)))+(((IkReal(-1.00000000000000))*(x793)*(x795)))+(((sj9)*(x791)))+(((sj9)*(x792))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x791)))+(((cj9)*(x792)))+(((sj9)*(x793)))+(((sj9)*(x794))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x794)*(x795)))+(((IkReal(-1.00000000000000))*(x793)*(x795)))+(((sj9)*(x791)))+(((sj9)*(x792)))))+IKsqr(((((cj9)*(x791)))+(((cj9)*(x792)))+(((sj9)*(x793)))+(((sj9)*(x794)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x794)*(x795)))+(((IkReal(-1.00000000000000))*(x793)*(x795)))+(((sj9)*(x791)))+(((sj9)*(x792)))), ((((cj9)*(x791)))+(((cj9)*(x792)))+(((sj9)*(x793)))+(((sj9)*(x794)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x796=((r00)*(sj14));
IkReal x797=((cj14)*(sj9));
IkReal x798=((IkReal(1.00000000000000))*(r11));
IkReal x799=((IkReal(1.00000000000000))*(cj9));
IkReal x800=((r10)*(sj14));
evalcond[0]=((((r01)*(x797)))+(((IkReal(-1.00000000000000))*(x799)*(x800)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x798)))+(((sj9)*(x796))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj9)*(x800)))+(((IkReal(-1.00000000000000))*(x796)*(x799)))+(((IkReal(-1.00000000000000))*(x797)*(x798)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x799)))+(IKcos(j12)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst59;
gconst59=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst60;
IkReal x801=((cj14)*(cj9));
IkReal x802=((cj14)*(sj9));
IkReal x803=((r21)*(sj14));
IkReal x804=((IkReal(1.00000000000000))*(r22));
gconst60=IKsign(((((r12)*(r20)*(x801)))+(((r00)*(r22)*(x802)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r02)*(sj9)*(x803)))+(((IkReal(-1.00000000000000))*(r10)*(x801)*(x804)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x804)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x803)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x802)))));
IkReal x805=((cj14)*(cj9));
IkReal x806=((cj14)*(sj9));
IkReal x807=((r21)*(sj14));
IkReal x808=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x805)*(x808)))+(((r12)*(r20)*(x805)))+(((r00)*(r22)*(x806)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r02)*(sj9)*(x807)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x808)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x807)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x806))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x809=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst60)*(((((IkReal(-1.00000000000000))*(r12)*(x809)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x809)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst60)*(((((IkReal(-1.00000000000000))*(r12)*(x809)))+(((r02)*(sj9)))))), ((gconst60)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x809)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x810=IKsin(j13);
IkReal x811=IKcos(j13);
IkReal x812=((r11)*(sj14));
IkReal x813=((IkReal(1.00000000000000))*(r02));
IkReal x814=((r01)*(sj14));
IkReal x815=((cj14)*(r00));
IkReal x816=((IkReal(1.00000000000000))*(r12));
IkReal x817=((r21)*(sj14));
IkReal x818=((cj14)*(r20));
IkReal x819=((cj9)*(x810));
IkReal x820=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x821=((sj9)*(x810));
IkReal x822=((sj9)*(x811));
IkReal x823=((cj9)*(x811));
IkReal x824=((IkReal(1.00000000000000))*(x810));
evalcond[0]=((IkReal(1.00000000000000))+(((x810)*(x818)))+(((IkReal(-1.00000000000000))*(x817)*(x824)))+(((r22)*(x811))));
evalcond[1]=((((x811)*(x818)))+(((IkReal(-1.00000000000000))*(r22)*(x824)))+(((IkReal(-1.00000000000000))*(x811)*(x817))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x816)*(x823)))+(((IkReal(-1.00000000000000))*(x814)*(x821)))+(((x812)*(x819)))+(((x815)*(x821)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((r02)*(x822))));
evalcond[3]=((((x812)*(x823)))+(((IkReal(-1.00000000000000))*(x814)*(x822)))+(((x815)*(x822)))+(((IkReal(-1.00000000000000))*(x813)*(x821)))+(cj12)+(((IkReal(-1.00000000000000))*(x820)*(x823)))+(((r12)*(x819))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x816)*(x822)))+(((x812)*(x821)))+(((IkReal(-1.00000000000000))*(x815)*(x819)))+(((IkReal(-1.00000000000000))*(x813)*(x823)))+(((x814)*(x819)))+(((IkReal(-1.00000000000000))*(x820)*(x821))));
evalcond[5]=((((x812)*(x822)))+(((r12)*(x821)))+(((IkReal(-1.00000000000000))*(x815)*(x823)))+(((x814)*(x823)))+(sj12)+(((IkReal(-1.00000000000000))*(x820)*(x822)))+(((r02)*(x819))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst59)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst59)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst59)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x825=IKsin(j13);
IkReal x826=IKcos(j13);
IkReal x827=((r11)*(sj14));
IkReal x828=((IkReal(1.00000000000000))*(r02));
IkReal x829=((r01)*(sj14));
IkReal x830=((cj14)*(r00));
IkReal x831=((IkReal(1.00000000000000))*(r12));
IkReal x832=((r21)*(sj14));
IkReal x833=((cj14)*(r20));
IkReal x834=((cj9)*(x825));
IkReal x835=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x836=((sj9)*(x825));
IkReal x837=((sj9)*(x826));
IkReal x838=((cj9)*(x826));
IkReal x839=((IkReal(1.00000000000000))*(x825));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x832)*(x839)))+(((r22)*(x826)))+(((x825)*(x833))));
evalcond[1]=((((x826)*(x833)))+(((IkReal(-1.00000000000000))*(x826)*(x832)))+(((IkReal(-1.00000000000000))*(r22)*(x839))));
evalcond[2]=((((r02)*(x837)))+(((x827)*(x834)))+(((IkReal(-1.00000000000000))*(x834)*(x835)))+(((x830)*(x836)))+(((IkReal(-1.00000000000000))*(x829)*(x836)))+(((IkReal(-1.00000000000000))*(x831)*(x838))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x828)*(x836)))+(((IkReal(-1.00000000000000))*(x835)*(x838)))+(((x827)*(x838)))+(cj12)+(((x830)*(x837)))+(((IkReal(-1.00000000000000))*(x829)*(x837)))+(((r12)*(x834))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x828)*(x838)))+(((IkReal(-1.00000000000000))*(x835)*(x836)))+(((x827)*(x836)))+(((x829)*(x834)))+(((IkReal(-1.00000000000000))*(x830)*(x834)))+(((IkReal(-1.00000000000000))*(x831)*(x837))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x835)*(x837)))+(((r02)*(x834)))+(((x827)*(x837)))+(((x829)*(x838)))+(sj12)+(((IkReal(-1.00000000000000))*(x830)*(x838)))+(((r12)*(x836))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x840=((IkReal(0.0100000000000000))*(cj14));
IkReal x841=((r10)*(sj9));
IkReal x842=((cj14)*(r21));
IkReal x843=((cj9)*(r00));
IkReal x844=((IkReal(0.0100000000000000))*(sj14));
IkReal x845=((r00)*(sj9));
IkReal x846=((IkReal(0.374290000000000))*(sj14));
IkReal x847=((r01)*(sj9));
IkReal x848=((IkReal(1.00000000000000))*(py));
IkReal x849=((cj9)*(r10));
IkReal x850=((IkReal(0.374290000000000))*(cj14));
IkReal x851=((r11)*(sj9));
IkReal x852=((cj9)*(x850));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x842));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x840)))+(((IkReal(0.374290000000000))*(x842)))+(((r20)*(x846)))+(((r21)*(x844)))+(pz));
evalcond[3]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x852)))+(((x840)*(x849)))+(((IkReal(-1.00000000000000))*(x840)*(x845)))+(((x847)*(x850)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x844)))+(((IkReal(-1.00000000000000))*(x846)*(x849)))+(((x845)*(x846)))+(((px)*(sj9)))+(((x844)*(x847)))+(((IkReal(-1.00000000000000))*(cj9)*(x848))));
evalcond[4]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(r01)*(x852)))+(((IkReal(-1.00000000000000))*(x841)*(x846)))+(((x840)*(x841)))+(((x840)*(x843)))+(((IkReal(-1.00000000000000))*(x844)*(x851)))+(((IkReal(-1.00000000000000))*(x850)*(x851)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x844)))+(((IkReal(-1.00000000000000))*(x843)*(x846)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x848))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x853=((cj14)*(cj9));
IkReal x854=((IkReal(1.00000000000000))*(sj9));
IkReal x855=((r00)*(sj14));
IkReal x856=((r10)*(sj14));
if( IKabs(((((r11)*(x853)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x854)))+(((cj9)*(x856)))+(((IkReal(-1.00000000000000))*(x854)*(x855))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((cj9)*(x855)))+(((sj9)*(x856)))+(((r01)*(x853))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r11)*(x853)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x854)))+(((cj9)*(x856)))+(((IkReal(-1.00000000000000))*(x854)*(x855)))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((cj9)*(x855)))+(((sj9)*(x856)))+(((r01)*(x853)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((r11)*(x853)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x854)))+(((cj9)*(x856)))+(((IkReal(-1.00000000000000))*(x854)*(x855)))), ((((cj14)*(r11)*(sj9)))+(((cj9)*(x855)))+(((sj9)*(x856)))+(((r01)*(x853)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x857=((r00)*(sj14));
IkReal x858=((cj14)*(sj9));
IkReal x859=((IkReal(1.00000000000000))*(r11));
IkReal x860=((IkReal(1.00000000000000))*(cj9));
IkReal x861=((r10)*(sj14));
evalcond[0]=((IKsin(j12))+(((IkReal(-1.00000000000000))*(x860)*(x861)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x859)))+(((sj9)*(x857)))+(((r01)*(x858))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj9)*(x861)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x860)))+(((IkReal(-1.00000000000000))*(x858)*(x859)))+(IKcos(j12))+(((IkReal(-1.00000000000000))*(x857)*(x860))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst63;
gconst63=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst64;
IkReal x862=((r22)*(sj14));
IkReal x863=((IkReal(1.00000000000000))*(cj9));
IkReal x864=((cj14)*(sj9));
IkReal x865=((r21)*(sj14));
gconst64=IKsign(((((cj9)*(r12)*(x865)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x862)*(x863)))+(((r02)*(r20)*(x864)))+(((r01)*(sj9)*(x862)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x864)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x863)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x865)))));
IkReal x866=((r22)*(sj14));
IkReal x867=((IkReal(1.00000000000000))*(cj9));
IkReal x868=((cj14)*(sj9));
IkReal x869=((r21)*(sj14));
dummyeval[0]=((((cj9)*(r12)*(x869)))+(((IkReal(-1.00000000000000))*(r11)*(x866)*(x867)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r02)*(r20)*(x868)))+(((r01)*(sj9)*(x866)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x868)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x867)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x869))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x870=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst64)*(((((IkReal(-1.00000000000000))*(r12)*(x870)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst64)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x870)))+(((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst64)*(((((IkReal(-1.00000000000000))*(r12)*(x870)))+(((r02)*(sj9)))))), ((gconst64)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x870)))+(((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x871=IKsin(j13);
IkReal x872=IKcos(j13);
IkReal x873=((r11)*(sj14));
IkReal x874=((IkReal(1.00000000000000))*(r02));
IkReal x875=((r01)*(sj14));
IkReal x876=((cj14)*(r00));
IkReal x877=((IkReal(1.00000000000000))*(r12));
IkReal x878=((r21)*(sj14));
IkReal x879=((cj14)*(r20));
IkReal x880=((cj9)*(x871));
IkReal x881=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x882=((sj9)*(x871));
IkReal x883=((sj9)*(x872));
IkReal x884=((cj9)*(x872));
IkReal x885=((IkReal(1.00000000000000))*(x871));
evalcond[0]=((IkReal(-1.00000000000000))+(((x871)*(x879)))+(((r22)*(x872)))+(((IkReal(-1.00000000000000))*(x878)*(x885))));
evalcond[1]=((((x872)*(x879)))+(((IkReal(-1.00000000000000))*(x872)*(x878)))+(((IkReal(-1.00000000000000))*(r22)*(x885))));
evalcond[2]=((((r02)*(x883)))+(((x876)*(x882)))+(((IkReal(-1.00000000000000))*(x877)*(x884)))+(((IkReal(-1.00000000000000))*(x875)*(x882)))+(((x873)*(x880)))+(((IkReal(-1.00000000000000))*(x880)*(x881))));
evalcond[3]=((((x876)*(x883)))+(((IkReal(-1.00000000000000))*(x881)*(x884)))+(((IkReal(-1.00000000000000))*(x875)*(x883)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x874)*(x882)))+(((x873)*(x884)))+(((r12)*(x880))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x881)*(x882)))+(((IkReal(-1.00000000000000))*(x877)*(x883)))+(((IkReal(-1.00000000000000))*(x876)*(x880)))+(((x875)*(x880)))+(((IkReal(-1.00000000000000))*(x874)*(x884)))+(((x873)*(x882))));
evalcond[5]=((((r02)*(x880)))+(((IkReal(-1.00000000000000))*(x881)*(x883)))+(((IkReal(-1.00000000000000))*(x876)*(x884)))+(sj12)+(((x875)*(x884)))+(((x873)*(x883)))+(((r12)*(x882))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst63)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst63)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst63)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x886=IKsin(j13);
IkReal x887=IKcos(j13);
IkReal x888=((r11)*(sj14));
IkReal x889=((IkReal(1.00000000000000))*(r02));
IkReal x890=((r01)*(sj14));
IkReal x891=((cj14)*(r00));
IkReal x892=((IkReal(1.00000000000000))*(r12));
IkReal x893=((r21)*(sj14));
IkReal x894=((cj14)*(r20));
IkReal x895=((cj9)*(x886));
IkReal x896=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x897=((sj9)*(x886));
IkReal x898=((sj9)*(x887));
IkReal x899=((cj9)*(x887));
IkReal x900=((IkReal(1.00000000000000))*(x886));
evalcond[0]=((IkReal(-1.00000000000000))+(((x886)*(x894)))+(((IkReal(-1.00000000000000))*(x893)*(x900)))+(((r22)*(x887))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x900)))+(((IkReal(-1.00000000000000))*(x887)*(x893)))+(((x887)*(x894))));
evalcond[2]=((((r02)*(x898)))+(((IkReal(-1.00000000000000))*(x892)*(x899)))+(((IkReal(-1.00000000000000))*(x895)*(x896)))+(((x891)*(x897)))+(((IkReal(-1.00000000000000))*(x890)*(x897)))+(((x888)*(x895))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x896)*(x899)))+(((IkReal(-1.00000000000000))*(x889)*(x897)))+(((IkReal(-1.00000000000000))*(cj12)))+(((x891)*(x898)))+(((IkReal(-1.00000000000000))*(x890)*(x898)))+(((x888)*(x899)))+(((r12)*(x895))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x892)*(x898)))+(((IkReal(-1.00000000000000))*(x896)*(x897)))+(((IkReal(-1.00000000000000))*(x889)*(x899)))+(((IkReal(-1.00000000000000))*(x891)*(x895)))+(((x890)*(x895)))+(((x888)*(x897))));
evalcond[5]=((((r02)*(x895)))+(((IkReal(-1.00000000000000))*(x896)*(x898)))+(sj12)+(((IkReal(-1.00000000000000))*(x891)*(x899)))+(((x890)*(x899)))+(((x888)*(x898)))+(((r12)*(x897))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x901=IKsin(j12);
IkReal x902=((r00)*(sj14));
IkReal x903=((IkReal(1.00000000000000))*(cj14));
IkReal x904=((IkReal(1.00000000000000))*(cj9));
IkReal x905=((r10)*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x901))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj9)*(r11)*(x903)))+(((IkReal(-1.00000000000000))*(sj11)*(x901)))+(((cj14)*(r01)*(sj9)))+(((sj9)*(x902)))+(((IkReal(-1.00000000000000))*(x904)*(x905))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x905)))+(((IkReal(-1.00000000000000))*(x902)*(x904)))+(IKcos(j12))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x903)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x903))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst54;
gconst54=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst55;
IkReal x906=(cj14)*(cj14);
IkReal x907=(sj14)*(sj14);
IkReal x908=((cj9)*(r01));
IkReal x909=((r10)*(sj9));
IkReal x910=((r11)*(sj9));
IkReal x911=((cj9)*(r00));
IkReal x912=((IkReal(1.00000000000000))*(cj14)*(sj14));
IkReal x913=((r20)*(x906));
IkReal x914=((r21)*(x907));
gconst55=IKsign(((((x910)*(x914)))+(((x909)*(x913)))+(((IkReal(-1.00000000000000))*(r20)*(x908)*(x912)))+(((IkReal(-1.00000000000000))*(r20)*(x910)*(x912)))+(((cj9)*(r02)*(r22)))+(((x911)*(x913)))+(((IkReal(-1.00000000000000))*(r21)*(x909)*(x912)))+(((r12)*(r22)*(sj9)))+(((x908)*(x914)))+(((IkReal(-1.00000000000000))*(r21)*(x911)*(x912)))));
IkReal x915=(cj14)*(cj14);
IkReal x916=(sj14)*(sj14);
IkReal x917=((cj9)*(r01));
IkReal x918=((r10)*(sj9));
IkReal x919=((r11)*(sj9));
IkReal x920=((cj9)*(r00));
IkReal x921=((IkReal(1.00000000000000))*(cj14)*(sj14));
IkReal x922=((r20)*(x915));
IkReal x923=((r21)*(x916));
dummyeval[0]=((((x918)*(x922)))+(((IkReal(-1.00000000000000))*(r21)*(x920)*(x921)))+(((x919)*(x923)))+(((x920)*(x922)))+(((IkReal(-1.00000000000000))*(r20)*(x917)*(x921)))+(((cj9)*(r02)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x918)*(x921)))+(((x917)*(x923)))+(((r12)*(r22)*(sj9)))+(((IkReal(-1.00000000000000))*(r20)*(x919)*(x921))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x924=((sj11)*(sj9));
IkReal x925=((IkReal(1.00000000000000))*(sj12));
IkReal x926=((cj9)*(sj11));
IkReal x927=((IkReal(1.00000000000000))*(cj14)*(sj11));
if( IKabs(((gconst55)*(((((r01)*(sj14)*(x926)))+(((IkReal(-1.00000000000000))*(r22)*(x925)))+(((IkReal(-1.00000000000000))*(cj14)*(r10)*(x924)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x926)))+(((r11)*(sj14)*(x924))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x925)))+(((IkReal(-1.00000000000000))*(r12)*(x924)))+(((cj14)*(r20)*(sj12)))+(((IkReal(-1.00000000000000))*(r02)*(x926))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst55)*(((((r01)*(sj14)*(x926)))+(((IkReal(-1.00000000000000))*(r22)*(x925)))+(((IkReal(-1.00000000000000))*(cj14)*(r10)*(x924)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x926)))+(((r11)*(sj14)*(x924)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x925)))+(((IkReal(-1.00000000000000))*(r12)*(x924)))+(((cj14)*(r20)*(sj12)))+(((IkReal(-1.00000000000000))*(r02)*(x926)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x928=IKsin(j13);
IkReal x929=IKcos(j13);
IkReal x930=((r11)*(sj14));
IkReal x931=((r01)*(sj14));
IkReal x932=((cj14)*(r00));
IkReal x933=((IkReal(1.00000000000000))*(r02));
IkReal x934=((IkReal(1.00000000000000))*(r12));
IkReal x935=((r21)*(sj14));
IkReal x936=((cj14)*(r20));
IkReal x937=((cj9)*(x928));
IkReal x938=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x939=((sj9)*(x928));
IkReal x940=((sj9)*(x929));
IkReal x941=((cj9)*(x929));
IkReal x942=((IkReal(1.00000000000000))*(x928));
evalcond[0]=((((r22)*(x929)))+(((x928)*(x936)))+(sj11)+(((IkReal(-1.00000000000000))*(x935)*(x942))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x942)))+(((IkReal(-1.00000000000000))*(x929)*(x935)))+(((x929)*(x936)))+(((IkReal(-1.00000000000000))*(cj11)*(cj12))));
evalcond[2]=((((r02)*(x940)))+(((IkReal(-1.00000000000000))*(x931)*(x939)))+(cj11)+(((x930)*(x937)))+(((IkReal(-1.00000000000000))*(x937)*(x938)))+(((x932)*(x939)))+(((IkReal(-1.00000000000000))*(x934)*(x941))));
evalcond[3]=((((x932)*(x940)))+(((IkReal(-1.00000000000000))*(x938)*(x941)))+(((x930)*(x941)))+(((r12)*(x937)))+(((cj12)*(sj11)))+(((IkReal(-1.00000000000000))*(x931)*(x940)))+(((IkReal(-1.00000000000000))*(x933)*(x939))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x933)*(x941)))+(((x930)*(x939)))+(((x931)*(x937)))+(((IkReal(-1.00000000000000))*(x938)*(x939)))+(((IkReal(-1.00000000000000))*(x932)*(x937)))+(((IkReal(-1.00000000000000))*(x934)*(x940))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x932)*(x941)))+(((IkReal(-1.00000000000000))*(x938)*(x940)))+(((x930)*(x940)))+(((x931)*(x941)))+(sj12)+(((r12)*(x939)))+(((r02)*(x937))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x943=((cj11)*(cj12));
IkReal x944=((cj14)*(r20));
IkReal x945=((r21)*(sj14));
if( IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(sj11)*(x945)))+(((r22)*(x943)))+(((sj11)*(x944))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst54)*(((((IkReal(-1.00000000000000))*(x943)*(x944)))+(((x943)*(x945)))+(((r22)*(sj11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst54)*(((((IkReal(-1.00000000000000))*(sj11)*(x945)))+(((r22)*(x943)))+(((sj11)*(x944)))))), ((gconst54)*(((((IkReal(-1.00000000000000))*(x943)*(x944)))+(((x943)*(x945)))+(((r22)*(sj11)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x946=IKsin(j13);
IkReal x947=IKcos(j13);
IkReal x948=((r11)*(sj14));
IkReal x949=((r01)*(sj14));
IkReal x950=((cj14)*(r00));
IkReal x951=((IkReal(1.00000000000000))*(r02));
IkReal x952=((IkReal(1.00000000000000))*(r12));
IkReal x953=((r21)*(sj14));
IkReal x954=((cj14)*(r20));
IkReal x955=((cj9)*(x946));
IkReal x956=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x957=((sj9)*(x946));
IkReal x958=((sj9)*(x947));
IkReal x959=((cj9)*(x947));
IkReal x960=((IkReal(1.00000000000000))*(x946));
evalcond[0]=((((r22)*(x947)))+(sj11)+(((IkReal(-1.00000000000000))*(x953)*(x960)))+(((x946)*(x954))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x947)*(x953)))+(((x947)*(x954)))+(((IkReal(-1.00000000000000))*(r22)*(x960)))+(((IkReal(-1.00000000000000))*(cj11)*(cj12))));
evalcond[2]=((((x948)*(x955)))+(cj11)+(((IkReal(-1.00000000000000))*(x949)*(x957)))+(((r02)*(x958)))+(((IkReal(-1.00000000000000))*(x955)*(x956)))+(((IkReal(-1.00000000000000))*(x952)*(x959)))+(((x950)*(x957))));
evalcond[3]=((((x948)*(x959)))+(((IkReal(-1.00000000000000))*(x956)*(x959)))+(((IkReal(-1.00000000000000))*(x949)*(x958)))+(((cj12)*(sj11)))+(((r12)*(x955)))+(((IkReal(-1.00000000000000))*(x951)*(x957)))+(((x950)*(x958))));
evalcond[4]=((((x949)*(x955)))+(((x948)*(x957)))+(((IkReal(-1.00000000000000))*(x956)*(x957)))+(((IkReal(-1.00000000000000))*(x950)*(x955)))+(((IkReal(-1.00000000000000))*(x951)*(x959)))+(((IkReal(-1.00000000000000))*(x952)*(x958))));
evalcond[5]=((((x949)*(x959)))+(((x948)*(x958)))+(((IkReal(-1.00000000000000))*(x956)*(x958)))+(sj12)+(((IkReal(-1.00000000000000))*(x950)*(x959)))+(((r02)*(x955)))+(((r12)*(x957))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x961=((IkReal(1.00000000000000))*(cj11));
IkReal x962=((sj11)*(sj9));
IkReal x963=((cj9)*(sj11));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(r12)*(x963)))+(((r02)*(x962)))+(((IkReal(-1.00000000000000))*(r22)*(x961))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((cj14)*(r10)*(x963)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x962)))+(((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x963)))+(((r01)*(sj14)*(x962)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x961))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(r12)*(x963)))+(((r02)*(x962)))+(((IkReal(-1.00000000000000))*(r22)*(x961)))))), ((gconst52)*(((((cj14)*(r10)*(x963)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x962)))+(((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x963)))+(((r01)*(sj14)*(x962)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x961)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x964=IKsin(j13);
IkReal x965=IKcos(j13);
IkReal x966=((r11)*(sj14));
IkReal x967=((r01)*(sj14));
IkReal x968=((cj14)*(r00));
IkReal x969=((cj9)*(x964));
IkReal x970=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x971=((sj9)*(x964));
IkReal x972=((sj9)*(x965));
IkReal x973=((IkReal(1.00000000000000))*(cj9)*(x965));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x964)))+(sj11)+(((cj14)*(r20)*(x964)))+(((r22)*(x965))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x967)*(x971)))+(((IkReal(-1.00000000000000))*(x969)*(x970)))+(((x968)*(x971)))+(cj11)+(((x966)*(x969)))+(((r02)*(x972)))+(((IkReal(-1.00000000000000))*(r12)*(x973))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x968)*(x969)))+(((IkReal(-1.00000000000000))*(r12)*(x972)))+(((x967)*(x969)))+(((x966)*(x971)))+(((IkReal(-1.00000000000000))*(x970)*(x971)))+(((IkReal(-1.00000000000000))*(r02)*(x973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x974=((IkReal(0.0100000000000000))*(cj14));
IkReal x975=((r10)*(sj9));
IkReal x976=((cj9)*(r11));
IkReal x977=((sj13)*(sj14));
IkReal x978=((cj9)*(r00));
IkReal x979=((IkReal(0.374290000000000))*(cj14));
IkReal x980=((cj9)*(r01));
IkReal x981=((r01)*(sj9));
IkReal x982=((IkReal(0.0100000000000000))*(sj14));
IkReal x983=((r00)*(sj9));
IkReal x984=((IkReal(0.374290000000000))*(sj14));
IkReal x985=((cj13)*(r02));
IkReal x986=((cj9)*(r12));
IkReal x987=((IkReal(1.00000000000000))*(sj9));
IkReal x988=((IkReal(1.00000000000000))*(cj9));
IkReal x989=((r11)*(sj9));
IkReal x990=((cj9)*(r10));
IkReal x991=((cj14)*(sj13));
IkReal x992=((IkReal(1.00000000000000))*(cj13));
IkReal x993=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x991)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x977))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x974)))+(((r21)*(x979)))+(((r21)*(x982)))+(pz)+(((r20)*(x984))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x988)))+(((cj14)*(x981)))+(((sj14)*(x983))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x977)*(x981)))+(((sj9)*(x985)))+(((IkReal(-1.00000000000000))*(r10)*(x988)*(x991)))+(((x983)*(x991)))+(((x976)*(x977)))+(((IkReal(-1.00000000000000))*(x986)*(x992))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x988)*(x993)))+(((sj13)*(x986)))+(((x983)*(x993)))+(((cj13)*(sj14)*(x976)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x987)))+(((IkReal(-1.00000000000000))*(sj14)*(x981)*(x992))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x978)*(x991)))+(((x977)*(x989)))+(((x977)*(x980)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x987)))+(((IkReal(-1.00000000000000))*(x975)*(x991)))+(((IkReal(-1.00000000000000))*(x985)*(x988))));
evalcond[7]=((((x981)*(x982)))+(((x983)*(x984)))+(((IkReal(-1.00000000000000))*(py)*(x988)))+(((IkReal(-1.00000000000000))*(x974)*(x983)))+(((x979)*(x981)))+(((IkReal(-1.00000000000000))*(x984)*(x990)))+(((x974)*(x990)))+(((IkReal(-1.00000000000000))*(x976)*(x979)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x976)*(x982))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(px)*(x988)))+(((IkReal(-1.00000000000000))*(py)*(x987)))+(((IkReal(-1.00000000000000))*(x982)*(x989)))+(((IkReal(-1.00000000000000))*(x978)*(x984)))+(((x974)*(x975)))+(((x974)*(x978)))+(((IkReal(-1.00000000000000))*(x980)*(x982)))+(((IkReal(-1.00000000000000))*(x975)*(x984)))+(((IkReal(-1.00000000000000))*(x979)*(x989)))+(((IkReal(-1.00000000000000))*(x979)*(x980))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x994=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(x994)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x994)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(x994)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x994)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(x994)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x994)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x995=IKcos(j12);
IkReal x996=IKsin(j12);
IkReal x997=((cj13)*(sj9));
IkReal x998=((IkReal(1.00000000000000))*(cj14));
IkReal x999=((cj13)*(sj14));
IkReal x1000=((cj9)*(r00));
IkReal x1001=((cj9)*(r01));
IkReal x1002=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x996));
evalcond[1]=((((IkReal(-1.00000000000000))*(x995)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x999))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1002)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x998)))+(((IkReal(-1.00000000000000))*(x1001)*(x998)))+(((IkReal(-1.00000000000000))*(x1000)*(x1002)))+(x995));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x1000)*(x998)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj14)*(x997)))+(((IkReal(-1.00000000000000))*(r10)*(x997)*(x998)))+(((x1001)*(x999)))+(x996)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1003=((IkReal(0.0100000000000000))*(cj14));
IkReal x1004=((r10)*(sj9));
IkReal x1005=((cj9)*(r11));
IkReal x1006=((sj13)*(sj14));
IkReal x1007=((cj9)*(r00));
IkReal x1008=((IkReal(0.374290000000000))*(cj14));
IkReal x1009=((cj9)*(r01));
IkReal x1010=((r01)*(sj9));
IkReal x1011=((IkReal(0.0100000000000000))*(sj14));
IkReal x1012=((r00)*(sj9));
IkReal x1013=((IkReal(0.374290000000000))*(sj14));
IkReal x1014=((cj13)*(r02));
IkReal x1015=((cj9)*(r12));
IkReal x1016=((IkReal(1.00000000000000))*(sj9));
IkReal x1017=((IkReal(1.00000000000000))*(cj9));
IkReal x1018=((r11)*(sj9));
IkReal x1019=((cj9)*(r10));
IkReal x1020=((cj14)*(sj13));
IkReal x1021=((IkReal(1.00000000000000))*(cj13));
IkReal x1022=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x1020)))+(((IkReal(-1.00000000000000))*(r21)*(x1006)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((r21)*(x1011)))+(((IkReal(-1.00000000000000))*(r20)*(x1003)))+(((r21)*(x1008)))+(pz)+(((r20)*(x1013))));
evalcond[3]=((((cj14)*(x1010)))+(((IkReal(-1.00000000000000))*(cj14)*(x1005)))+(((sj14)*(x1012)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1017))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1017)*(x1020)))+(((IkReal(-1.00000000000000))*(x1006)*(x1010)))+(((IkReal(-1.00000000000000))*(x1015)*(x1021)))+(((x1012)*(x1020)))+(((x1005)*(x1006)))+(((sj9)*(x1014))));
evalcond[5]=((((sj13)*(x1015)))+(((IkReal(-1.00000000000000))*(r10)*(x1017)*(x1022)))+(((cj13)*(sj14)*(x1005)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1016)))+(((x1012)*(x1022)))+(((IkReal(-1.00000000000000))*(sj14)*(x1010)*(x1021))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1014)*(x1017)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1016)))+(((x1006)*(x1018)))+(((IkReal(-1.00000000000000))*(x1004)*(x1020)))+(((x1006)*(x1009)))+(((IkReal(-1.00000000000000))*(x1007)*(x1020))));
evalcond[7]=((((x1003)*(x1019)))+(((IkReal(-1.00000000000000))*(x1005)*(x1011)))+(((IkReal(-1.00000000000000))*(py)*(x1017)))+(((x1012)*(x1013)))+(((IkReal(-1.00000000000000))*(x1005)*(x1008)))+(((IkReal(-1.00000000000000))*(x1003)*(x1012)))+(((IkReal(-1.00000000000000))*(x1013)*(x1019)))+(((px)*(sj9)))+(((x1008)*(x1010)))+(((x1010)*(x1011))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(px)*(x1017)))+(((IkReal(-1.00000000000000))*(x1011)*(x1018)))+(((IkReal(-1.00000000000000))*(x1009)*(x1011)))+(((IkReal(-1.00000000000000))*(x1008)*(x1009)))+(((IkReal(-1.00000000000000))*(x1004)*(x1013)))+(((IkReal(-1.00000000000000))*(py)*(x1016)))+(((IkReal(-1.00000000000000))*(x1008)*(x1018)))+(((IkReal(-1.00000000000000))*(x1007)*(x1013)))+(((x1003)*(x1007)))+(((x1003)*(x1004))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1023=IKcos(j12);
IkReal x1024=IKsin(j12);
IkReal x1025=((cj13)*(sj9));
IkReal x1026=((IkReal(1.00000000000000))*(cj14));
IkReal x1027=((cj13)*(sj14));
IkReal x1028=((cj9)*(r00));
IkReal x1029=((cj9)*(r01));
IkReal x1030=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x1024)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x1023)+(((IkReal(-1.00000000000000))*(r21)*(x1027)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1028)*(x1030)))+(x1023)+(((IkReal(-1.00000000000000))*(x1026)*(x1029)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1026)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1030))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x1026)*(x1028)))+(x1024)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r10)*(x1025)*(x1026)))+(((x1027)*(x1029)))+(((r12)*(sj13)*(sj9)))+(((r11)*(sj14)*(x1025))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1031=((IkReal(0.0100000000000000))*(cj14));
IkReal x1032=((r10)*(sj9));
IkReal x1033=((cj9)*(r11));
IkReal x1034=((sj13)*(sj14));
IkReal x1035=((cj14)*(r21));
IkReal x1036=((cj9)*(r00));
IkReal x1037=((IkReal(0.374290000000000))*(cj14));
IkReal x1038=((cj9)*(r01));
IkReal x1039=((r01)*(sj9));
IkReal x1040=((IkReal(0.0100000000000000))*(sj14));
IkReal x1041=((IkReal(1.00000000000000))*(sj13));
IkReal x1042=((r00)*(sj9));
IkReal x1043=((IkReal(0.374290000000000))*(sj14));
IkReal x1044=((cj13)*(sj9));
IkReal x1045=((IkReal(1.00000000000000))*(cj13));
IkReal x1046=((IkReal(1.00000000000000))*(py));
IkReal x1047=((r11)*(sj9));
IkReal x1048=((cj9)*(r10));
IkReal x1049=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x1035)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x1049)))+(((IkReal(-1.00000000000000))*(r21)*(x1034)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(0.374290000000000))*(x1035)))+(((IkReal(-1.00000000000000))*(r20)*(x1031)))+(((r20)*(x1043)))+(pz)+(((r21)*(x1040))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1045)))+(((IkReal(-1.00000000000000))*(r22)*(x1041))));
evalcond[5]=((((r02)*(x1044)))+(((x1042)*(x1049)))+(((IkReal(-1.00000000000000))*(x1034)*(x1039)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1045)))+(((IkReal(-1.00000000000000))*(cj14)*(x1041)*(x1048)))+(((x1033)*(x1034))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x1044)))+(((x1034)*(x1047)))+(((IkReal(-1.00000000000000))*(cj14)*(x1036)*(x1041)))+(((IkReal(-1.00000000000000))*(cj14)*(x1032)*(x1041)))+(((x1034)*(x1038)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x1045))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x1033)*(x1037)))+(((IkReal(-1.00000000000000))*(x1031)*(x1042)))+(((x1042)*(x1043)))+(((IkReal(-1.00000000000000))*(cj9)*(x1046)))+(((IkReal(-1.00000000000000))*(x1033)*(x1040)))+(((x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(x1043)*(x1048)))+(((x1031)*(x1048)))+(((px)*(sj9)))+(((x1037)*(x1039))));
evalcond[8]=((IkReal(-0.295420000000000))+(((x1031)*(x1032)))+(((x1031)*(x1036)))+(((IkReal(-1.00000000000000))*(x1037)*(x1038)))+(((IkReal(-1.00000000000000))*(x1032)*(x1043)))+(((IkReal(-1.00000000000000))*(x1038)*(x1040)))+(((IkReal(-1.00000000000000))*(x1037)*(x1047)))+(((IkReal(-1.00000000000000))*(x1040)*(x1047)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x1046)))+(((IkReal(-1.00000000000000))*(x1036)*(x1043))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1050=((r00)*(sj14));
IkReal x1051=((cj14)*(r01));
IkReal x1052=((cj14)*(r11));
IkReal x1053=((r10)*(sj14));
IkReal x1054=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x1052)*(x1054)))+(((sj9)*(x1051)))+(((sj9)*(x1050)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj9)*(x1053)))+(((sj9)*(x1052)))+(((cj9)*(x1051)))+(((cj9)*(x1050))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1052)*(x1054)))+(((sj9)*(x1051)))+(((sj9)*(x1050)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))))+IKsqr(((((sj9)*(x1053)))+(((sj9)*(x1052)))+(((cj9)*(x1051)))+(((cj9)*(x1050)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1052)*(x1054)))+(((sj9)*(x1051)))+(((sj9)*(x1050)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))), ((((sj9)*(x1053)))+(((sj9)*(x1052)))+(((cj9)*(x1051)))+(((cj9)*(x1050)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1055=IKcos(j12);
IkReal x1056=IKsin(j12);
IkReal x1057=((sj13)*(sj9));
IkReal x1058=((sj14)*(sj9));
IkReal x1059=((cj13)*(r11));
IkReal x1060=((cj9)*(sj14));
IkReal x1061=((cj13)*(r10));
IkReal x1062=((cj13)*(r01));
IkReal x1063=((cj13)*(r00));
IkReal x1064=((cj14)*(sj9));
IkReal x1065=((IkReal(1.00000000000000))*(r10));
IkReal x1066=((cj9)*(sj13));
IkReal x1067=((IkReal(1.00000000000000))*(x1064));
IkReal x1068=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1060)*(x1065)))+(((IkReal(-1.00000000000000))*(r11)*(x1068)))+(((r00)*(x1058)))+(((IkReal(-1.00000000000000))*(x1056)))+(((r01)*(x1064))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1060)))+(((IkReal(-1.00000000000000))*(r01)*(x1068)))+(x1055)+(((IkReal(-1.00000000000000))*(r11)*(x1067)))+(((IkReal(-1.00000000000000))*(x1058)*(x1065))));
evalcond[2]=((((r12)*(x1066)))+(x1055)+(((IkReal(-1.00000000000000))*(r02)*(x1057)))+(((IkReal(-1.00000000000000))*(x1061)*(x1068)))+(((x1063)*(x1064)))+(((x1059)*(x1060)))+(((IkReal(-1.00000000000000))*(x1058)*(x1062))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1063)*(x1068)))+(((r12)*(x1057)))+(x1056)+(((x1060)*(x1062)))+(((IkReal(-1.00000000000000))*(x1061)*(x1067)))+(((r02)*(x1066)))+(((x1058)*(x1059))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1069=((IkReal(0.0100000000000000))*(cj14));
IkReal x1070=((r10)*(sj9));
IkReal x1071=((cj9)*(r11));
IkReal x1072=((sj13)*(sj14));
IkReal x1073=((cj14)*(r21));
IkReal x1074=((cj9)*(r00));
IkReal x1075=((IkReal(0.374290000000000))*(cj14));
IkReal x1076=((cj9)*(r01));
IkReal x1077=((r01)*(sj9));
IkReal x1078=((IkReal(0.0100000000000000))*(sj14));
IkReal x1079=((IkReal(1.00000000000000))*(sj13));
IkReal x1080=((r00)*(sj9));
IkReal x1081=((IkReal(0.374290000000000))*(sj14));
IkReal x1082=((cj13)*(sj9));
IkReal x1083=((IkReal(1.00000000000000))*(cj13));
IkReal x1084=((IkReal(1.00000000000000))*(py));
IkReal x1085=((r11)*(sj9));
IkReal x1086=((cj9)*(r10));
IkReal x1087=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x1073)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x1087)))+(((IkReal(-1.00000000000000))*(r21)*(x1072)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1069)))+(((r20)*(x1081)))+(pz)+(((IkReal(0.374290000000000))*(x1073)))+(((r21)*(x1078))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x1079)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1083))));
evalcond[5]=((((x1071)*(x1072)))+(((IkReal(-1.00000000000000))*(cj14)*(x1079)*(x1086)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1083)))+(((x1080)*(x1087)))+(((IkReal(-1.00000000000000))*(x1072)*(x1077)))+(((r02)*(x1082))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x1082)))+(((IkReal(-1.00000000000000))*(cj14)*(x1074)*(x1079)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x1083)))+(((IkReal(-1.00000000000000))*(cj14)*(x1070)*(x1079)))+(((x1072)*(x1076)))+(((x1072)*(x1085))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(x1071)*(x1075)))+(((IkReal(-1.00000000000000))*(x1071)*(x1078)))+(((IkReal(-1.00000000000000))*(x1081)*(x1086)))+(((x1075)*(x1077)))+(((IkReal(-1.00000000000000))*(x1069)*(x1080)))+(((x1069)*(x1086)))+(((x1080)*(x1081)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x1084))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x1075)*(x1076)))+(((IkReal(-1.00000000000000))*(x1074)*(x1081)))+(((x1069)*(x1074)))+(((x1069)*(x1070)))+(((IkReal(-1.00000000000000))*(x1076)*(x1078)))+(((IkReal(-1.00000000000000))*(x1078)*(x1085)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x1070)*(x1081)))+(((IkReal(-1.00000000000000))*(sj9)*(x1084)))+(((IkReal(-1.00000000000000))*(x1075)*(x1085))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1088=((cj14)*(cj9));
IkReal x1089=((IkReal(1.00000000000000))*(sj9));
IkReal x1090=((r00)*(sj14));
IkReal x1091=((r10)*(sj14));
if( IKabs(((((cj9)*(x1091)))+(((r11)*(x1088)))+(((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1089))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x1090)))+(((cj14)*(r11)*(sj9)))+(((r01)*(x1088)))+(((sj9)*(x1091))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x1091)))+(((r11)*(x1088)))+(((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1089)))))+IKsqr(((((cj9)*(x1090)))+(((cj14)*(r11)*(sj9)))+(((r01)*(x1088)))+(((sj9)*(x1091)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x1091)))+(((r11)*(x1088)))+(((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1089)))), ((((cj9)*(x1090)))+(((cj14)*(r11)*(sj9)))+(((r01)*(x1088)))+(((sj9)*(x1091)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1092=IKcos(j12);
IkReal x1093=IKsin(j12);
IkReal x1094=((r12)*(sj13));
IkReal x1095=((sj14)*(sj9));
IkReal x1096=((cj13)*(r11));
IkReal x1097=((cj9)*(sj14));
IkReal x1098=((IkReal(1.00000000000000))*(cj14));
IkReal x1099=((cj13)*(cj9));
IkReal x1100=((cj13)*(r01));
IkReal x1101=((cj14)*(sj9));
IkReal x1102=((IkReal(1.00000000000000))*(r10));
IkReal x1103=((r02)*(sj13));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1098)))+(x1093)+(((r00)*(x1095)))+(((r01)*(x1101)))+(((IkReal(-1.00000000000000))*(x1097)*(x1102))));
evalcond[1]=((x1092)+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1098)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1098)))+(((IkReal(-1.00000000000000))*(r00)*(x1097)))+(((IkReal(-1.00000000000000))*(x1095)*(x1102))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1098)*(x1099)))+(((cj9)*(x1094)))+(((IkReal(-1.00000000000000))*(x1095)*(x1100)))+(((cj13)*(r00)*(x1101)))+(((IkReal(-1.00000000000000))*(x1092)))+(((IkReal(-1.00000000000000))*(sj9)*(x1103)))+(((x1096)*(x1097))));
evalcond[3]=((x1093)+(((x1097)*(x1100)))+(((x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(r00)*(x1098)*(x1099)))+(((cj9)*(x1103)))+(((sj9)*(x1094)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x1098))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1104=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1104))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x1104)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1104)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x1104)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1104)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x1104)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1105=IKsin(j12);
IkReal x1106=IKcos(j12);
IkReal x1107=((IkReal(1.00000000000000))*(sj13));
IkReal x1108=((cj13)*(r10));
IkReal x1109=((cj9)*(sj14));
IkReal x1110=((cj13)*(r01));
IkReal x1111=((IkReal(1.00000000000000))*(r10));
IkReal x1112=((r12)*(sj13));
IkReal x1113=((cj13)*(sj14));
IkReal x1114=((cj14)*(r01));
IkReal x1115=((cj13)*(cj14));
IkReal x1116=((IkReal(1.00000000000000))*(cj9));
IkReal x1117=((sj14)*(sj9));
IkReal x1118=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x1105))));
evalcond[1]=((((r20)*(x1115)))+(((IkReal(-1.00000000000000))*(r22)*(x1107)))+(((IkReal(-1.00000000000000))*(r21)*(x1113)))+(((IkReal(-1.00000000000000))*(cj11)*(x1106))));
evalcond[2]=((((sj9)*(x1114)))+(((IkReal(-1.00000000000000))*(x1109)*(x1111)))+(((IkReal(-1.00000000000000))*(sj11)*(x1105)))+(((r00)*(x1117)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1116))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x1118)))+(x1106)+(((IkReal(-1.00000000000000))*(x1114)*(x1116)))+(((IkReal(-1.00000000000000))*(r00)*(x1109)))+(((IkReal(-1.00000000000000))*(x1111)*(x1117))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1110)*(x1117)))+(((r00)*(sj9)*(x1115)))+(((cj9)*(x1112)))+(((cj13)*(r11)*(x1109)))+(((sj11)*(x1106)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1107)))+(((IkReal(-1.00000000000000))*(cj14)*(x1108)*(x1116))));
evalcond[5]=((((x1109)*(x1110)))+(((r11)*(sj9)*(x1113)))+(x1105)+(((sj9)*(x1112)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x1115)*(x1116)))+(((IkReal(-1.00000000000000))*(x1108)*(x1118))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1119=IKsin(j12);
IkReal x1120=IKcos(j12);
IkReal x1121=((IkReal(1.00000000000000))*(sj13));
IkReal x1122=((cj13)*(r10));
IkReal x1123=((cj9)*(sj14));
IkReal x1124=((cj13)*(r01));
IkReal x1125=((IkReal(1.00000000000000))*(r10));
IkReal x1126=((r12)*(sj13));
IkReal x1127=((cj13)*(sj14));
IkReal x1128=((cj14)*(r01));
IkReal x1129=((cj13)*(cj14));
IkReal x1130=((IkReal(1.00000000000000))*(cj9));
IkReal x1131=((sj14)*(sj9));
IkReal x1132=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x1119))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1121)))+(((IkReal(-1.00000000000000))*(r21)*(x1127)))+(((IkReal(-1.00000000000000))*(cj11)*(x1120)))+(((r20)*(x1129))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1130)))+(((r00)*(x1131)))+(((IkReal(-1.00000000000000))*(x1123)*(x1125)))+(((IkReal(-1.00000000000000))*(sj11)*(x1119)))+(((sj9)*(x1128))));
evalcond[3]=((x1120)+(((IkReal(-1.00000000000000))*(r11)*(x1132)))+(((IkReal(-1.00000000000000))*(r00)*(x1123)))+(((IkReal(-1.00000000000000))*(x1128)*(x1130)))+(((IkReal(-1.00000000000000))*(x1125)*(x1131))));
evalcond[4]=((((cj13)*(r11)*(x1123)))+(((IkReal(-1.00000000000000))*(x1124)*(x1131)))+(((IkReal(-1.00000000000000))*(cj14)*(x1122)*(x1130)))+(((sj11)*(x1120)))+(((cj9)*(x1126)))+(((r00)*(sj9)*(x1129)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1121))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1129)*(x1130)))+(x1119)+(((IkReal(-1.00000000000000))*(x1122)*(x1132)))+(((cj9)*(r02)*(sj13)))+(((x1123)*(x1124)))+(((sj9)*(x1126)))+(((r11)*(sj9)*(x1127))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1133=((IkReal(1.00000000000000))*(r21));
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj14)*(x1133)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1133))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(cj14)*(x1133)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((gconst56)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1133)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1134=IKsin(j12);
IkReal x1135=IKcos(j12);
IkReal x1136=((IkReal(1.00000000000000))*(sj13));
IkReal x1137=((cj13)*(r10));
IkReal x1138=((cj9)*(sj14));
IkReal x1139=((cj13)*(r01));
IkReal x1140=((IkReal(1.00000000000000))*(r10));
IkReal x1141=((r12)*(sj13));
IkReal x1142=((cj13)*(sj14));
IkReal x1143=((cj14)*(r01));
IkReal x1144=((cj13)*(cj14));
IkReal x1145=((IkReal(1.00000000000000))*(cj9));
IkReal x1146=((sj14)*(sj9));
IkReal x1147=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x1134))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x1142)))+(((r20)*(x1144)))+(((IkReal(-1.00000000000000))*(r22)*(x1136)))+(((IkReal(-1.00000000000000))*(cj11)*(x1135))));
evalcond[2]=((((sj9)*(x1143)))+(((IkReal(-1.00000000000000))*(sj11)*(x1134)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1145)))+(((r00)*(x1146)))+(((IkReal(-1.00000000000000))*(x1138)*(x1140))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1140)*(x1146)))+(x1135)+(((IkReal(-1.00000000000000))*(x1143)*(x1145)))+(((IkReal(-1.00000000000000))*(r00)*(x1138)))+(((IkReal(-1.00000000000000))*(r11)*(x1147))));
evalcond[4]=((((cj13)*(r11)*(x1138)))+(((IkReal(-1.00000000000000))*(x1139)*(x1146)))+(((cj9)*(x1141)))+(((IkReal(-1.00000000000000))*(cj14)*(x1137)*(x1145)))+(((r00)*(sj9)*(x1144)))+(((sj11)*(x1135)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1136))));
evalcond[5]=((x1134)+(((IkReal(-1.00000000000000))*(x1137)*(x1147)))+(((sj9)*(x1141)))+(((r11)*(sj9)*(x1142)))+(((cj9)*(r02)*(sj13)))+(((x1138)*(x1139)))+(((IkReal(-1.00000000000000))*(r00)*(x1144)*(x1145))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1148=((cj14)*(sj11));
IkReal x1149=((IkReal(1.00000000000000))*(sj11)*(sj9));
IkReal x1150=((IkReal(1.00000000000000))*(cj9)*(sj11));
if( IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r02)*(x1150)))+(((IkReal(-1.00000000000000))*(r12)*(x1149))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj14)*(x1150)))+(((cj9)*(r00)*(x1148)))+(((r10)*(sj9)*(x1148)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1149))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst53)*(((((IkReal(-1.00000000000000))*(r02)*(x1150)))+(((IkReal(-1.00000000000000))*(r12)*(x1149)))))), ((gconst53)*(((((IkReal(-1.00000000000000))*(r01)*(sj14)*(x1150)))+(((cj9)*(r00)*(x1148)))+(((r10)*(sj9)*(x1148)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1149)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1151=IKsin(j13);
IkReal x1152=IKcos(j13);
IkReal x1153=((r11)*(sj14));
IkReal x1154=((r01)*(sj14));
IkReal x1155=((cj14)*(r00));
IkReal x1156=((cj9)*(x1151));
IkReal x1157=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1158=((sj9)*(x1151));
IkReal x1159=((sj9)*(x1152));
IkReal x1160=((IkReal(1.00000000000000))*(cj9)*(x1152));
evalcond[0]=((((r22)*(x1152)))+(sj11)+(((cj14)*(r20)*(x1151)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1151))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1160)))+(((r02)*(x1159)))+(((IkReal(-1.00000000000000))*(x1154)*(x1158)))+(((x1153)*(x1156)))+(((IkReal(-1.00000000000000))*(x1156)*(x1157)))+(cj11)+(((x1155)*(x1158))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1157)*(x1158)))+(((IkReal(-1.00000000000000))*(r02)*(x1160)))+(((IkReal(-1.00000000000000))*(r12)*(x1159)))+(((x1153)*(x1158)))+(((IkReal(-1.00000000000000))*(x1155)*(x1156)))+(((x1154)*(x1156))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst56;
gconst56=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1161=((IkReal(0.0100000000000000))*(cj14));
IkReal x1162=((r10)*(sj9));
IkReal x1163=((cj9)*(r11));
IkReal x1164=((sj13)*(sj14));
IkReal x1165=((cj9)*(r00));
IkReal x1166=((IkReal(0.374290000000000))*(cj14));
IkReal x1167=((cj9)*(r01));
IkReal x1168=((r01)*(sj9));
IkReal x1169=((IkReal(0.0100000000000000))*(sj14));
IkReal x1170=((r00)*(sj9));
IkReal x1171=((IkReal(0.374290000000000))*(sj14));
IkReal x1172=((cj13)*(r02));
IkReal x1173=((cj9)*(r12));
IkReal x1174=((IkReal(1.00000000000000))*(sj9));
IkReal x1175=((IkReal(1.00000000000000))*(cj9));
IkReal x1176=((r11)*(sj9));
IkReal x1177=((cj9)*(r10));
IkReal x1178=((cj14)*(sj13));
IkReal x1179=((IkReal(1.00000000000000))*(cj13));
IkReal x1180=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x1178)))+(((IkReal(-1.00000000000000))*(r21)*(x1164)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1161)))+(((r20)*(x1171)))+(((r21)*(x1166)))+(((r21)*(x1169)))+(pz));
evalcond[3]=((((sj14)*(x1170)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1175)))+(((IkReal(-1.00000000000000))*(cj14)*(x1163)))+(((cj14)*(x1168))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1173)*(x1179)))+(((IkReal(-1.00000000000000))*(r10)*(x1175)*(x1178)))+(((x1163)*(x1164)))+(((sj9)*(x1172)))+(((IkReal(-1.00000000000000))*(x1164)*(x1168)))+(((x1170)*(x1178))));
evalcond[5]=((((cj13)*(sj14)*(x1163)))+(((sj13)*(x1173)))+(((IkReal(-1.00000000000000))*(r10)*(x1175)*(x1180)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1174)))+(((x1170)*(x1180)))+(((IkReal(-1.00000000000000))*(sj14)*(x1168)*(x1179))));
evalcond[6]=((((x1164)*(x1176)))+(((x1164)*(x1167)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1174)))+(((IkReal(-1.00000000000000))*(x1162)*(x1178)))+(((IkReal(-1.00000000000000))*(x1172)*(x1175)))+(((IkReal(-1.00000000000000))*(x1165)*(x1178))));
evalcond[7]=((((x1168)*(x1169)))+(((IkReal(-1.00000000000000))*(x1163)*(x1169)))+(((IkReal(-1.00000000000000))*(x1163)*(x1166)))+(((x1166)*(x1168)))+(((IkReal(-1.00000000000000))*(py)*(x1175)))+(((IkReal(-1.00000000000000))*(x1171)*(x1177)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x1161)*(x1170)))+(((x1170)*(x1171)))+(((x1161)*(x1177))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x1166)*(x1167)))+(((IkReal(-1.00000000000000))*(x1165)*(x1171)))+(((IkReal(-1.00000000000000))*(x1162)*(x1171)))+(((IkReal(-1.00000000000000))*(py)*(x1174)))+(((IkReal(-1.00000000000000))*(px)*(x1175)))+(((IkReal(-1.00000000000000))*(x1167)*(x1169)))+(((IkReal(-1.00000000000000))*(x1169)*(x1176)))+(((IkReal(-1.00000000000000))*(x1166)*(x1176)))+(((x1161)*(x1162)))+(((x1161)*(x1165))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1181=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(x1181)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1181))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(x1181)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1181)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(x1181)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1181)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1182=IKcos(j12);
IkReal x1183=IKsin(j12);
IkReal x1184=((cj13)*(sj9));
IkReal x1185=((IkReal(1.00000000000000))*(cj14));
IkReal x1186=((cj13)*(sj14));
IkReal x1187=((cj9)*(r00));
IkReal x1188=((cj9)*(r01));
IkReal x1189=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((x1183)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x1186)))+(((IkReal(-1.00000000000000))*(x1182))));
evalcond[2]=((x1182)+(((IkReal(-1.00000000000000))*(x1187)*(x1189)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1185)))+(((IkReal(-1.00000000000000))*(x1185)*(x1188)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1189))));
evalcond[3]=((x1183)+(((x1186)*(x1188)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x1185)*(x1187)))+(((r11)*(sj14)*(x1184)))+(((IkReal(-1.00000000000000))*(r10)*(x1184)*(x1185)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1190=((IkReal(0.0100000000000000))*(cj14));
IkReal x1191=((r10)*(sj9));
IkReal x1192=((cj9)*(r11));
IkReal x1193=((sj13)*(sj14));
IkReal x1194=((cj9)*(r00));
IkReal x1195=((IkReal(0.374290000000000))*(cj14));
IkReal x1196=((cj9)*(r01));
IkReal x1197=((r01)*(sj9));
IkReal x1198=((IkReal(0.0100000000000000))*(sj14));
IkReal x1199=((r00)*(sj9));
IkReal x1200=((IkReal(0.374290000000000))*(sj14));
IkReal x1201=((cj13)*(r02));
IkReal x1202=((cj9)*(r12));
IkReal x1203=((IkReal(1.00000000000000))*(sj9));
IkReal x1204=((IkReal(1.00000000000000))*(cj9));
IkReal x1205=((r11)*(sj9));
IkReal x1206=((cj9)*(r10));
IkReal x1207=((cj14)*(sj13));
IkReal x1208=((IkReal(1.00000000000000))*(cj13));
IkReal x1209=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x1207)))+(((IkReal(-1.00000000000000))*(r21)*(x1193)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((r20)*(x1200)))+(((r21)*(x1195)))+(((r21)*(x1198)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x1190))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x1192)))+(((cj14)*(x1197)))+(((sj14)*(x1199)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1204))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1204)*(x1207)))+(((sj9)*(x1201)))+(((IkReal(-1.00000000000000))*(x1193)*(x1197)))+(((x1199)*(x1207)))+(((IkReal(-1.00000000000000))*(x1202)*(x1208)))+(((x1192)*(x1193))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1204)*(x1209)))+(((IkReal(-1.00000000000000))*(sj14)*(x1197)*(x1208)))+(((sj13)*(x1202)))+(((x1199)*(x1209)))+(((cj13)*(sj14)*(x1192)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x1203))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1194)*(x1207)))+(((x1193)*(x1205)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x1203)))+(((x1193)*(x1196)))+(((IkReal(-1.00000000000000))*(x1201)*(x1204)))+(((IkReal(-1.00000000000000))*(x1191)*(x1207))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1190)*(x1199)))+(((x1197)*(x1198)))+(((x1195)*(x1197)))+(((x1190)*(x1206)))+(((x1199)*(x1200)))+(((IkReal(-1.00000000000000))*(x1200)*(x1206)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x1192)*(x1198)))+(((IkReal(-1.00000000000000))*(x1192)*(x1195)))+(((IkReal(-1.00000000000000))*(py)*(x1204))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x1191)*(x1200)))+(((IkReal(-1.00000000000000))*(x1195)*(x1196)))+(((IkReal(-1.00000000000000))*(x1196)*(x1198)))+(((IkReal(-1.00000000000000))*(px)*(x1204)))+(((IkReal(-1.00000000000000))*(x1194)*(x1200)))+(((x1190)*(x1194)))+(((x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(py)*(x1203)))+(((IkReal(-1.00000000000000))*(x1195)*(x1205)))+(((IkReal(-1.00000000000000))*(x1198)*(x1205))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1210=IKcos(j12);
IkReal x1211=IKsin(j12);
IkReal x1212=((cj13)*(sj9));
IkReal x1213=((IkReal(1.00000000000000))*(cj14));
IkReal x1214=((cj13)*(sj14));
IkReal x1215=((cj9)*(r00));
IkReal x1216=((cj9)*(r01));
IkReal x1217=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x1211))));
evalcond[1]=((x1210)+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x1214))));
evalcond[2]=((x1210)+(((IkReal(-1.00000000000000))*(x1215)*(x1217)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1213)))+(((IkReal(-1.00000000000000))*(x1213)*(x1216)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1217))));
evalcond[3]=((((x1214)*(x1216)))+(((IkReal(-1.00000000000000))*(cj13)*(x1213)*(x1215)))+(((r11)*(sj14)*(x1212)))+(x1211)+(((IkReal(-1.00000000000000))*(r10)*(x1212)*(x1213)))+(((cj9)*(r02)*(sj13)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1218=((IkReal(0.0100000000000000))*(cj14));
IkReal x1219=((r10)*(sj9));
IkReal x1220=((cj9)*(r11));
IkReal x1221=((sj13)*(sj14));
IkReal x1222=((cj14)*(r21));
IkReal x1223=((cj9)*(r00));
IkReal x1224=((IkReal(0.374290000000000))*(cj14));
IkReal x1225=((cj9)*(r01));
IkReal x1226=((r01)*(sj9));
IkReal x1227=((IkReal(0.0100000000000000))*(sj14));
IkReal x1228=((IkReal(1.00000000000000))*(sj13));
IkReal x1229=((r00)*(sj9));
IkReal x1230=((IkReal(0.374290000000000))*(sj14));
IkReal x1231=((cj13)*(sj9));
IkReal x1232=((IkReal(1.00000000000000))*(cj13));
IkReal x1233=((IkReal(1.00000000000000))*(py));
IkReal x1234=((r11)*(sj9));
IkReal x1235=((cj9)*(r10));
IkReal x1236=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x1222)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x1236)))+(((IkReal(-1.00000000000000))*(r21)*(x1221)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x1230)))+(((IkReal(0.374290000000000))*(x1222)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x1218)))+(((r21)*(x1227))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1232)))+(((IkReal(-1.00000000000000))*(r22)*(x1228))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1232)))+(((IkReal(-1.00000000000000))*(x1221)*(x1226)))+(((r02)*(x1231)))+(((x1220)*(x1221)))+(((IkReal(-1.00000000000000))*(cj14)*(x1228)*(x1235)))+(((x1229)*(x1236))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x1223)*(x1228)))+(((IkReal(-1.00000000000000))*(r12)*(x1231)))+(((IkReal(-1.00000000000000))*(cj14)*(x1219)*(x1228)))+(((x1221)*(x1225)))+(((x1221)*(x1234)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x1232))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x1218)*(x1229)))+(((IkReal(-1.00000000000000))*(x1230)*(x1235)))+(((x1224)*(x1226)))+(((IkReal(-1.00000000000000))*(x1220)*(x1224)))+(((IkReal(-1.00000000000000))*(x1220)*(x1227)))+(((x1218)*(x1235)))+(((x1226)*(x1227)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x1233)))+(((x1229)*(x1230))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x1223)*(x1230)))+(((IkReal(-1.00000000000000))*(x1224)*(x1225)))+(((IkReal(-1.00000000000000))*(x1225)*(x1227)))+(((x1218)*(x1219)))+(((IkReal(-1.00000000000000))*(x1224)*(x1234)))+(((IkReal(-1.00000000000000))*(x1227)*(x1234)))+(((x1218)*(x1223)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x1233)))+(((IkReal(-1.00000000000000))*(x1219)*(x1230))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1237=((r00)*(sj14));
IkReal x1238=((cj14)*(r01));
IkReal x1239=((cj14)*(r11));
IkReal x1240=((r10)*(sj14));
IkReal x1241=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((sj9)*(x1237)))+(((sj9)*(x1238)))+(((IkReal(-1.00000000000000))*(x1240)*(x1241))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj9)*(x1240)))+(((sj9)*(x1239)))+(((cj9)*(x1237)))+(((cj9)*(x1238))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((sj9)*(x1237)))+(((sj9)*(x1238)))+(((IkReal(-1.00000000000000))*(x1240)*(x1241)))))+IKsqr(((((sj9)*(x1240)))+(((sj9)*(x1239)))+(((cj9)*(x1237)))+(((cj9)*(x1238)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((sj9)*(x1237)))+(((sj9)*(x1238)))+(((IkReal(-1.00000000000000))*(x1240)*(x1241)))), ((((sj9)*(x1240)))+(((sj9)*(x1239)))+(((cj9)*(x1237)))+(((cj9)*(x1238)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1242=IKcos(j12);
IkReal x1243=IKsin(j12);
IkReal x1244=((sj13)*(sj9));
IkReal x1245=((sj14)*(sj9));
IkReal x1246=((cj13)*(r11));
IkReal x1247=((cj9)*(sj14));
IkReal x1248=((cj13)*(r10));
IkReal x1249=((cj13)*(r01));
IkReal x1250=((cj13)*(r00));
IkReal x1251=((cj14)*(sj9));
IkReal x1252=((IkReal(1.00000000000000))*(r10));
IkReal x1253=((cj9)*(sj13));
IkReal x1254=((IkReal(1.00000000000000))*(x1251));
IkReal x1255=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1255)))+(((IkReal(-1.00000000000000))*(x1243)))+(((r00)*(x1245)))+(((IkReal(-1.00000000000000))*(x1247)*(x1252)))+(((r01)*(x1251))));
evalcond[1]=((x1242)+(((IkReal(-1.00000000000000))*(r11)*(x1254)))+(((IkReal(-1.00000000000000))*(r01)*(x1255)))+(((IkReal(-1.00000000000000))*(x1245)*(x1252)))+(((IkReal(-1.00000000000000))*(r00)*(x1247))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1245)*(x1249)))+(x1242)+(((r12)*(x1253)))+(((IkReal(-1.00000000000000))*(x1248)*(x1255)))+(((x1250)*(x1251)))+(((x1246)*(x1247)))+(((IkReal(-1.00000000000000))*(r02)*(x1244))));
evalcond[3]=((x1243)+(((r02)*(x1253)))+(((IkReal(-1.00000000000000))*(x1248)*(x1254)))+(((x1247)*(x1249)))+(((IkReal(-1.00000000000000))*(x1250)*(x1255)))+(((x1245)*(x1246)))+(((r12)*(x1244))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1256=((IkReal(0.0100000000000000))*(cj14));
IkReal x1257=((r10)*(sj9));
IkReal x1258=((cj9)*(r11));
IkReal x1259=((sj13)*(sj14));
IkReal x1260=((cj14)*(r21));
IkReal x1261=((cj9)*(r00));
IkReal x1262=((IkReal(0.374290000000000))*(cj14));
IkReal x1263=((cj9)*(r01));
IkReal x1264=((r01)*(sj9));
IkReal x1265=((IkReal(0.0100000000000000))*(sj14));
IkReal x1266=((IkReal(1.00000000000000))*(sj13));
IkReal x1267=((r00)*(sj9));
IkReal x1268=((IkReal(0.374290000000000))*(sj14));
IkReal x1269=((cj13)*(sj9));
IkReal x1270=((IkReal(1.00000000000000))*(cj13));
IkReal x1271=((IkReal(1.00000000000000))*(py));
IkReal x1272=((r11)*(sj9));
IkReal x1273=((cj9)*(r10));
IkReal x1274=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x1260)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x1259)))+(((cj13)*(r22)))+(((r20)*(x1274))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1256)))+(((r21)*(x1265)))+(((IkReal(0.374290000000000))*(x1260)))+(pz)+(((r20)*(x1268))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x1266)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1270))));
evalcond[5]=((((x1258)*(x1259)))+(((IkReal(-1.00000000000000))*(cj14)*(x1266)*(x1273)))+(((r02)*(x1269)))+(((x1267)*(x1274)))+(((IkReal(-1.00000000000000))*(x1259)*(x1264)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1270))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r02)*(x1270)))+(((IkReal(-1.00000000000000))*(cj14)*(x1257)*(x1266)))+(((x1259)*(x1272)))+(((x1259)*(x1263)))+(((IkReal(-1.00000000000000))*(r12)*(x1269)))+(((IkReal(-1.00000000000000))*(cj14)*(x1261)*(x1266))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x1268)*(x1273)))+(((IkReal(-1.00000000000000))*(x1258)*(x1262)))+(((IkReal(-1.00000000000000))*(x1258)*(x1265)))+(((x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(cj9)*(x1271)))+(((x1256)*(x1273)))+(((IkReal(-1.00000000000000))*(x1256)*(x1267)))+(((x1262)*(x1264)))+(((x1267)*(x1268)))+(((px)*(sj9))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x1261)*(x1268)))+(((IkReal(-1.00000000000000))*(x1263)*(x1265)))+(((x1256)*(x1257)))+(((x1256)*(x1261)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((IkReal(-1.00000000000000))*(x1257)*(x1268)))+(((IkReal(-1.00000000000000))*(x1262)*(x1272)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x1265)*(x1272)))+(((IkReal(-1.00000000000000))*(sj9)*(x1271))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1275=((cj14)*(cj9));
IkReal x1276=((IkReal(1.00000000000000))*(sj9));
IkReal x1277=((r00)*(sj14));
IkReal x1278=((r10)*(sj14));
if( IKabs(((((r11)*(x1275)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj9)*(x1278)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1276))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((cj9)*(x1277)))+(((sj9)*(x1278)))+(((r01)*(x1275))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r11)*(x1275)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj9)*(x1278)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1276)))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((cj9)*(x1277)))+(((sj9)*(x1278)))+(((r01)*(x1275)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((r11)*(x1275)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj9)*(x1278)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1276)))), ((((cj14)*(r11)*(sj9)))+(((cj9)*(x1277)))+(((sj9)*(x1278)))+(((r01)*(x1275)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x1279=IKcos(j12);
IkReal x1280=IKsin(j12);
IkReal x1281=((r12)*(sj13));
IkReal x1282=((sj14)*(sj9));
IkReal x1283=((cj13)*(r11));
IkReal x1284=((cj9)*(sj14));
IkReal x1285=((IkReal(1.00000000000000))*(cj14));
IkReal x1286=((cj13)*(cj9));
IkReal x1287=((cj13)*(r01));
IkReal x1288=((cj14)*(sj9));
IkReal x1289=((IkReal(1.00000000000000))*(r10));
IkReal x1290=((r02)*(sj13));
evalcond[0]=((x1280)+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1285)))+(((r01)*(x1288)))+(((IkReal(-1.00000000000000))*(x1284)*(x1289)))+(((r00)*(x1282))));
evalcond[1]=((x1279)+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1285)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1285)))+(((IkReal(-1.00000000000000))*(r00)*(x1284)))+(((IkReal(-1.00000000000000))*(x1282)*(x1289))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1285)*(x1286)))+(((x1283)*(x1284)))+(((IkReal(-1.00000000000000))*(x1282)*(x1287)))+(((IkReal(-1.00000000000000))*(x1279)))+(((IkReal(-1.00000000000000))*(sj9)*(x1290)))+(((cj9)*(x1281)))+(((cj13)*(r00)*(x1288))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x1285)))+(x1280)+(((x1284)*(x1287)))+(((sj9)*(x1281)))+(((cj9)*(x1290)))+(((IkReal(-1.00000000000000))*(r00)*(x1285)*(x1286)))+(((x1282)*(x1283))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1291=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1291)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x1291)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1291)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x1291)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1291)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x1291)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1292=IKsin(j12);
IkReal x1293=IKcos(j12);
IkReal x1294=((IkReal(1.00000000000000))*(sj13));
IkReal x1295=((cj13)*(r10));
IkReal x1296=((cj9)*(sj14));
IkReal x1297=((cj13)*(r01));
IkReal x1298=((IkReal(1.00000000000000))*(r10));
IkReal x1299=((r12)*(sj13));
IkReal x1300=((cj13)*(sj14));
IkReal x1301=((cj14)*(r01));
IkReal x1302=((cj13)*(cj14));
IkReal x1303=((IkReal(1.00000000000000))*(cj9));
IkReal x1304=((sj14)*(sj9));
IkReal x1305=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x1292))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj11)*(x1293)))+(((IkReal(-1.00000000000000))*(r21)*(x1300)))+(((IkReal(-1.00000000000000))*(r22)*(x1294)))+(((r20)*(x1302))));
evalcond[2]=((((sj9)*(x1301)))+(((IkReal(-1.00000000000000))*(sj11)*(x1292)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1303)))+(((IkReal(-1.00000000000000))*(x1296)*(x1298)))+(((r00)*(x1304))));
evalcond[3]=((x1293)+(((IkReal(-1.00000000000000))*(r00)*(x1296)))+(((IkReal(-1.00000000000000))*(r11)*(x1305)))+(((IkReal(-1.00000000000000))*(x1298)*(x1304)))+(((IkReal(-1.00000000000000))*(x1301)*(x1303))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1294)))+(((sj11)*(x1293)))+(((r00)*(sj9)*(x1302)))+(((cj9)*(x1299)))+(((IkReal(-1.00000000000000))*(x1297)*(x1304)))+(((cj13)*(r11)*(x1296)))+(((IkReal(-1.00000000000000))*(cj14)*(x1295)*(x1303))));
evalcond[5]=((x1292)+(((x1296)*(x1297)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x1300)))+(((sj9)*(x1299)))+(((IkReal(-1.00000000000000))*(x1295)*(x1305)))+(((IkReal(-1.00000000000000))*(r00)*(x1302)*(x1303))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1306=IKsin(j12);
IkReal x1307=IKcos(j12);
IkReal x1308=((IkReal(1.00000000000000))*(sj13));
IkReal x1309=((cj13)*(r10));
IkReal x1310=((cj9)*(sj14));
IkReal x1311=((cj13)*(r01));
IkReal x1312=((IkReal(1.00000000000000))*(r10));
IkReal x1313=((r12)*(sj13));
IkReal x1314=((cj13)*(sj14));
IkReal x1315=((cj14)*(r01));
IkReal x1316=((cj13)*(cj14));
IkReal x1317=((IkReal(1.00000000000000))*(cj9));
IkReal x1318=((sj14)*(sj9));
IkReal x1319=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x1306))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1308)))+(((IkReal(-1.00000000000000))*(r21)*(x1314)))+(((IkReal(-1.00000000000000))*(cj11)*(x1307)))+(((r20)*(x1316))));
evalcond[2]=((((r00)*(x1318)))+(((IkReal(-1.00000000000000))*(sj11)*(x1306)))+(((sj9)*(x1315)))+(((IkReal(-1.00000000000000))*(x1310)*(x1312)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1317))));
evalcond[3]=((x1307)+(((IkReal(-1.00000000000000))*(x1315)*(x1317)))+(((IkReal(-1.00000000000000))*(r00)*(x1310)))+(((IkReal(-1.00000000000000))*(r11)*(x1319)))+(((IkReal(-1.00000000000000))*(x1312)*(x1318))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x1309)*(x1317)))+(((r00)*(sj9)*(x1316)))+(((cj13)*(r11)*(x1310)))+(((cj9)*(x1313)))+(((IkReal(-1.00000000000000))*(x1311)*(x1318)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1308)))+(((sj11)*(x1307))));
evalcond[5]=((x1306)+(((x1310)*(x1311)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x1313)))+(((r11)*(sj9)*(x1314)))+(((IkReal(-1.00000000000000))*(r00)*(x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(x1309)*(x1319))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1320=((IkReal(1.00000000000000))*(r21));
if( IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj14)*(x1320)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1320))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst56)*(((((IkReal(-1.00000000000000))*(cj14)*(x1320)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((gconst56)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x1320)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1321=IKsin(j12);
IkReal x1322=IKcos(j12);
IkReal x1323=((IkReal(1.00000000000000))*(sj13));
IkReal x1324=((cj13)*(r10));
IkReal x1325=((cj9)*(sj14));
IkReal x1326=((cj13)*(r01));
IkReal x1327=((IkReal(1.00000000000000))*(r10));
IkReal x1328=((r12)*(sj13));
IkReal x1329=((cj13)*(sj14));
IkReal x1330=((cj14)*(r01));
IkReal x1331=((cj13)*(cj14));
IkReal x1332=((IkReal(1.00000000000000))*(cj9));
IkReal x1333=((sj14)*(sj9));
IkReal x1334=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x1321))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1323)))+(((r20)*(x1331)))+(((IkReal(-1.00000000000000))*(r21)*(x1329)))+(((IkReal(-1.00000000000000))*(cj11)*(x1322))));
evalcond[2]=((((sj9)*(x1330)))+(((r00)*(x1333)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1332)))+(((IkReal(-1.00000000000000))*(sj11)*(x1321)))+(((IkReal(-1.00000000000000))*(x1325)*(x1327))));
evalcond[3]=((x1322)+(((IkReal(-1.00000000000000))*(x1327)*(x1333)))+(((IkReal(-1.00000000000000))*(r00)*(x1325)))+(((IkReal(-1.00000000000000))*(x1330)*(x1332)))+(((IkReal(-1.00000000000000))*(r11)*(x1334))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1326)*(x1333)))+(((cj13)*(r11)*(x1325)))+(((cj9)*(x1328)))+(((r00)*(sj9)*(x1331)))+(((IkReal(-1.00000000000000))*(cj14)*(x1324)*(x1332)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1323)))+(((sj11)*(x1322))));
evalcond[5]=((x1321)+(((IkReal(-1.00000000000000))*(x1324)*(x1334)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x1328)))+(((r11)*(sj9)*(x1329)))+(((x1325)*(x1326)))+(((IkReal(-1.00000000000000))*(r00)*(x1331)*(x1332))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.364420000000000))+(((IkReal(-0.0100000000000000))*(cj14)*(r20)))+(((IkReal(0.0100000000000000))*(r21)*(sj14)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.374290000000000))*(r20)*(sj14))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1335=((IkReal(14.4927536231884))*(sj9));
IkReal x1336=((cj9)*(sj14));
IkReal x1337=((IkReal(5.42449275362319))*(r00));
IkReal x1338=((IkReal(0.144927536231884))*(r01));
IkReal x1339=((sj14)*(sj9));
IkReal x1340=((cj14)*(cj9));
IkReal x1341=((IkReal(0.144927536231884))*(r00));
IkReal x1342=((IkReal(5.42449275362319))*(r01));
IkReal x1343=((cj14)*(sj9));
IkReal x1344=((IkReal(0.144927536231884))*(r10));
IkReal x1345=((IkReal(5.42449275362319))*(r10));
IkReal x1346=((IkReal(14.4927536231884))*(cj9));
IkReal x1347=((IkReal(0.144927536231884))*(r11));
IkReal x1348=((IkReal(5.42449275362319))*(cj14)*(r11));
if( IKabs(((((IkReal(-1.00000000000000))*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(px)*(x1335)))+(((IkReal(-1.00000000000000))*(x1337)*(x1339)))+(((IkReal(5.42449275362319))*(r11)*(x1340)))+(((x1341)*(x1343)))+(((x1336)*(x1347)))+(((x1336)*(x1345)))+(((IkReal(-1.00000000000000))*(x1342)*(x1343)))+(((IkReal(-1.00000000000000))*(x1338)*(x1339)))+(((py)*(x1346))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1340)*(x1342)))+(((IkReal(-1.00000000000000))*(py)*(x1335)))+(((x1340)*(x1341)))+(((IkReal(-1.00000000000000))*(px)*(x1346)))+(((IkReal(-1.00000000000000))*(x1339)*(x1345)))+(((IkReal(-1.00000000000000))*(x1339)*(x1347)))+(((IkReal(-1.00000000000000))*(x1336)*(x1338)))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((IkReal(-5.42449275362319))*(r11)*(x1343)))+(((x1343)*(x1344))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(px)*(x1335)))+(((IkReal(-1.00000000000000))*(x1337)*(x1339)))+(((IkReal(5.42449275362319))*(r11)*(x1340)))+(((x1341)*(x1343)))+(((x1336)*(x1347)))+(((x1336)*(x1345)))+(((IkReal(-1.00000000000000))*(x1342)*(x1343)))+(((IkReal(-1.00000000000000))*(x1338)*(x1339)))+(((py)*(x1346)))))+IKsqr(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1340)*(x1342)))+(((IkReal(-1.00000000000000))*(py)*(x1335)))+(((x1340)*(x1341)))+(((IkReal(-1.00000000000000))*(px)*(x1346)))+(((IkReal(-1.00000000000000))*(x1339)*(x1345)))+(((IkReal(-1.00000000000000))*(x1339)*(x1347)))+(((IkReal(-1.00000000000000))*(x1336)*(x1338)))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((IkReal(-5.42449275362319))*(r11)*(x1343)))+(((x1343)*(x1344)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(px)*(x1335)))+(((IkReal(-1.00000000000000))*(x1337)*(x1339)))+(((IkReal(5.42449275362319))*(r11)*(x1340)))+(((x1341)*(x1343)))+(((x1336)*(x1347)))+(((x1336)*(x1345)))+(((IkReal(-1.00000000000000))*(x1342)*(x1343)))+(((IkReal(-1.00000000000000))*(x1338)*(x1339)))+(((py)*(x1346)))), ((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1340)*(x1342)))+(((IkReal(-1.00000000000000))*(py)*(x1335)))+(((x1340)*(x1341)))+(((IkReal(-1.00000000000000))*(px)*(x1346)))+(((IkReal(-1.00000000000000))*(x1339)*(x1345)))+(((IkReal(-1.00000000000000))*(x1339)*(x1347)))+(((IkReal(-1.00000000000000))*(x1336)*(x1338)))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((IkReal(-5.42449275362319))*(r11)*(x1343)))+(((x1343)*(x1344)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x1349=((IkReal(0.0100000000000000))*(cj14));
IkReal x1350=((r10)*(sj9));
IkReal x1351=((cj9)*(r00));
IkReal x1352=((IkReal(0.0100000000000000))*(sj14));
IkReal x1353=((r00)*(sj9));
IkReal x1354=((IkReal(0.374290000000000))*(sj14));
IkReal x1355=((r01)*(sj9));
IkReal x1356=((IkReal(1.00000000000000))*(py));
IkReal x1357=((cj9)*(r10));
IkReal x1358=((IkReal(0.374290000000000))*(cj14));
IkReal x1359=((r11)*(sj9));
IkReal x1360=((cj9)*(x1358));
evalcond[0]=((((x1355)*(x1358)))+(((IkReal(-1.00000000000000))*(r11)*(x1360)))+(((IkReal(-1.00000000000000))*(x1354)*(x1357)))+(((IkReal(0.0690000000000000))*(IKsin(j11))))+(((x1349)*(x1357)))+(((IkReal(-1.00000000000000))*(cj9)*(x1356)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353)))+(((x1353)*(x1354)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1352)))+(((x1352)*(x1355))));
evalcond[1]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x1352)*(x1359)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1354)))+(((IkReal(-1.00000000000000))*(r01)*(x1360)))+(((x1349)*(x1351)))+(((x1349)*(x1350)))+(((IkReal(-0.0690000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(sj9)*(x1356)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x1351)*(x1354)))+(((IkReal(-1.00000000000000))*(x1358)*(x1359))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst65;
IkReal x1361=((r22)*(sj14));
IkReal x1362=((IkReal(1.00000000000000))*(cj9));
IkReal x1363=((cj14)*(sj9));
IkReal x1364=((r21)*(sj14));
gconst65=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r22)*(x1363)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1362)))+(((IkReal(-1.00000000000000))*(r11)*(x1361)*(x1362)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1364)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x1361)))+(((r02)*(r20)*(x1363)))+(((cj9)*(r12)*(x1364)))));
IkReal x1365=((r22)*(sj14));
IkReal x1366=((IkReal(1.00000000000000))*(cj9));
IkReal x1367=((cj14)*(sj9));
IkReal x1368=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r22)*(x1367)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1366)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1368)))+(((IkReal(-1.00000000000000))*(r11)*(x1365)*(x1366)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x1365)))+(((r02)*(r20)*(x1367)))+(((cj9)*(r12)*(x1368))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst66;
IkReal x1369=((cj9)*(sj14));
IkReal x1370=((IkReal(1.00000000000000))*(r22));
IkReal x1371=((sj14)*(sj9));
IkReal x1372=((cj14)*(sj9));
IkReal x1373=((IkReal(1.00000000000000))*(r20));
IkReal x1374=((cj14)*(cj9));
gconst66=IKsign(((((r00)*(r22)*(x1374)))+(((IkReal(-1.00000000000000))*(r01)*(x1369)*(x1370)))+(((r02)*(r21)*(x1369)))+(((r12)*(r21)*(x1371)))+(((IkReal(-1.00000000000000))*(r02)*(x1373)*(x1374)))+(((IkReal(-1.00000000000000))*(r11)*(x1370)*(x1371)))+(((IkReal(-1.00000000000000))*(r12)*(x1372)*(x1373)))+(((r10)*(r22)*(x1372)))));
IkReal x1375=((cj9)*(sj14));
IkReal x1376=((IkReal(1.00000000000000))*(r22));
IkReal x1377=((sj14)*(sj9));
IkReal x1378=((cj14)*(sj9));
IkReal x1379=((IkReal(1.00000000000000))*(r20));
IkReal x1380=((cj14)*(cj9));
dummyeval[0]=((((r12)*(r21)*(x1377)))+(((r02)*(r21)*(x1375)))+(((IkReal(-1.00000000000000))*(r12)*(x1378)*(x1379)))+(((IkReal(-1.00000000000000))*(r02)*(x1379)*(x1380)))+(((r10)*(r22)*(x1378)))+(((IkReal(-1.00000000000000))*(r11)*(x1376)*(x1377)))+(((IkReal(-1.00000000000000))*(r01)*(x1375)*(x1376)))+(((r00)*(r22)*(x1380))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1381=((IkReal(0.0100000000000000))*(cj14));
IkReal x1382=((r10)*(sj9));
IkReal x1383=((cj9)*(r00));
IkReal x1384=((cj14)*(r11));
IkReal x1385=((IkReal(1.00000000000000))*(sj9));
IkReal x1386=((IkReal(0.374290000000000))*(cj14));
IkReal x1387=((cj9)*(r01));
IkReal x1388=((IkReal(0.0100000000000000))*(sj14));
IkReal x1389=((r00)*(sj9));
IkReal x1390=((IkReal(0.374290000000000))*(sj14));
IkReal x1391=((r01)*(sj9));
IkReal x1392=((IkReal(1.00000000000000))*(sj14));
IkReal x1393=((cj9)*(r10));
IkReal x1394=((IkReal(1.00000000000000))*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1381)))+(((r21)*(x1386)))+(((r21)*(x1388)))+(((r20)*(x1390)))+(pz));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1384)*(x1385)))+(((IkReal(-1.00000000000000))*(x1383)*(x1392)))+(((IkReal(-1.00000000000000))*(x1382)*(x1392)))+(((IkReal(-1.00000000000000))*(cj14)*(x1387))));
evalcond[3]=((IkReal(0.0690000000000000))+(((x1388)*(x1391)))+(((IkReal(-1.00000000000000))*(x1390)*(x1393)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1388)))+(((IkReal(-1.00000000000000))*(x1381)*(x1389)))+(((x1386)*(x1391)))+(((x1389)*(x1390)))+(((px)*(sj9)))+(((IkReal(-0.374290000000000))*(cj9)*(x1384)))+(((IkReal(-1.00000000000000))*(py)*(x1394)))+(((x1381)*(x1393))));
evalcond[4]=((IkReal(0.0690000000000000))+(((x1381)*(x1382)))+(((x1381)*(x1383)))+(((IkReal(-0.374290000000000))*(sj9)*(x1384)))+(((IkReal(-1.00000000000000))*(x1383)*(x1390)))+(((IkReal(-1.00000000000000))*(x1382)*(x1390)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1388)))+(((IkReal(-1.00000000000000))*(px)*(x1394)))+(((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((IkReal(-1.00000000000000))*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(py)*(x1385))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1395=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1395)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1395))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1395)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1395)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1395)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1395)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x1396=((IkReal(1.00000000000000))*(cj9));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1396)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1396))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
gconst71=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x1397=(sj14)*(sj14);
IkReal x1398=(cj14)*(cj14);
IkReal x1399=((cj9)*(r10));
IkReal x1400=((r00)*(sj9));
IkReal x1401=((IkReal(1.00000000000000))*(cj9));
IkReal x1402=((r01)*(sj9));
IkReal x1403=((cj14)*(r21)*(sj14));
IkReal x1404=((r20)*(x1398));
IkReal x1405=((cj14)*(r20)*(sj14));
IkReal x1406=((r21)*(x1397));
gconst72=IKsign(((((IkReal(-1.00000000000000))*(x1400)*(x1403)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x1401)))+(((IkReal(-1.00000000000000))*(x1402)*(x1405)))+(((IkReal(-1.00000000000000))*(r11)*(x1401)*(x1406)))+(((x1399)*(x1403)))+(((cj9)*(r11)*(x1405)))+(((x1402)*(x1406)))+(((x1400)*(x1404)))+(((r02)*(r22)*(sj9)))+(((IkReal(-1.00000000000000))*(x1399)*(x1404)))));
IkReal x1407=(sj14)*(sj14);
IkReal x1408=(cj14)*(cj14);
IkReal x1409=((cj9)*(r10));
IkReal x1410=((r00)*(sj9));
IkReal x1411=((IkReal(1.00000000000000))*(cj9));
IkReal x1412=((r01)*(sj9));
IkReal x1413=((cj14)*(r21)*(sj14));
IkReal x1414=((r20)*(x1408));
IkReal x1415=((cj14)*(r20)*(sj14));
IkReal x1416=((r21)*(x1407));
dummyeval[0]=((((x1412)*(x1416)))+(((cj9)*(r11)*(x1415)))+(((IkReal(-1.00000000000000))*(r11)*(x1411)*(x1416)))+(((IkReal(-1.00000000000000))*(x1410)*(x1413)))+(((x1410)*(x1414)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x1411)))+(((x1409)*(x1413)))+(((IkReal(-1.00000000000000))*(x1409)*(x1414)))+(((r02)*(r22)*(sj9)))+(((IkReal(-1.00000000000000))*(x1412)*(x1415))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((cj12)*(gconst72)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(cj12)*(cj14)*(r20)))+(((cj12)*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((cj12)*(gconst72)*(r22)), ((gconst72)*(((((IkReal(-1.00000000000000))*(cj12)*(cj14)*(r20)))+(((cj12)*(r21)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1417=IKsin(j13);
IkReal x1418=IKcos(j13);
IkReal x1419=((r11)*(sj14));
IkReal x1420=((IkReal(1.00000000000000))*(r02));
IkReal x1421=((r01)*(sj14));
IkReal x1422=((cj14)*(r00));
IkReal x1423=((IkReal(1.00000000000000))*(r12));
IkReal x1424=((r21)*(sj14));
IkReal x1425=((cj14)*(r20));
IkReal x1426=((cj9)*(x1417));
IkReal x1427=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1428=((sj9)*(x1417));
IkReal x1429=((sj9)*(x1418));
IkReal x1430=((cj9)*(x1418));
IkReal x1431=((IkReal(1.00000000000000))*(x1417));
evalcond[0]=((((r22)*(x1418)))+(((IkReal(-1.00000000000000))*(x1424)*(x1431)))+(((x1417)*(x1425))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1418)*(x1424)))+(((IkReal(-1.00000000000000))*(r22)*(x1431)))+(((IkReal(-1.00000000000000))*(sj12)))+(((x1418)*(x1425))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1426)*(x1427)))+(((x1422)*(x1428)))+(((r02)*(x1429)))+(((IkReal(-1.00000000000000))*(x1421)*(x1428)))+(((x1419)*(x1426)))+(((IkReal(-1.00000000000000))*(x1423)*(x1430))));
evalcond[3]=((((x1422)*(x1429)))+(((x1419)*(x1430)))+(((IkReal(-1.00000000000000))*(x1420)*(x1428)))+(cj12)+(((IkReal(-1.00000000000000))*(x1421)*(x1429)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((r12)*(x1426))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1420)*(x1430)))+(((IkReal(-1.00000000000000))*(x1422)*(x1426)))+(((IkReal(-1.00000000000000))*(x1427)*(x1428)))+(((IkReal(-1.00000000000000))*(x1423)*(x1429)))+(((x1419)*(x1428)))+(((x1421)*(x1426))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1427)*(x1429)))+(((x1421)*(x1430)))+(((r02)*(x1426)))+(((x1419)*(x1429)))+(((IkReal(-1.00000000000000))*(x1422)*(x1430)))+(((r12)*(x1428))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst71)*(r22)*(sj12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst71)*(r22)*(sj12)), ((gconst71)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1432=IKsin(j13);
IkReal x1433=IKcos(j13);
IkReal x1434=((r11)*(sj14));
IkReal x1435=((IkReal(1.00000000000000))*(r02));
IkReal x1436=((r01)*(sj14));
IkReal x1437=((cj14)*(r00));
IkReal x1438=((IkReal(1.00000000000000))*(r12));
IkReal x1439=((r21)*(sj14));
IkReal x1440=((cj14)*(r20));
IkReal x1441=((cj9)*(x1432));
IkReal x1442=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1443=((sj9)*(x1432));
IkReal x1444=((sj9)*(x1433));
IkReal x1445=((cj9)*(x1433));
IkReal x1446=((IkReal(1.00000000000000))*(x1432));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1439)*(x1446)))+(((x1432)*(x1440)))+(((r22)*(x1433))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1446)))+(((x1433)*(x1440)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1433)*(x1439))));
evalcond[2]=((((x1437)*(x1443)))+(((x1434)*(x1441)))+(((IkReal(-1.00000000000000))*(x1438)*(x1445)))+(((IkReal(-1.00000000000000))*(x1441)*(x1442)))+(((r02)*(x1444)))+(((IkReal(-1.00000000000000))*(x1436)*(x1443))));
evalcond[3]=((((x1437)*(x1444)))+(((x1434)*(x1445)))+(((r12)*(x1441)))+(cj12)+(((IkReal(-1.00000000000000))*(x1435)*(x1443)))+(((IkReal(-1.00000000000000))*(x1436)*(x1444)))+(((IkReal(-1.00000000000000))*(x1442)*(x1445))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1434)*(x1443)))+(((IkReal(-1.00000000000000))*(x1438)*(x1444)))+(((x1436)*(x1441)))+(((IkReal(-1.00000000000000))*(x1435)*(x1445)))+(((IkReal(-1.00000000000000))*(x1437)*(x1441)))+(((IkReal(-1.00000000000000))*(x1442)*(x1443))));
evalcond[5]=((((x1434)*(x1444)))+(((r12)*(x1443)))+(((r02)*(x1441)))+(((x1436)*(x1445)))+(((IkReal(-1.00000000000000))*(x1437)*(x1445)))+(((IkReal(-1.00000000000000))*(x1442)*(x1444))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1447=((IkReal(0.0100000000000000))*(cj14));
IkReal x1448=((r10)*(sj9));
IkReal x1449=((cj9)*(r00));
IkReal x1450=((cj14)*(r11));
IkReal x1451=((IkReal(1.00000000000000))*(sj9));
IkReal x1452=((IkReal(0.374290000000000))*(cj14));
IkReal x1453=((cj9)*(r01));
IkReal x1454=((IkReal(0.0100000000000000))*(sj14));
IkReal x1455=((r00)*(sj9));
IkReal x1456=((IkReal(0.374290000000000))*(sj14));
IkReal x1457=((r01)*(sj9));
IkReal x1458=((IkReal(1.00000000000000))*(sj14));
IkReal x1459=((cj9)*(r10));
IkReal x1460=((IkReal(1.00000000000000))*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1447)))+(((r20)*(x1456)))+(pz)+(((r21)*(x1454)))+(((r21)*(x1452))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1448)*(x1458)))+(((IkReal(-1.00000000000000))*(cj14)*(x1453)))+(((IkReal(-1.00000000000000))*(x1449)*(x1458)))+(((IkReal(-1.00000000000000))*(x1450)*(x1451))));
evalcond[3]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x1460)))+(((IkReal(-1.00000000000000))*(x1447)*(x1455)))+(((x1455)*(x1456)))+(((x1454)*(x1457)))+(((x1447)*(x1459)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1454)))+(((IkReal(-0.374290000000000))*(cj9)*(x1450)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)))+(((x1452)*(x1457))));
evalcond[4]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x1448)*(x1456)))+(((IkReal(-0.374290000000000))*(sj9)*(x1450)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1454)))+(((IkReal(-1.00000000000000))*(x1453)*(x1454)))+(((IkReal(-1.00000000000000))*(py)*(x1451)))+(((IkReal(-1.00000000000000))*(px)*(x1460)))+(((x1447)*(x1448)))+(((x1447)*(x1449)))+(((IkReal(-1.00000000000000))*(x1452)*(x1453)))+(((IkReal(-1.00000000000000))*(x1449)*(x1456))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1461=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1461)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1461))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1461)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1461)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x1461)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1461)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x1462=((IkReal(1.00000000000000))*(cj9));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((r20)*(sj14))));
evalcond[1]=((IKsin(j12))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1462)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x1462)))+(((r00)*(sj14)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst75;
gconst75=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x1463=((cj14)*(r20));
IkReal x1464=((r12)*(sj9));
IkReal x1465=((r22)*(sj14));
IkReal x1466=((cj9)*(r02));
IkReal x1467=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x1468=((IkReal(1.00000000000000))*(r21)*(sj14));
gconst76=IKsign(((((x1463)*(x1466)))+(((x1463)*(x1464)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1467)))+(((IkReal(-1.00000000000000))*(x1466)*(x1468)))+(((IkReal(-1.00000000000000))*(x1464)*(x1468)))+(((r11)*(sj9)*(x1465)))+(((cj9)*(r01)*(x1465)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1467)))));
IkReal x1469=((cj14)*(r20));
IkReal x1470=((r12)*(sj9));
IkReal x1471=((r22)*(sj14));
IkReal x1472=((cj9)*(r02));
IkReal x1473=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x1474=((IkReal(1.00000000000000))*(r21)*(sj14));
dummyeval[0]=((((cj9)*(r01)*(x1471)))+(((IkReal(-1.00000000000000))*(x1470)*(x1474)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1473)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1473)))+(((IkReal(-1.00000000000000))*(x1472)*(x1474)))+(((x1469)*(x1472)))+(((x1469)*(x1470)))+(((r11)*(sj9)*(x1471))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst76)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((IkReal(-1.00000000000000))*(cj14)*(r20)))+(((r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst76)*(r22)), ((gconst76)*(((((IkReal(-1.00000000000000))*(cj14)*(r20)))+(((r21)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1475=IKsin(j13);
IkReal x1476=IKcos(j13);
IkReal x1477=((r11)*(sj14));
IkReal x1478=((IkReal(1.00000000000000))*(r02));
IkReal x1479=((r01)*(sj14));
IkReal x1480=((cj14)*(r00));
IkReal x1481=((IkReal(1.00000000000000))*(r12));
IkReal x1482=((r21)*(sj14));
IkReal x1483=((cj14)*(r20));
IkReal x1484=((cj9)*(x1475));
IkReal x1485=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1486=((sj9)*(x1475));
IkReal x1487=((sj9)*(x1476));
IkReal x1488=((cj9)*(x1476));
IkReal x1489=((IkReal(1.00000000000000))*(x1475));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1482)*(x1489)))+(((r22)*(x1476)))+(((x1475)*(x1483))));
evalcond[1]=((((x1476)*(x1483)))+(((IkReal(-1.00000000000000))*(x1476)*(x1482)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(r22)*(x1489))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1479)*(x1486)))+(((IkReal(-1.00000000000000))*(x1481)*(x1488)))+(((x1480)*(x1486)))+(((x1477)*(x1484)))+(((IkReal(-1.00000000000000))*(x1484)*(x1485)))+(((r02)*(x1487))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1479)*(x1487)))+(((x1480)*(x1487)))+(((IkReal(-1.00000000000000))*(x1485)*(x1488)))+(((x1477)*(x1488)))+(((r12)*(x1484)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x1478)*(x1486))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1481)*(x1487)))+(((IkReal(-1.00000000000000))*(x1485)*(x1486)))+(((x1477)*(x1486)))+(((IkReal(-1.00000000000000))*(x1480)*(x1484)))+(((IkReal(-1.00000000000000))*(x1478)*(x1488)))+(((x1479)*(x1484))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1485)*(x1487)))+(((x1477)*(x1487)))+(((r12)*(x1486)))+(((IkReal(-1.00000000000000))*(x1480)*(x1488)))+(((r02)*(x1484)))+(((x1479)*(x1488))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst75)*(r22)*(sj12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst75)*(r22)*(sj12)), ((gconst75)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1490=IKsin(j13);
IkReal x1491=IKcos(j13);
IkReal x1492=((r11)*(sj14));
IkReal x1493=((IkReal(1.00000000000000))*(r02));
IkReal x1494=((r01)*(sj14));
IkReal x1495=((cj14)*(r00));
IkReal x1496=((IkReal(1.00000000000000))*(r12));
IkReal x1497=((r21)*(sj14));
IkReal x1498=((cj14)*(r20));
IkReal x1499=((cj9)*(x1490));
IkReal x1500=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1501=((sj9)*(x1490));
IkReal x1502=((sj9)*(x1491));
IkReal x1503=((cj9)*(x1491));
IkReal x1504=((IkReal(1.00000000000000))*(x1490));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1497)*(x1504)))+(((r22)*(x1491)))+(((x1490)*(x1498))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1504)))+(((IkReal(-1.00000000000000))*(x1491)*(x1497)))+(((x1491)*(x1498)))+(((IkReal(-1.00000000000000))*(sj12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1499)*(x1500)))+(((x1492)*(x1499)))+(((x1495)*(x1501)))+(((r02)*(x1502)))+(((IkReal(-1.00000000000000))*(x1494)*(x1501)))+(((IkReal(-1.00000000000000))*(x1496)*(x1503))));
evalcond[3]=((((x1492)*(x1503)))+(((r12)*(x1499)))+(((x1495)*(x1502)))+(((IkReal(-1.00000000000000))*(x1500)*(x1503)))+(((IkReal(-1.00000000000000))*(x1494)*(x1502)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x1493)*(x1501))));
evalcond[4]=((IkReal(-1.00000000000000))+(((x1492)*(x1501)))+(((x1494)*(x1499)))+(((IkReal(-1.00000000000000))*(x1495)*(x1499)))+(((IkReal(-1.00000000000000))*(x1500)*(x1501)))+(((IkReal(-1.00000000000000))*(x1496)*(x1502)))+(((IkReal(-1.00000000000000))*(x1493)*(x1503))));
evalcond[5]=((((x1492)*(x1502)))+(((x1494)*(x1503)))+(((r12)*(x1501)))+(((IkReal(-1.00000000000000))*(x1495)*(x1503)))+(((IkReal(-1.00000000000000))*(x1500)*(x1502)))+(((r02)*(x1499))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x1505=IKsin(j12);
IkReal x1506=((r00)*(sj14));
IkReal x1507=((IkReal(1.00000000000000))*(cj14));
IkReal x1508=((IkReal(1.00000000000000))*(cj9));
IkReal x1509=((r10)*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x1505)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1507)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)))+(((sj9)*(x1506))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x1509)))+(((IkReal(-1.00000000000000))*(x1506)*(x1508)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1507)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1507)))+(((cj11)*(x1505))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst67;
gconst67=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
IkReal x1510=((r22)*(sj14));
IkReal x1511=((IkReal(1.00000000000000))*(cj9));
IkReal x1512=((cj14)*(sj9));
IkReal x1513=((r21)*(sj14));
gconst68=IKsign(((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1513)))+(((r02)*(r20)*(x1512)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1512)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1511)))+(((cj9)*(r12)*(x1513)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x1510)))+(((IkReal(-1.00000000000000))*(r11)*(x1510)*(x1511)))));
IkReal x1514=((r22)*(sj14));
IkReal x1515=((IkReal(1.00000000000000))*(cj9));
IkReal x1516=((cj14)*(sj9));
IkReal x1517=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1517)))+(((r02)*(r20)*(x1516)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1516)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1515)))+(((cj9)*(r12)*(x1517)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x1514)))+(((IkReal(-1.00000000000000))*(r11)*(x1514)*(x1515))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((cj11)*(gconst68)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((cj11)*(gconst68)*(r22)), ((gconst68)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1518=IKsin(j13);
IkReal x1519=IKcos(j13);
IkReal x1520=((r11)*(sj14));
IkReal x1521=((IkReal(1.00000000000000))*(r02));
IkReal x1522=((r01)*(sj14));
IkReal x1523=((cj14)*(r00));
IkReal x1524=((IkReal(1.00000000000000))*(r12));
IkReal x1525=((r21)*(sj14));
IkReal x1526=((cj14)*(r20));
IkReal x1527=((cj9)*(x1518));
IkReal x1528=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1529=((sj9)*(x1518));
IkReal x1530=((sj9)*(x1519));
IkReal x1531=((cj9)*(x1519));
IkReal x1532=((IkReal(1.00000000000000))*(x1518));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1525)*(x1532)))+(((x1518)*(x1526)))+(((r22)*(x1519))));
evalcond[1]=((((x1519)*(x1526)))+(((IkReal(-1.00000000000000))*(r22)*(x1532)))+(((IkReal(-1.00000000000000))*(x1519)*(x1525)))+(((IkReal(-1.00000000000000))*(sj12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1524)*(x1531)))+(((x1523)*(x1529)))+(((x1520)*(x1527)))+(cj11)+(((r02)*(x1530)))+(((IkReal(-1.00000000000000))*(x1527)*(x1528)))+(((IkReal(-1.00000000000000))*(x1522)*(x1529))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1522)*(x1530)))+(((r12)*(x1527)))+(((x1523)*(x1530)))+(((x1520)*(x1531)))+(((IkReal(-1.00000000000000))*(x1528)*(x1531)))+(((cj12)*(sj11)))+(((IkReal(-1.00000000000000))*(x1521)*(x1529))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1524)*(x1530)))+(((IkReal(-1.00000000000000))*(x1521)*(x1531)))+(((x1522)*(x1527)))+(((x1520)*(x1529)))+(sj11)+(((IkReal(-1.00000000000000))*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(x1523)*(x1527))));
evalcond[5]=((((r12)*(x1529)))+(((x1522)*(x1531)))+(((x1520)*(x1530)))+(((IkReal(-1.00000000000000))*(x1528)*(x1530)))+(((r02)*(x1527)))+(((IkReal(-1.00000000000000))*(cj11)*(cj12)))+(((IkReal(-1.00000000000000))*(x1523)*(x1531))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst67)*(r22)*(sj12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst67)*(r22)*(sj12)), ((gconst67)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1533=IKsin(j13);
IkReal x1534=IKcos(j13);
IkReal x1535=((r11)*(sj14));
IkReal x1536=((IkReal(1.00000000000000))*(r02));
IkReal x1537=((r01)*(sj14));
IkReal x1538=((cj14)*(r00));
IkReal x1539=((IkReal(1.00000000000000))*(r12));
IkReal x1540=((r21)*(sj14));
IkReal x1541=((cj14)*(r20));
IkReal x1542=((cj9)*(x1533));
IkReal x1543=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1544=((sj9)*(x1533));
IkReal x1545=((sj9)*(x1534));
IkReal x1546=((cj9)*(x1534));
IkReal x1547=((IkReal(1.00000000000000))*(x1533));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1540)*(x1547)))+(((x1533)*(x1541)))+(((r22)*(x1534))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1534)*(x1540)))+(((IkReal(-1.00000000000000))*(r22)*(x1547)))+(((x1534)*(x1541)))+(((IkReal(-1.00000000000000))*(sj12))));
evalcond[2]=((((x1538)*(x1544)))+(((IkReal(-1.00000000000000))*(x1537)*(x1544)))+(cj11)+(((r02)*(x1545)))+(((IkReal(-1.00000000000000))*(x1539)*(x1546)))+(((IkReal(-1.00000000000000))*(x1542)*(x1543)))+(((x1535)*(x1542))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1543)*(x1546)))+(((x1538)*(x1545)))+(((IkReal(-1.00000000000000))*(x1537)*(x1545)))+(((r12)*(x1542)))+(((IkReal(-1.00000000000000))*(x1536)*(x1544)))+(((cj12)*(sj11)))+(((x1535)*(x1546))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1543)*(x1544)))+(((x1537)*(x1542)))+(sj11)+(((IkReal(-1.00000000000000))*(x1536)*(x1546)))+(((IkReal(-1.00000000000000))*(x1539)*(x1545)))+(((x1535)*(x1544)))+(((IkReal(-1.00000000000000))*(x1538)*(x1542))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1543)*(x1545)))+(((x1537)*(x1546)))+(((r12)*(x1544)))+(((r02)*(x1542)))+(((x1535)*(x1545)))+(((IkReal(-1.00000000000000))*(cj11)*(cj12)))+(((IkReal(-1.00000000000000))*(x1538)*(x1546))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst66)*(r22)*(sj11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst66)*(((((r21)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst66)*(r22)*(sj11)), ((gconst66)*(((((r21)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj11)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1548=IKsin(j13);
IkReal x1549=IKcos(j13);
IkReal x1550=((r11)*(sj14));
IkReal x1551=((r01)*(sj14));
IkReal x1552=((cj14)*(r00));
IkReal x1553=((cj9)*(x1548));
IkReal x1554=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1555=((sj9)*(x1548));
IkReal x1556=((sj9)*(x1549));
IkReal x1557=((IkReal(1.00000000000000))*(cj9)*(x1549));
evalcond[0]=((((cj14)*(r20)*(x1548)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1548)))+(((r22)*(x1549))));
evalcond[1]=((((x1552)*(x1555)))+(((x1550)*(x1553)))+(((IkReal(-1.00000000000000))*(x1553)*(x1554)))+(cj11)+(((IkReal(-1.00000000000000))*(x1551)*(x1555)))+(((r02)*(x1556)))+(((IkReal(-1.00000000000000))*(r12)*(x1557))));
evalcond[2]=((((x1551)*(x1553)))+(((x1550)*(x1555)))+(((IkReal(-1.00000000000000))*(r02)*(x1557)))+(((IkReal(-1.00000000000000))*(x1552)*(x1553)))+(sj11)+(((IkReal(-1.00000000000000))*(r12)*(x1556)))+(((IkReal(-1.00000000000000))*(x1554)*(x1555))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1558=IKsin(j12);
IkReal x1559=IKcos(j12);
IkReal x1560=((IkReal(1.00000000000000))*(sj13));
IkReal x1561=((cj13)*(r10));
IkReal x1562=((cj9)*(sj14));
IkReal x1563=((cj13)*(r01));
IkReal x1564=((IkReal(1.00000000000000))*(r10));
IkReal x1565=((cj9)*(sj13));
IkReal x1566=((cj13)*(sj14));
IkReal x1567=((cj14)*(r01));
IkReal x1568=((cj13)*(cj14));
IkReal x1569=((IkReal(1.00000000000000))*(cj9));
IkReal x1570=((sj14)*(sj9));
IkReal x1571=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x1572=((IkReal(1.00000000000000))*(x1559));
IkReal x1573=((IkReal(1.00000000000000))*(x1558));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x1572))));
evalcond[1]=((((r20)*(x1568)))+(((IkReal(-1.00000000000000))*(r21)*(x1566)))+(((IkReal(-1.00000000000000))*(r22)*(x1560)))+(((IkReal(-1.00000000000000))*(x1573))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1562)*(x1564)))+(((IkReal(-1.00000000000000))*(sj11)*(x1573)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1569)))+(((r00)*(x1570)))+(((sj9)*(x1567))));
evalcond[3]=((((cj11)*(x1558)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1564)*(x1570)))+(((IkReal(-1.00000000000000))*(r11)*(x1571)))+(((IkReal(-1.00000000000000))*(r00)*(x1562))));
evalcond[4]=((((sj11)*(x1559)))+(((IkReal(-1.00000000000000))*(cj14)*(x1561)*(x1569)))+(((r12)*(x1565)))+(((cj13)*(r11)*(x1562)))+(((r00)*(sj9)*(x1568)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1560)))+(((IkReal(-1.00000000000000))*(x1563)*(x1570))));
evalcond[5]=((((r11)*(sj9)*(x1566)))+(((IkReal(-1.00000000000000))*(cj11)*(x1572)))+(((x1562)*(x1563)))+(((r02)*(x1565)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(x1561)*(x1571))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((cj11)*(gconst65)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst65)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((cj11)*(gconst65)*(r22)), ((gconst65)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1574=IKsin(j13);
IkReal x1575=IKcos(j13);
IkReal x1576=((r11)*(sj14));
IkReal x1577=((r01)*(sj14));
IkReal x1578=((cj14)*(r00));
IkReal x1579=((cj9)*(x1574));
IkReal x1580=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1581=((sj9)*(x1574));
IkReal x1582=((sj9)*(x1575));
IkReal x1583=((IkReal(1.00000000000000))*(cj9)*(x1575));
evalcond[0]=((((cj14)*(r20)*(x1574)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1574)))+(((r22)*(x1575))));
evalcond[1]=((((x1576)*(x1579)))+(((IkReal(-1.00000000000000))*(x1577)*(x1581)))+(cj11)+(((IkReal(-1.00000000000000))*(x1579)*(x1580)))+(((r02)*(x1582)))+(((x1578)*(x1581)))+(((IkReal(-1.00000000000000))*(r12)*(x1583))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1580)*(x1581)))+(((IkReal(-1.00000000000000))*(x1578)*(x1579)))+(((x1576)*(x1581)))+(((IkReal(-1.00000000000000))*(r02)*(x1583)))+(sj11)+(((x1577)*(x1579)))+(((IkReal(-1.00000000000000))*(r12)*(x1582))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1584=IKsin(j12);
IkReal x1585=IKcos(j12);
IkReal x1586=((IkReal(1.00000000000000))*(sj13));
IkReal x1587=((cj13)*(r10));
IkReal x1588=((cj9)*(sj14));
IkReal x1589=((cj13)*(r01));
IkReal x1590=((IkReal(1.00000000000000))*(r10));
IkReal x1591=((cj9)*(sj13));
IkReal x1592=((cj13)*(sj14));
IkReal x1593=((cj14)*(r01));
IkReal x1594=((cj13)*(cj14));
IkReal x1595=((IkReal(1.00000000000000))*(cj9));
IkReal x1596=((sj14)*(sj9));
IkReal x1597=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x1598=((IkReal(1.00000000000000))*(x1585));
IkReal x1599=((IkReal(1.00000000000000))*(x1584));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1598)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1599)))+(((r20)*(x1594)))+(((IkReal(-1.00000000000000))*(r21)*(x1592)))+(((IkReal(-1.00000000000000))*(r22)*(x1586))));
evalcond[2]=((((r00)*(x1596)))+(((sj9)*(x1593)))+(((IkReal(-1.00000000000000))*(x1588)*(x1590)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1595)))+(((IkReal(-1.00000000000000))*(sj11)*(x1599))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1588)))+(((IkReal(-1.00000000000000))*(x1593)*(x1595)))+(((cj11)*(x1584)))+(((IkReal(-1.00000000000000))*(x1590)*(x1596)))+(((IkReal(-1.00000000000000))*(r11)*(x1597))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1589)*(x1596)))+(((sj11)*(x1585)))+(((cj13)*(r11)*(x1588)))+(((r12)*(x1591)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1586)))+(((IkReal(-1.00000000000000))*(cj14)*(x1587)*(x1595)))+(((r00)*(sj9)*(x1594))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj11)*(x1598)))+(((x1588)*(x1589)))+(((r11)*(sj9)*(x1592)))+(((r02)*(x1591)))+(((IkReal(-1.00000000000000))*(r00)*(x1594)*(x1595)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x1587)*(x1597))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.364420000000000))+(((IkReal(-0.0100000000000000))*(cj14)*(r20)))+(((IkReal(0.0100000000000000))*(r21)*(sj14)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.374290000000000))*(r20)*(sj14))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1600=((IkReal(14.4927536231884))*(sj9));
IkReal x1601=((IkReal(0.144927536231884))*(cj9));
IkReal x1602=((r01)*(sj14));
IkReal x1603=((IkReal(5.42449275362319))*(sj9));
IkReal x1604=((cj14)*(r11));
IkReal x1605=((r00)*(sj14));
IkReal x1606=((cj14)*(r00));
IkReal x1607=((IkReal(5.42449275362319))*(cj9));
IkReal x1608=((cj14)*(r01));
IkReal x1609=((cj14)*(r10));
IkReal x1610=((r10)*(sj14));
IkReal x1611=((IkReal(0.144927536231884))*(sj9));
IkReal x1612=((IkReal(14.4927536231884))*(cj9));
IkReal x1613=((r11)*(sj14));
if( IKabs(((((py)*(x1612)))+(((IkReal(-1.00000000000000))*(x1601)*(x1609)))+(((x1601)*(x1613)))+(((IkReal(-1.00000000000000))*(px)*(x1600)))+(((IkReal(-1.00000000000000))*(x1602)*(x1611)))+(((x1607)*(x1610)))+(((IkReal(-1.00000000000000))*(x1603)*(x1608)))+(((IkReal(-1.00000000000000))*(x1603)*(x1605)))+(((x1606)*(x1611)))+(((x1604)*(x1607))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))+(((py)*(x1600)))+(((IkReal(-1.00000000000000))*(x1601)*(x1606)))+(((x1601)*(x1602)))+(((x1607)*(x1608)))+(((px)*(x1612)))+(((x1603)*(x1604)))+(((IkReal(-1.00000000000000))*(x1609)*(x1611)))+(((x1605)*(x1607)))+(((x1611)*(x1613)))+(((x1603)*(x1610))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((py)*(x1612)))+(((IkReal(-1.00000000000000))*(x1601)*(x1609)))+(((x1601)*(x1613)))+(((IkReal(-1.00000000000000))*(px)*(x1600)))+(((IkReal(-1.00000000000000))*(x1602)*(x1611)))+(((x1607)*(x1610)))+(((IkReal(-1.00000000000000))*(x1603)*(x1608)))+(((IkReal(-1.00000000000000))*(x1603)*(x1605)))+(((x1606)*(x1611)))+(((x1604)*(x1607)))))+IKsqr(((IkReal(-1.00000000000000))+(((py)*(x1600)))+(((IkReal(-1.00000000000000))*(x1601)*(x1606)))+(((x1601)*(x1602)))+(((x1607)*(x1608)))+(((px)*(x1612)))+(((x1603)*(x1604)))+(((IkReal(-1.00000000000000))*(x1609)*(x1611)))+(((x1605)*(x1607)))+(((x1611)*(x1613)))+(((x1603)*(x1610)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((py)*(x1612)))+(((IkReal(-1.00000000000000))*(x1601)*(x1609)))+(((x1601)*(x1613)))+(((IkReal(-1.00000000000000))*(px)*(x1600)))+(((IkReal(-1.00000000000000))*(x1602)*(x1611)))+(((x1607)*(x1610)))+(((IkReal(-1.00000000000000))*(x1603)*(x1608)))+(((IkReal(-1.00000000000000))*(x1603)*(x1605)))+(((x1606)*(x1611)))+(((x1604)*(x1607)))), ((IkReal(-1.00000000000000))+(((py)*(x1600)))+(((IkReal(-1.00000000000000))*(x1601)*(x1606)))+(((x1601)*(x1602)))+(((x1607)*(x1608)))+(((px)*(x1612)))+(((x1603)*(x1604)))+(((IkReal(-1.00000000000000))*(x1609)*(x1611)))+(((x1605)*(x1607)))+(((x1611)*(x1613)))+(((x1603)*(x1610)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x1614=((IkReal(0.0100000000000000))*(cj14));
IkReal x1615=((r10)*(sj9));
IkReal x1616=((cj9)*(r00));
IkReal x1617=((IkReal(0.0100000000000000))*(sj14));
IkReal x1618=((r00)*(sj9));
IkReal x1619=((IkReal(0.374290000000000))*(sj14));
IkReal x1620=((r01)*(sj9));
IkReal x1621=((IkReal(1.00000000000000))*(py));
IkReal x1622=((cj9)*(r10));
IkReal x1623=((IkReal(0.374290000000000))*(cj14));
IkReal x1624=((r11)*(sj9));
IkReal x1625=((cj9)*(x1623));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1619)*(x1622)))+(((x1620)*(x1623)))+(((IkReal(-1.00000000000000))*(r11)*(x1625)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1617)))+(((x1617)*(x1620)))+(((x1614)*(x1622)))+(((IkReal(0.0690000000000000))*(IKsin(j11))))+(((IkReal(-1.00000000000000))*(x1614)*(x1618)))+(((px)*(sj9)))+(((x1618)*(x1619)))+(((IkReal(-1.00000000000000))*(cj9)*(x1621))));
evalcond[1]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x1621)))+(((IkReal(-1.00000000000000))*(x1616)*(x1619)))+(((IkReal(-1.00000000000000))*(x1617)*(x1624)))+(((IkReal(-1.00000000000000))*(r01)*(x1625)))+(((x1614)*(x1615)))+(((x1614)*(x1616)))+(((IkReal(-1.00000000000000))*(x1623)*(x1624)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1617)))+(((IkReal(0.0690000000000000))*(IKcos(j11))))+(((IkReal(-1.00000000000000))*(x1615)*(x1619))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst77;
IkReal x1626=((r22)*(sj14));
IkReal x1627=((IkReal(1.00000000000000))*(cj9));
IkReal x1628=((cj14)*(sj9));
IkReal x1629=((r21)*(sj14));
gconst77=IKsign(((((r01)*(sj9)*(x1626)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1627)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x1626)*(x1627)))+(((cj9)*(r12)*(x1629)))+(((r02)*(r20)*(x1628)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1628)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1629)))));
IkReal x1630=((r22)*(sj14));
IkReal x1631=((IkReal(1.00000000000000))*(cj9));
IkReal x1632=((cj14)*(sj9));
IkReal x1633=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r22)*(x1632)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1631)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1633)))+(((r01)*(sj9)*(x1630)))+(((IkReal(-1.00000000000000))*(r11)*(x1630)*(x1631)))+(((cj9)*(r12)*(x1633)))+(((r02)*(r20)*(x1632))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst78;
IkReal x1634=((cj14)*(r20));
IkReal x1635=((r12)*(sj9));
IkReal x1636=((r22)*(sj14));
IkReal x1637=((cj9)*(r02));
IkReal x1638=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x1639=((IkReal(1.00000000000000))*(r21)*(sj14));
gconst78=IKsign(((((IkReal(-1.00000000000000))*(x1635)*(x1639)))+(((r11)*(sj9)*(x1636)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1638)))+(((IkReal(-1.00000000000000))*(x1637)*(x1639)))+(((cj9)*(r01)*(x1636)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1638)))+(((x1634)*(x1635)))+(((x1634)*(x1637)))));
IkReal x1640=((cj14)*(r20));
IkReal x1641=((r12)*(sj9));
IkReal x1642=((r22)*(sj14));
IkReal x1643=((cj9)*(r02));
IkReal x1644=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x1645=((IkReal(1.00000000000000))*(r21)*(sj14));
dummyeval[0]=((((x1640)*(x1643)))+(((x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(x1641)*(x1645)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1644)))+(((r11)*(sj9)*(x1642)))+(((IkReal(-1.00000000000000))*(x1643)*(x1645)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1644)))+(((cj9)*(r01)*(x1642))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1646=((IkReal(0.0100000000000000))*(cj14));
IkReal x1647=((r10)*(sj9));
IkReal x1648=((cj9)*(r00));
IkReal x1649=((IkReal(0.0100000000000000))*(sj14));
IkReal x1650=((cj9)*(r11));
IkReal x1651=((r00)*(sj9));
IkReal x1652=((IkReal(0.374290000000000))*(sj14));
IkReal x1653=((r01)*(sj9));
IkReal x1654=((IkReal(0.374290000000000))*(cj14));
IkReal x1655=((IkReal(1.00000000000000))*(py));
IkReal x1656=((cj9)*(r10));
IkReal x1657=((r11)*(sj9));
IkReal x1658=((cj9)*(x1654));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.364420000000000))+(((r21)*(x1649)))+(((r20)*(x1652)))+(((IkReal(-1.00000000000000))*(r20)*(x1646)))+(pz)+(((r21)*(x1654))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x1656)))+(((cj14)*(x1653)))+(((IkReal(-1.00000000000000))*(cj14)*(x1650)))+(((sj14)*(x1651))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1652)*(x1656)))+(((IkReal(-1.00000000000000))*(cj9)*(x1655)))+(((IkReal(-1.00000000000000))*(x1646)*(x1651)))+(((IkReal(-1.00000000000000))*(x1650)*(x1654)))+(((x1646)*(x1656)))+(((x1649)*(x1653)))+(((IkReal(-1.00000000000000))*(x1649)*(x1650)))+(((px)*(sj9)))+(((x1651)*(x1652)))+(((x1653)*(x1654))));
evalcond[4]=((IkReal(0.138000000000000))+(((IkReal(-1.00000000000000))*(r01)*(x1658)))+(((IkReal(-1.00000000000000))*(x1654)*(x1657)))+(((IkReal(-1.00000000000000))*(x1647)*(x1652)))+(((x1646)*(x1648)))+(((x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1649)))+(((IkReal(-1.00000000000000))*(x1649)*(x1657)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x1655)))+(((IkReal(-1.00000000000000))*(x1648)*(x1652))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1659=((IkReal(1.00000000000000))*(cj14));
IkReal x1660=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1660)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1660)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1659)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1659))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(x1660)))+(((IkReal(-1.00000000000000))*(r21)*(x1659))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1660)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1660)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1659)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1659)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x1660)))+(((IkReal(-1.00000000000000))*(r21)*(x1659)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1660)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1660)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1659)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1659)))), ((((IkReal(-1.00000000000000))*(r20)*(x1660)))+(((IkReal(-1.00000000000000))*(r21)*(x1659)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x1661=((IkReal(1.00000000000000))*(cj14));
IkReal x1662=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(IKcos(j12)));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1662)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1662)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1661)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1661))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst83;
gconst83=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst84;
IkReal x1663=(cj14)*(cj14);
IkReal x1664=(sj14)*(sj14);
IkReal x1665=((cj9)*(r01));
IkReal x1666=((r11)*(sj9));
IkReal x1667=((IkReal(1.00000000000000))*(sj9));
IkReal x1668=((cj9)*(r00));
IkReal x1669=((cj14)*(r20)*(sj14));
IkReal x1670=((r20)*(x1663));
IkReal x1671=((cj14)*(r21)*(sj14));
IkReal x1672=((IkReal(1.00000000000000))*(r21)*(x1664));
gconst84=IKsign(((((IkReal(-1.00000000000000))*(cj9)*(r02)*(r22)))+(((r10)*(sj9)*(x1671)))+(((x1668)*(x1671)))+(((IkReal(-1.00000000000000))*(x1666)*(x1672)))+(((IkReal(-1.00000000000000))*(x1665)*(x1672)))+(((IkReal(-1.00000000000000))*(r10)*(x1667)*(x1670)))+(((x1666)*(x1669)))+(((x1665)*(x1669)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x1667)))+(((IkReal(-1.00000000000000))*(x1668)*(x1670)))));
IkReal x1673=(cj14)*(cj14);
IkReal x1674=(sj14)*(sj14);
IkReal x1675=((cj9)*(r01));
IkReal x1676=((r11)*(sj9));
IkReal x1677=((IkReal(1.00000000000000))*(sj9));
IkReal x1678=((cj9)*(r00));
IkReal x1679=((cj14)*(r20)*(sj14));
IkReal x1680=((r20)*(x1673));
IkReal x1681=((cj14)*(r21)*(sj14));
IkReal x1682=((IkReal(1.00000000000000))*(r21)*(x1674));
dummyeval[0]=((((x1676)*(x1679)))+(((x1675)*(x1679)))+(((IkReal(-1.00000000000000))*(x1675)*(x1682)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(r22)))+(((IkReal(-1.00000000000000))*(x1676)*(x1682)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x1677)))+(((IkReal(-1.00000000000000))*(x1678)*(x1680)))+(((r10)*(sj9)*(x1681)))+(((IkReal(-1.00000000000000))*(r10)*(x1677)*(x1680)))+(((x1678)*(x1681))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((cj12)*(gconst84)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst84)*(((((IkReal(-1.00000000000000))*(cj12)*(cj14)*(r20)))+(((cj12)*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((cj12)*(gconst84)*(r22)), ((gconst84)*(((((IkReal(-1.00000000000000))*(cj12)*(cj14)*(r20)))+(((cj12)*(r21)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1683=IKsin(j13);
IkReal x1684=IKcos(j13);
IkReal x1685=((r11)*(sj14));
IkReal x1686=((IkReal(1.00000000000000))*(r02));
IkReal x1687=((r01)*(sj14));
IkReal x1688=((cj14)*(r00));
IkReal x1689=((IkReal(1.00000000000000))*(r12));
IkReal x1690=((r21)*(sj14));
IkReal x1691=((cj14)*(r20));
IkReal x1692=((cj9)*(x1683));
IkReal x1693=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1694=((sj9)*(x1683));
IkReal x1695=((sj9)*(x1684));
IkReal x1696=((cj9)*(x1684));
IkReal x1697=((IkReal(1.00000000000000))*(x1683));
evalcond[0]=((((x1683)*(x1691)))+(((r22)*(x1684)))+(((IkReal(-1.00000000000000))*(x1690)*(x1697))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1684)*(x1690)))+(sj12)+(((IkReal(-1.00000000000000))*(r22)*(x1697)))+(((x1684)*(x1691))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1692)*(x1693)))+(((r02)*(x1695)))+(((IkReal(-1.00000000000000))*(x1687)*(x1694)))+(((x1685)*(x1692)))+(((x1688)*(x1694)))+(((IkReal(-1.00000000000000))*(x1689)*(x1696))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1686)*(x1694)))+(((r12)*(x1692)))+(((IkReal(-1.00000000000000))*(x1687)*(x1695)))+(((x1685)*(x1696)))+(((x1688)*(x1695)))+(((IkReal(-1.00000000000000))*(x1693)*(x1696))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1686)*(x1696)))+(((IkReal(-1.00000000000000))*(x1688)*(x1692)))+(((x1685)*(x1694)))+(((x1687)*(x1692)))+(((IkReal(-1.00000000000000))*(x1689)*(x1695)))+(((IkReal(-1.00000000000000))*(x1693)*(x1694))));
evalcond[5]=((((r12)*(x1694)))+(cj12)+(((r02)*(x1692)))+(((IkReal(-1.00000000000000))*(x1688)*(x1696)))+(((x1685)*(x1695)))+(((x1687)*(x1696)))+(((IkReal(-1.00000000000000))*(x1693)*(x1695))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst83)*(r22)*(sj12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst83)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst83)*(r22)*(sj12)), ((gconst83)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1698=IKsin(j13);
IkReal x1699=IKcos(j13);
IkReal x1700=((r11)*(sj14));
IkReal x1701=((IkReal(1.00000000000000))*(r02));
IkReal x1702=((r01)*(sj14));
IkReal x1703=((cj14)*(r00));
IkReal x1704=((IkReal(1.00000000000000))*(r12));
IkReal x1705=((r21)*(sj14));
IkReal x1706=((cj14)*(r20));
IkReal x1707=((cj9)*(x1698));
IkReal x1708=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1709=((sj9)*(x1698));
IkReal x1710=((sj9)*(x1699));
IkReal x1711=((cj9)*(x1699));
IkReal x1712=((IkReal(1.00000000000000))*(x1698));
evalcond[0]=((((r22)*(x1699)))+(((IkReal(-1.00000000000000))*(x1705)*(x1712)))+(((x1698)*(x1706))));
evalcond[1]=((sj12)+(((IkReal(-1.00000000000000))*(r22)*(x1712)))+(((x1699)*(x1706)))+(((IkReal(-1.00000000000000))*(x1699)*(x1705))));
evalcond[2]=((IkReal(1.00000000000000))+(((r02)*(x1710)))+(((IkReal(-1.00000000000000))*(x1707)*(x1708)))+(((x1703)*(x1709)))+(((x1700)*(x1707)))+(((IkReal(-1.00000000000000))*(x1702)*(x1709)))+(((IkReal(-1.00000000000000))*(x1704)*(x1711))));
evalcond[3]=((((r12)*(x1707)))+(((x1703)*(x1710)))+(((x1700)*(x1711)))+(((IkReal(-1.00000000000000))*(x1708)*(x1711)))+(((IkReal(-1.00000000000000))*(x1702)*(x1710)))+(((IkReal(-1.00000000000000))*(x1701)*(x1709))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1701)*(x1711)))+(((IkReal(-1.00000000000000))*(x1708)*(x1709)))+(((x1700)*(x1709)))+(((IkReal(-1.00000000000000))*(x1704)*(x1710)))+(((x1702)*(x1707)))+(((IkReal(-1.00000000000000))*(x1703)*(x1707))));
evalcond[5]=((((r12)*(x1709)))+(((r02)*(x1707)))+(((x1700)*(x1710)))+(((IkReal(-1.00000000000000))*(x1708)*(x1710)))+(cj12)+(((x1702)*(x1711)))+(((IkReal(-1.00000000000000))*(x1703)*(x1711))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1713=((IkReal(0.0100000000000000))*(cj14));
IkReal x1714=((r10)*(sj9));
IkReal x1715=((cj9)*(r00));
IkReal x1716=((IkReal(0.0100000000000000))*(sj14));
IkReal x1717=((cj9)*(r11));
IkReal x1718=((r00)*(sj9));
IkReal x1719=((IkReal(0.374290000000000))*(sj14));
IkReal x1720=((r01)*(sj9));
IkReal x1721=((IkReal(0.374290000000000))*(cj14));
IkReal x1722=((IkReal(1.00000000000000))*(py));
IkReal x1723=((cj9)*(r10));
IkReal x1724=((r11)*(sj9));
IkReal x1725=((cj9)*(x1721));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.364420000000000))+(((r21)*(x1721)))+(((r20)*(x1719)))+(((IkReal(-1.00000000000000))*(r20)*(x1713)))+(pz)+(((r21)*(x1716))));
evalcond[2]=((((cj14)*(x1720)))+(((sj14)*(x1718)))+(((IkReal(-1.00000000000000))*(sj14)*(x1723)))+(((IkReal(-1.00000000000000))*(cj14)*(x1717))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1713)*(x1718)))+(((IkReal(-1.00000000000000))*(x1716)*(x1717)))+(((x1720)*(x1721)))+(((IkReal(-1.00000000000000))*(x1717)*(x1721)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x1722)))+(((x1713)*(x1723)))+(((IkReal(-1.00000000000000))*(x1719)*(x1723)))+(((x1716)*(x1720)))+(((x1718)*(x1719))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1714)*(x1719)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1716)))+(((IkReal(-1.00000000000000))*(sj9)*(x1722)))+(((x1713)*(x1714)))+(((x1713)*(x1715)))+(((IkReal(-1.00000000000000))*(r01)*(x1725)))+(((IkReal(-1.00000000000000))*(x1715)*(x1719)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x1716)*(x1724)))+(((IkReal(-1.00000000000000))*(x1721)*(x1724))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x1726=((IkReal(1.00000000000000))*(cj14));
IkReal x1727=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(IKcos(j12)));
evalcond[1]=((IKsin(j12))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1726)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1727)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1727)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x1726))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst87;
gconst87=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst88;
IkReal x1728=((cj14)*(cj9));
IkReal x1729=((cj14)*(sj9));
IkReal x1730=((r21)*(sj14));
IkReal x1731=((IkReal(1.00000000000000))*(r22));
gconst88=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((r00)*(r22)*(x1729)))+(((r12)*(r20)*(x1728)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x1731)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1729)))+(((IkReal(-1.00000000000000))*(r10)*(x1728)*(x1731)))+(((r02)*(sj9)*(x1730)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1730)))));
IkReal x1732=((cj14)*(cj9));
IkReal x1733=((cj14)*(sj9));
IkReal x1734=((r21)*(sj14));
IkReal x1735=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((r00)*(r22)*(x1733)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r12)*(r20)*(x1732)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x1735)))+(((IkReal(-1.00000000000000))*(r10)*(x1732)*(x1735)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1733)))+(((r02)*(sj9)*(x1734)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1734))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst88)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst88)*(((((IkReal(-1.00000000000000))*(cj14)*(r20)))+(((r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst88)*(r22)), ((gconst88)*(((((IkReal(-1.00000000000000))*(cj14)*(r20)))+(((r21)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1736=IKsin(j13);
IkReal x1737=IKcos(j13);
IkReal x1738=((r11)*(sj14));
IkReal x1739=((IkReal(1.00000000000000))*(r02));
IkReal x1740=((r01)*(sj14));
IkReal x1741=((cj14)*(r00));
IkReal x1742=((IkReal(1.00000000000000))*(r12));
IkReal x1743=((r21)*(sj14));
IkReal x1744=((cj14)*(r20));
IkReal x1745=((cj9)*(x1736));
IkReal x1746=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1747=((sj9)*(x1736));
IkReal x1748=((sj9)*(x1737));
IkReal x1749=((cj9)*(x1737));
IkReal x1750=((IkReal(1.00000000000000))*(x1736));
evalcond[0]=((((x1736)*(x1744)))+(((r22)*(x1737)))+(((IkReal(-1.00000000000000))*(x1743)*(x1750))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1750)))+(sj12)+(((IkReal(-1.00000000000000))*(x1737)*(x1743)))+(((x1737)*(x1744))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r02)*(x1748)))+(((IkReal(-1.00000000000000))*(x1745)*(x1746)))+(((IkReal(-1.00000000000000))*(x1740)*(x1747)))+(((IkReal(-1.00000000000000))*(x1742)*(x1749)))+(((x1738)*(x1745)))+(((x1741)*(x1747))));
evalcond[3]=((((r12)*(x1745)))+(((IkReal(-1.00000000000000))*(x1739)*(x1747)))+(((IkReal(-1.00000000000000))*(x1740)*(x1748)))+(((IkReal(-1.00000000000000))*(x1746)*(x1749)))+(((x1738)*(x1749)))+(((x1741)*(x1748))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1739)*(x1749)))+(((IkReal(-1.00000000000000))*(x1746)*(x1747)))+(((IkReal(-1.00000000000000))*(x1741)*(x1745)))+(((x1740)*(x1745)))+(((IkReal(-1.00000000000000))*(x1742)*(x1748)))+(((x1738)*(x1747))));
evalcond[5]=((((r12)*(x1747)))+(((r02)*(x1745)))+(((IkReal(-1.00000000000000))*(x1746)*(x1748)))+(((IkReal(-1.00000000000000))*(x1741)*(x1749)))+(((IkReal(-1.00000000000000))*(cj12)))+(((x1740)*(x1749)))+(((x1738)*(x1748))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst87)*(r22)*(sj12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst87)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst87)*(r22)*(sj12)), ((gconst87)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1751=IKsin(j13);
IkReal x1752=IKcos(j13);
IkReal x1753=((r11)*(sj14));
IkReal x1754=((IkReal(1.00000000000000))*(r02));
IkReal x1755=((r01)*(sj14));
IkReal x1756=((cj14)*(r00));
IkReal x1757=((IkReal(1.00000000000000))*(r12));
IkReal x1758=((r21)*(sj14));
IkReal x1759=((cj14)*(r20));
IkReal x1760=((cj9)*(x1751));
IkReal x1761=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1762=((sj9)*(x1751));
IkReal x1763=((sj9)*(x1752));
IkReal x1764=((cj9)*(x1752));
IkReal x1765=((IkReal(1.00000000000000))*(x1751));
evalcond[0]=((((r22)*(x1752)))+(((IkReal(-1.00000000000000))*(x1758)*(x1765)))+(((x1751)*(x1759))));
evalcond[1]=((((x1752)*(x1759)))+(((IkReal(-1.00000000000000))*(x1752)*(x1758)))+(sj12)+(((IkReal(-1.00000000000000))*(r22)*(x1765))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x1756)*(x1762)))+(((IkReal(-1.00000000000000))*(x1755)*(x1762)))+(((IkReal(-1.00000000000000))*(x1760)*(x1761)))+(((x1753)*(x1760)))+(((IkReal(-1.00000000000000))*(x1757)*(x1764)))+(((r02)*(x1763))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1754)*(x1762)))+(((x1756)*(x1763)))+(((IkReal(-1.00000000000000))*(x1761)*(x1764)))+(((r12)*(x1760)))+(((IkReal(-1.00000000000000))*(x1755)*(x1763)))+(((x1753)*(x1764))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1754)*(x1764)))+(((x1755)*(x1760)))+(((IkReal(-1.00000000000000))*(x1761)*(x1762)))+(((x1753)*(x1762)))+(((IkReal(-1.00000000000000))*(x1757)*(x1763)))+(((IkReal(-1.00000000000000))*(x1756)*(x1760))));
evalcond[5]=((((x1755)*(x1764)))+(((IkReal(-1.00000000000000))*(x1761)*(x1763)))+(((r12)*(x1762)))+(((x1753)*(x1763)))+(((IkReal(-1.00000000000000))*(x1756)*(x1764)))+(((r02)*(x1760)))+(((IkReal(-1.00000000000000))*(cj12))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1766=((IkReal(1.00000000000000))*(cj14));
IkReal x1767=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1767)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1766))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x1766)))+(((IkReal(-1.00000000000000))*(r20)*(x1767))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1767)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1766)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x1766)))+(((IkReal(-1.00000000000000))*(r20)*(x1767)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x1767)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1766)))))), ((((IkReal(-1.00000000000000))*(r21)*(x1766)))+(((IkReal(-1.00000000000000))*(r20)*(x1767)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x1768=IKsin(j12);
IkReal x1769=((r00)*(sj14));
IkReal x1770=((cj14)*(sj9));
IkReal x1771=((IkReal(1.00000000000000))*(r11));
IkReal x1772=((IkReal(1.00000000000000))*(cj9));
IkReal x1773=((r10)*(sj14));
IkReal x1774=((IkReal(1.00000000000000))*(x1768));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(IKcos(j12)));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((IkReal(-1.00000000000000))*(sj11)*(x1774)))+(((r01)*(x1770)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1771)))+(((sj9)*(x1769))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x1773)))+(((IkReal(-1.00000000000000))*(cj11)*(x1774)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1772)))+(((IkReal(-1.00000000000000))*(x1769)*(x1772))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst79;
gconst79=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x1775=((r22)*(sj14));
IkReal x1776=((IkReal(1.00000000000000))*(cj9));
IkReal x1777=((cj14)*(sj9));
IkReal x1778=((r21)*(sj14));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x1775)*(x1776)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1777)))+(((r02)*(r20)*(x1777)))+(((cj14)*(cj9)*(r10)*(r22)))+(((cj9)*(r12)*(x1778)))+(((r01)*(sj9)*(x1775)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1776)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1778)))));
IkReal x1779=((r22)*(sj14));
IkReal x1780=((IkReal(1.00000000000000))*(cj9));
IkReal x1781=((cj14)*(sj9));
IkReal x1782=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1782)))+(((IkReal(-1.00000000000000))*(r11)*(x1779)*(x1780)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x1779)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1781)))+(((r02)*(r20)*(x1781)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1780)))+(((cj9)*(r12)*(x1782))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((cj11)*(gconst80)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((cj11)*(gconst80)*(r22)), ((gconst80)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1783=IKsin(j13);
IkReal x1784=IKcos(j13);
IkReal x1785=((r11)*(sj14));
IkReal x1786=((IkReal(1.00000000000000))*(r02));
IkReal x1787=((r01)*(sj14));
IkReal x1788=((cj14)*(r00));
IkReal x1789=((IkReal(1.00000000000000))*(r12));
IkReal x1790=((r21)*(sj14));
IkReal x1791=((cj14)*(r20));
IkReal x1792=((cj9)*(x1783));
IkReal x1793=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1794=((sj9)*(x1783));
IkReal x1795=((sj9)*(x1784));
IkReal x1796=((cj9)*(x1784));
IkReal x1797=((IkReal(1.00000000000000))*(x1783));
evalcond[0]=((((x1783)*(x1791)))+(((IkReal(-1.00000000000000))*(x1790)*(x1797)))+(((r22)*(x1784))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1797)))+(sj12)+(((x1784)*(x1791)))+(((IkReal(-1.00000000000000))*(x1784)*(x1790))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1792)*(x1793)))+(((IkReal(-1.00000000000000))*(x1789)*(x1796)))+(cj11)+(((IkReal(-1.00000000000000))*(x1787)*(x1794)))+(((r02)*(x1795)))+(((x1785)*(x1792)))+(((x1788)*(x1794))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1793)*(x1796)))+(((IkReal(-1.00000000000000))*(x1787)*(x1795)))+(((r12)*(x1792)))+(((cj12)*(sj11)))+(((IkReal(-1.00000000000000))*(x1786)*(x1794)))+(((x1785)*(x1796)))+(((x1788)*(x1795))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1793)*(x1794)))+(((IkReal(-1.00000000000000))*(x1789)*(x1795)))+(((x1787)*(x1792)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x1788)*(x1792)))+(((IkReal(-1.00000000000000))*(x1786)*(x1796)))+(((x1785)*(x1794))));
evalcond[5]=((((cj11)*(cj12)))+(((IkReal(-1.00000000000000))*(x1793)*(x1795)))+(((x1787)*(x1796)))+(((r02)*(x1792)))+(((IkReal(-1.00000000000000))*(x1788)*(x1796)))+(((r12)*(x1794)))+(((x1785)*(x1795))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst79)*(r22)*(sj12))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst79)*(r22)*(sj12)), ((gconst79)*(((((r21)*(sj12)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj12)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1798=IKsin(j13);
IkReal x1799=IKcos(j13);
IkReal x1800=((r11)*(sj14));
IkReal x1801=((IkReal(1.00000000000000))*(r02));
IkReal x1802=((r01)*(sj14));
IkReal x1803=((cj14)*(r00));
IkReal x1804=((IkReal(1.00000000000000))*(r12));
IkReal x1805=((r21)*(sj14));
IkReal x1806=((cj14)*(r20));
IkReal x1807=((cj9)*(x1798));
IkReal x1808=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1809=((sj9)*(x1798));
IkReal x1810=((sj9)*(x1799));
IkReal x1811=((cj9)*(x1799));
IkReal x1812=((IkReal(1.00000000000000))*(x1798));
evalcond[0]=((((x1798)*(x1806)))+(((IkReal(-1.00000000000000))*(x1805)*(x1812)))+(((r22)*(x1799))));
evalcond[1]=((((x1799)*(x1806)))+(sj12)+(((IkReal(-1.00000000000000))*(x1799)*(x1805)))+(((IkReal(-1.00000000000000))*(r22)*(x1812))));
evalcond[2]=((((r02)*(x1810)))+(((IkReal(-1.00000000000000))*(x1804)*(x1811)))+(((x1800)*(x1807)))+(((x1803)*(x1809)))+(cj11)+(((IkReal(-1.00000000000000))*(x1802)*(x1809)))+(((IkReal(-1.00000000000000))*(x1807)*(x1808))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1808)*(x1811)))+(((IkReal(-1.00000000000000))*(x1801)*(x1809)))+(((x1803)*(x1810)))+(((r12)*(x1807)))+(((IkReal(-1.00000000000000))*(x1802)*(x1810)))+(((cj12)*(sj11)))+(((x1800)*(x1811))));
evalcond[4]=((((x1802)*(x1807)))+(((IkReal(-1.00000000000000))*(x1804)*(x1810)))+(((x1800)*(x1809)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x1803)*(x1807)))+(((IkReal(-1.00000000000000))*(x1801)*(x1811))));
evalcond[5]=((((x1802)*(x1811)))+(((cj11)*(cj12)))+(((IkReal(-1.00000000000000))*(x1808)*(x1810)))+(((r02)*(x1807)))+(((r12)*(x1809)))+(((IkReal(-1.00000000000000))*(x1803)*(x1811)))+(((x1800)*(x1810))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst78)*(r22)*(sj11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst78)*(((((r21)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst78)*(r22)*(sj11)), ((gconst78)*(((((r21)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj11)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1813=IKsin(j13);
IkReal x1814=IKcos(j13);
IkReal x1815=((r11)*(sj14));
IkReal x1816=((r01)*(sj14));
IkReal x1817=((cj14)*(r00));
IkReal x1818=((cj9)*(x1813));
IkReal x1819=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1820=((sj9)*(x1813));
IkReal x1821=((sj9)*(x1814));
IkReal x1822=((IkReal(1.00000000000000))*(cj9)*(x1814));
evalcond[0]=((((r22)*(x1814)))+(((cj14)*(r20)*(x1813)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1813))));
evalcond[1]=((cj11)+(((IkReal(-1.00000000000000))*(r12)*(x1822)))+(((x1815)*(x1818)))+(((r02)*(x1821)))+(((x1817)*(x1820)))+(((IkReal(-1.00000000000000))*(x1818)*(x1819)))+(((IkReal(-1.00000000000000))*(x1816)*(x1820))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1821)))+(((IkReal(-1.00000000000000))*(x1819)*(x1820)))+(((x1816)*(x1818)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(r02)*(x1822)))+(((IkReal(-1.00000000000000))*(x1817)*(x1818)))+(((x1815)*(x1820))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1823=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x1823)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x1823))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x1823)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x1823)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x1823)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x1823)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1824=IKsin(j12);
IkReal x1825=IKcos(j12);
IkReal x1826=((IkReal(1.00000000000000))*(sj13));
IkReal x1827=((cj13)*(r10));
IkReal x1828=((cj9)*(sj14));
IkReal x1829=((cj13)*(r01));
IkReal x1830=((IkReal(1.00000000000000))*(r10));
IkReal x1831=((r12)*(sj13));
IkReal x1832=((cj13)*(sj14));
IkReal x1833=((cj14)*(r01));
IkReal x1834=((cj13)*(cj14));
IkReal x1835=((IkReal(1.00000000000000))*(cj9));
IkReal x1836=((sj14)*(sj9));
IkReal x1837=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x1838=((IkReal(1.00000000000000))*(x1824));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x1825));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1826)))+(x1824)+(((r20)*(x1834)))+(((IkReal(-1.00000000000000))*(r21)*(x1832))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1828)*(x1830)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1835)))+(((IkReal(-1.00000000000000))*(sj11)*(x1838)))+(((sj9)*(x1833)))+(((r00)*(x1836))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj11)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)))+(((IkReal(-1.00000000000000))*(r00)*(x1828)))+(((IkReal(-1.00000000000000))*(r11)*(x1837)))+(((IkReal(-1.00000000000000))*(x1830)*(x1836))));
evalcond[4]=((((r00)*(sj9)*(x1834)))+(((sj11)*(x1825)))+(((cj9)*(x1831)))+(((IkReal(-1.00000000000000))*(x1829)*(x1836)))+(((cj13)*(r11)*(x1828)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1826)))+(((IkReal(-1.00000000000000))*(cj14)*(x1827)*(x1835))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((x1828)*(x1829)))+(((IkReal(-1.00000000000000))*(x1827)*(x1837)))+(((r11)*(sj9)*(x1832)))+(((IkReal(-1.00000000000000))*(r00)*(x1834)*(x1835)))+(((cj11)*(x1825)))+(((sj9)*(x1831))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((cj11)*(gconst77)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst77)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((cj11)*(gconst77)*(r22)), ((gconst77)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(cj14)*(r20)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1839=IKsin(j13);
IkReal x1840=IKcos(j13);
IkReal x1841=((r11)*(sj14));
IkReal x1842=((r01)*(sj14));
IkReal x1843=((cj14)*(r00));
IkReal x1844=((cj9)*(x1839));
IkReal x1845=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1846=((sj9)*(x1839));
IkReal x1847=((sj9)*(x1840));
IkReal x1848=((IkReal(1.00000000000000))*(cj9)*(x1840));
evalcond[0]=((((cj14)*(r20)*(x1839)))+(((r22)*(x1840)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x1839))));
evalcond[1]=((((r02)*(x1847)))+(cj11)+(((IkReal(-1.00000000000000))*(r12)*(x1848)))+(((x1843)*(x1846)))+(((IkReal(-1.00000000000000))*(x1842)*(x1846)))+(((IkReal(-1.00000000000000))*(x1844)*(x1845)))+(((x1841)*(x1844))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1848)))+(((IkReal(-1.00000000000000))*(r12)*(x1847)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x1845)*(x1846)))+(((x1842)*(x1844)))+(((x1841)*(x1846)))+(((IkReal(-1.00000000000000))*(x1843)*(x1844))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1849=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x1849)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x1849))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x1849)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x1849)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x1849)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x1849)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x1850=IKsin(j12);
IkReal x1851=IKcos(j12);
IkReal x1852=((IkReal(1.00000000000000))*(sj13));
IkReal x1853=((cj13)*(r10));
IkReal x1854=((cj9)*(sj14));
IkReal x1855=((cj13)*(r01));
IkReal x1856=((IkReal(1.00000000000000))*(r10));
IkReal x1857=((r12)*(sj13));
IkReal x1858=((cj13)*(sj14));
IkReal x1859=((cj14)*(r01));
IkReal x1860=((cj13)*(cj14));
IkReal x1861=((IkReal(1.00000000000000))*(cj9));
IkReal x1862=((sj14)*(sj9));
IkReal x1863=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x1864=((IkReal(1.00000000000000))*(x1850));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x1851));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1852)))+(x1850)+(((IkReal(-1.00000000000000))*(r21)*(x1858)))+(((r20)*(x1860))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x1861)))+(((sj9)*(x1859)))+(((IkReal(-1.00000000000000))*(sj11)*(x1864)))+(((IkReal(-1.00000000000000))*(x1854)*(x1856)))+(((r00)*(x1862))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1856)*(x1862)))+(((IkReal(-1.00000000000000))*(r11)*(x1863)))+(((IkReal(-1.00000000000000))*(r00)*(x1854)))+(((IkReal(-1.00000000000000))*(cj11)*(x1864)))+(((IkReal(-1.00000000000000))*(x1859)*(x1861))));
evalcond[4]=((((r00)*(sj9)*(x1860)))+(((cj13)*(r11)*(x1854)))+(((cj9)*(x1857)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1852)))+(((IkReal(-1.00000000000000))*(x1855)*(x1862)))+(((IkReal(-1.00000000000000))*(cj14)*(x1853)*(x1861)))+(((sj11)*(x1851))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1853)*(x1863)))+(((sj9)*(x1857)))+(((IkReal(-1.00000000000000))*(r00)*(x1860)*(x1861)))+(((cj9)*(r02)*(sj13)))+(((x1854)*(x1855)))+(((cj11)*(x1851)))+(((r11)*(sj9)*(x1858))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1865=((cj14)*(cj9));
IkReal x1866=((cj14)*(sj9));
IkReal x1867=((IkReal(374.290000000000))*(sj14));
IkReal x1868=((sj14)*(sj9));
IkReal x1869=((cj9)*(sj14));
if( IKabs(((((IkReal(-0.144927536231884))*(r01)*(x1868)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((IkReal(-5.42449275362319))*(r00)*(x1868)))+(((IkReal(-0.144927536231884))*(r10)*(x1865)))+(((IkReal(-5.42449275362319))*(r01)*(x1866)))+(((IkReal(5.42449275362319))*(r11)*(x1865)))+(((IkReal(0.144927536231884))*(r00)*(x1866)))+(((IkReal(5.42449275362319))*(r10)*(x1869)))+(((IkReal(0.144927536231884))*(r11)*(x1869))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0144927536231884))*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((IkReal(69.0000000000000))+(((IkReal(-374.290000000000))*(r01)*(x1865)))+(((IkReal(-10.0000000000000))*(r01)*(x1869)))+(((IkReal(-10.0000000000000))*(r11)*(x1868)))+(((IkReal(10.0000000000000))*(r00)*(x1865)))+(((IkReal(-374.290000000000))*(r11)*(x1866)))+(((IkReal(-1000.00000000000))*(cj9)*(px)))+(((IkReal(364.420000000000))*(cj10)))+(((IkReal(10.0000000000000))*(r10)*(x1866)))+(((IkReal(-1000.00000000000))*(py)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1867)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1867))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.144927536231884))*(r01)*(x1868)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((IkReal(-5.42449275362319))*(r00)*(x1868)))+(((IkReal(-0.144927536231884))*(r10)*(x1865)))+(((IkReal(-5.42449275362319))*(r01)*(x1866)))+(((IkReal(5.42449275362319))*(r11)*(x1865)))+(((IkReal(0.144927536231884))*(r00)*(x1866)))+(((IkReal(5.42449275362319))*(r10)*(x1869)))+(((IkReal(0.144927536231884))*(r11)*(x1869)))))+IKsqr(((IkReal(0.0144927536231884))*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((IkReal(69.0000000000000))+(((IkReal(-374.290000000000))*(r01)*(x1865)))+(((IkReal(-10.0000000000000))*(r01)*(x1869)))+(((IkReal(-10.0000000000000))*(r11)*(x1868)))+(((IkReal(10.0000000000000))*(r00)*(x1865)))+(((IkReal(-374.290000000000))*(r11)*(x1866)))+(((IkReal(-1000.00000000000))*(cj9)*(px)))+(((IkReal(364.420000000000))*(cj10)))+(((IkReal(10.0000000000000))*(r10)*(x1866)))+(((IkReal(-1000.00000000000))*(py)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1867)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1867)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(-0.144927536231884))*(r01)*(x1868)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((IkReal(-5.42449275362319))*(r00)*(x1868)))+(((IkReal(-0.144927536231884))*(r10)*(x1865)))+(((IkReal(-5.42449275362319))*(r01)*(x1866)))+(((IkReal(5.42449275362319))*(r11)*(x1865)))+(((IkReal(0.144927536231884))*(r00)*(x1866)))+(((IkReal(5.42449275362319))*(r10)*(x1869)))+(((IkReal(0.144927536231884))*(r11)*(x1869)))), ((IkReal(0.0144927536231884))*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((IkReal(69.0000000000000))+(((IkReal(-374.290000000000))*(r01)*(x1865)))+(((IkReal(-10.0000000000000))*(r01)*(x1869)))+(((IkReal(-10.0000000000000))*(r11)*(x1868)))+(((IkReal(10.0000000000000))*(r00)*(x1865)))+(((IkReal(-374.290000000000))*(r11)*(x1866)))+(((IkReal(-1000.00000000000))*(cj9)*(px)))+(((IkReal(364.420000000000))*(cj10)))+(((IkReal(10.0000000000000))*(r10)*(x1866)))+(((IkReal(-1000.00000000000))*(py)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x1867)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x1867)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x1870=IKcos(j11);
IkReal x1871=((IkReal(0.0100000000000000))*(cj14));
IkReal x1872=((r10)*(sj9));
IkReal x1873=((cj9)*(r00));
IkReal x1874=((IkReal(0.0100000000000000))*(sj14));
IkReal x1875=((r00)*(sj9));
IkReal x1876=((IkReal(0.374290000000000))*(sj14));
IkReal x1877=((r01)*(sj9));
IkReal x1878=((IkReal(0.374290000000000))*(cj14));
IkReal x1879=((IkReal(1.00000000000000))*(py));
IkReal x1880=((cj9)*(r10));
IkReal x1881=((r11)*(sj9));
IkReal x1882=((cj9)*(x1878));
IkReal x1883=((IkReal(0.0690000000000000))*(x1870));
evalcond[0]=((((cj10)*(x1883)))+(((r20)*(x1876)))+(pz)+(((r21)*(x1874)))+(((r21)*(x1878)))+(((IkReal(0.364420000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r20)*(x1871))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1876)*(x1880)))+(((x1874)*(x1877)))+(((x1877)*(x1878)))+(((IkReal(-1.00000000000000))*(r11)*(x1882)))+(((IkReal(0.0690000000000000))*(IKsin(j11))))+(((IkReal(-1.00000000000000))*(cj9)*(x1879)))+(((x1871)*(x1880)))+(((IkReal(-1.00000000000000))*(x1871)*(x1875)))+(((px)*(sj9)))+(((x1875)*(x1876)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1874))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x1879)))+(((IkReal(-1.00000000000000))*(x1873)*(x1876)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1874)))+(((IkReal(-1.00000000000000))*(x1872)*(x1876)))+(((x1871)*(x1873)))+(((x1871)*(x1872)))+(((IkReal(-1.00000000000000))*(x1878)*(x1881)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(sj10)*(x1883)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(r01)*(x1882)))+(((IkReal(-1.00000000000000))*(x1874)*(x1881))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1884=((cj14)*(cj9));
IkReal x1885=((cj14)*(sj9));
IkReal x1886=((r21)*(sj14));
IkReal x1887=((IkReal(1.00000000000000))*(r22));
gconst0=IKsign(((((r00)*(r22)*(x1885)))+(((r02)*(sj9)*(x1886)))+(((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1885)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1886)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x1887)))+(((r12)*(r20)*(x1884)))+(((IkReal(-1.00000000000000))*(r10)*(x1884)*(x1887)))));
IkReal x1888=((cj14)*(cj9));
IkReal x1889=((cj14)*(sj9));
IkReal x1890=((r21)*(sj14));
IkReal x1891=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((r02)*(sj9)*(x1890)))+(((r00)*(r22)*(x1889)))+(((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x1889)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x1891)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x1890)))+(((r12)*(r20)*(x1888)))+(((IkReal(-1.00000000000000))*(r10)*(x1888)*(x1891))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1892=((cj9)*(sj14));
IkReal x1893=((IkReal(1.00000000000000))*(r22));
IkReal x1894=((sj14)*(sj9));
IkReal x1895=((cj14)*(sj9));
IkReal x1896=((IkReal(1.00000000000000))*(r20));
IkReal x1897=((cj14)*(cj9));
gconst1=IKsign(((((r00)*(r22)*(x1897)))+(((r12)*(r21)*(x1894)))+(((r02)*(r21)*(x1892)))+(((IkReal(-1.00000000000000))*(r11)*(x1893)*(x1894)))+(((IkReal(-1.00000000000000))*(r01)*(x1892)*(x1893)))+(((IkReal(-1.00000000000000))*(r02)*(x1896)*(x1897)))+(((IkReal(-1.00000000000000))*(r12)*(x1895)*(x1896)))+(((r10)*(r22)*(x1895)))));
IkReal x1898=((cj9)*(sj14));
IkReal x1899=((IkReal(1.00000000000000))*(r22));
IkReal x1900=((sj14)*(sj9));
IkReal x1901=((cj14)*(sj9));
IkReal x1902=((IkReal(1.00000000000000))*(r20));
IkReal x1903=((cj14)*(cj9));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r12)*(x1901)*(x1902)))+(((IkReal(-1.00000000000000))*(r11)*(x1899)*(x1900)))+(((r00)*(r22)*(x1903)))+(((r02)*(r21)*(x1898)))+(((r10)*(r22)*(x1901)))+(((IkReal(-1.00000000000000))*(r02)*(x1902)*(x1903)))+(((r12)*(r21)*(x1900)))+(((IkReal(-1.00000000000000))*(r01)*(x1898)*(x1899))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1904=(cj10)*(cj10);
IkReal x1905=(sj10)*(sj10);
dummyeval[0]=((((cj11)*(x1904)))+(((cj11)*(x1905))));
dummyeval[1]=((x1904)+(x1905));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1906=((IkReal(0.0100000000000000))*(cj14));
IkReal x1907=((r10)*(sj9));
IkReal x1908=((cj9)*(r00));
IkReal x1909=((IkReal(0.0100000000000000))*(sj14));
IkReal x1910=((r00)*(sj9));
IkReal x1911=((IkReal(0.374290000000000))*(sj14));
IkReal x1912=((r01)*(sj9));
IkReal x1913=((IkReal(0.374290000000000))*(cj14));
IkReal x1914=((IkReal(1.00000000000000))*(py));
IkReal x1915=((cj9)*(r10));
IkReal x1916=((r11)*(sj9));
IkReal x1917=((cj9)*(x1913));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x1909)))+(((IkReal(-1.00000000000000))*(r20)*(x1906)))+(pz)+(((r21)*(x1913)))+(((IkReal(0.364420000000000))*(sj10)))+(((r20)*(x1911))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x1911)*(x1915)))+(((x1912)*(x1913)))+(((x1910)*(x1911)))+(((IkReal(-1.00000000000000))*(r11)*(x1917)))+(((IkReal(-1.00000000000000))*(cj9)*(x1914)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1909)))+(((x1909)*(x1912)))+(((x1906)*(x1915)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x1906)*(x1910))));
evalcond[3]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(r01)*(x1917)))+(((IkReal(-1.00000000000000))*(x1907)*(x1911)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1909)))+(((x1906)*(x1908)))+(((x1906)*(x1907)))+(((IkReal(-1.00000000000000))*(sj9)*(x1914)))+(((IkReal(-1.00000000000000))*(x1913)*(x1916)))+(((IkReal(-1.00000000000000))*(x1909)*(x1916)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x1908)*(x1911))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x1918=((r22)*(sj14));
IkReal x1919=((IkReal(1.00000000000000))*(cj9));
IkReal x1920=((cj14)*(sj9));
IkReal x1921=((r21)*(sj14));
gconst13=IKsign(((((r01)*(sj9)*(x1918)))+(((cj9)*(r12)*(x1921)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1919)))+(((IkReal(-1.00000000000000))*(r11)*(x1918)*(x1919)))+(((r02)*(r20)*(x1920)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1921)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1920)))));
IkReal x1922=((r22)*(sj14));
IkReal x1923=((IkReal(1.00000000000000))*(cj9));
IkReal x1924=((cj14)*(sj9));
IkReal x1925=((r21)*(sj14));
dummyeval[0]=((((cj9)*(r12)*(x1925)))+(((r02)*(r20)*(x1924)))+(((IkReal(-1.00000000000000))*(r11)*(x1922)*(x1923)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1925)))+(((r01)*(sj9)*(x1922)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1923)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1924))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
IkReal x1926=((cj9)*(sj14));
IkReal x1927=((IkReal(1.00000000000000))*(r22));
IkReal x1928=((sj14)*(sj9));
IkReal x1929=((cj14)*(sj9));
IkReal x1930=((IkReal(1.00000000000000))*(r20));
IkReal x1931=((cj14)*(cj9));
gconst14=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x1927)*(x1928)))+(((IkReal(-1.00000000000000))*(r02)*(x1930)*(x1931)))+(((r00)*(r22)*(x1931)))+(((r02)*(r21)*(x1926)))+(((r12)*(r21)*(x1928)))+(((IkReal(-1.00000000000000))*(r12)*(x1929)*(x1930)))+(((r10)*(r22)*(x1929)))+(((IkReal(-1.00000000000000))*(r01)*(x1926)*(x1927)))));
IkReal x1932=((cj9)*(sj14));
IkReal x1933=((IkReal(1.00000000000000))*(r22));
IkReal x1934=((sj14)*(sj9));
IkReal x1935=((cj14)*(sj9));
IkReal x1936=((IkReal(1.00000000000000))*(r20));
IkReal x1937=((cj14)*(cj9));
dummyeval[0]=((((r00)*(r22)*(x1937)))+(((IkReal(-1.00000000000000))*(r01)*(x1932)*(x1933)))+(((IkReal(-1.00000000000000))*(r11)*(x1933)*(x1934)))+(((r10)*(r22)*(x1935)))+(((r02)*(r21)*(x1932)))+(((r12)*(r21)*(x1934)))+(((IkReal(-1.00000000000000))*(r02)*(x1936)*(x1937)))+(((IkReal(-1.00000000000000))*(r12)*(x1935)*(x1936))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1938=((IkReal(0.0100000000000000))*(cj14));
IkReal x1939=((r10)*(sj9));
IkReal x1940=((cj14)*(r21));
IkReal x1941=((cj9)*(r00));
IkReal x1942=((IkReal(0.0100000000000000))*(sj14));
IkReal x1943=((r00)*(sj9));
IkReal x1944=((IkReal(0.374290000000000))*(sj14));
IkReal x1945=((r01)*(sj9));
IkReal x1946=((IkReal(1.00000000000000))*(py));
IkReal x1947=((cj9)*(r10));
IkReal x1948=((IkReal(0.374290000000000))*(cj14));
IkReal x1949=((r11)*(sj9));
IkReal x1950=((cj9)*(x1948));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x1940));
evalcond[2]=((((r20)*(x1944)))+(((IkReal(-1.00000000000000))*(r20)*(x1938)))+(((r21)*(x1942)))+(pz)+(((IkReal(0.374290000000000))*(x1940))));
evalcond[3]=((IkReal(0.0690000000000000))+(((x1945)*(x1948)))+(((x1943)*(x1944)))+(((x1938)*(x1947)))+(((IkReal(-1.00000000000000))*(x1944)*(x1947)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x1942)))+(((IkReal(-1.00000000000000))*(x1938)*(x1943)))+(((IkReal(-1.00000000000000))*(r11)*(x1950)))+(((x1942)*(x1945)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x1946))));
evalcond[4]=((IkReal(0.433420000000000))+(((x1938)*(x1941)))+(((IkReal(-1.00000000000000))*(x1942)*(x1949)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x1942)))+(((IkReal(-1.00000000000000))*(r01)*(x1950)))+(((IkReal(-1.00000000000000))*(sj9)*(x1946)))+(((IkReal(-1.00000000000000))*(x1941)*(x1944)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x1939)*(x1944)))+(((IkReal(-1.00000000000000))*(x1948)*(x1949)))+(((x1938)*(x1939))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x1951=((r00)*(sj14));
IkReal x1952=((cj14)*(sj9));
IkReal x1953=((IkReal(1.00000000000000))*(r11));
IkReal x1954=((IkReal(1.00000000000000))*(cj9));
IkReal x1955=((r10)*(sj14));
if( IKabs(((((sj9)*(x1951)))+(((IkReal(-1.00000000000000))*(x1954)*(x1955)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1953)))+(((r01)*(x1952))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1954)))+(((IkReal(-1.00000000000000))*(x1952)*(x1953)))+(((IkReal(-1.00000000000000))*(x1951)*(x1954)))+(((IkReal(-1.00000000000000))*(sj9)*(x1955))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj9)*(x1951)))+(((IkReal(-1.00000000000000))*(x1954)*(x1955)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1953)))+(((r01)*(x1952)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1954)))+(((IkReal(-1.00000000000000))*(x1952)*(x1953)))+(((IkReal(-1.00000000000000))*(x1951)*(x1954)))+(((IkReal(-1.00000000000000))*(sj9)*(x1955)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((sj9)*(x1951)))+(((IkReal(-1.00000000000000))*(x1954)*(x1955)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1953)))+(((r01)*(x1952)))), ((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1954)))+(((IkReal(-1.00000000000000))*(x1952)*(x1953)))+(((IkReal(-1.00000000000000))*(x1951)*(x1954)))+(((IkReal(-1.00000000000000))*(sj9)*(x1955)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x1956=((r00)*(sj14));
IkReal x1957=((cj14)*(sj9));
IkReal x1958=((IkReal(1.00000000000000))*(r11));
IkReal x1959=((IkReal(1.00000000000000))*(cj9));
IkReal x1960=((r10)*(sj14));
evalcond[0]=((((sj9)*(x1956)))+(((IkReal(-1.00000000000000))*(x1959)*(x1960)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x1958)))+(((r01)*(x1957))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1959)))+(((IkReal(-1.00000000000000))*(x1957)*(x1958)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(sj9)*(x1960)))+(((IkReal(-1.00000000000000))*(x1956)*(x1959))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x1961=((r22)*(sj14));
IkReal x1962=((IkReal(1.00000000000000))*(cj9));
IkReal x1963=((cj14)*(sj9));
IkReal x1964=((r21)*(sj14));
gconst21=IKsign(((((r01)*(sj9)*(x1961)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1963)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x1961)*(x1962)))+(((cj9)*(r12)*(x1964)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1964)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1962)))+(((r02)*(r20)*(x1963)))));
IkReal x1965=((r22)*(sj14));
IkReal x1966=((IkReal(1.00000000000000))*(cj9));
IkReal x1967=((cj14)*(sj9));
IkReal x1968=((r21)*(sj14));
dummyeval[0]=((((r01)*(sj9)*(x1965)))+(((IkReal(-1.00000000000000))*(r11)*(x1965)*(x1966)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x1967)))+(((cj14)*(cj9)*(r10)*(r22)))+(((cj9)*(r12)*(x1968)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x1968)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x1966)))+(((r02)*(r20)*(x1967))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1969=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst21)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x1969))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1969)))+(((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst21)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x1969)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1969)))+(((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1970=IKsin(j13);
IkReal x1971=IKcos(j13);
IkReal x1972=((r11)*(sj14));
IkReal x1973=((IkReal(1.00000000000000))*(r02));
IkReal x1974=((r01)*(sj14));
IkReal x1975=((cj14)*(r00));
IkReal x1976=((IkReal(1.00000000000000))*(r12));
IkReal x1977=((r21)*(sj14));
IkReal x1978=((cj14)*(r20));
IkReal x1979=((cj9)*(x1970));
IkReal x1980=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1981=((sj9)*(x1970));
IkReal x1982=((sj9)*(x1971));
IkReal x1983=((cj9)*(x1971));
IkReal x1984=((IkReal(1.00000000000000))*(x1970));
evalcond[0]=((IkReal(-1.00000000000000))+(((x1970)*(x1978)))+(((r22)*(x1971)))+(((IkReal(-1.00000000000000))*(x1977)*(x1984))));
evalcond[1]=((((x1971)*(x1978)))+(((IkReal(-1.00000000000000))*(r22)*(x1984)))+(((IkReal(-1.00000000000000))*(x1971)*(x1977))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1976)*(x1983)))+(((x1975)*(x1981)))+(((x1972)*(x1979)))+(((IkReal(-1.00000000000000))*(x1979)*(x1980)))+(((IkReal(-1.00000000000000))*(x1974)*(x1981)))+(((r02)*(x1982))));
evalcond[3]=((((x1972)*(x1983)))+(((IkReal(-1.00000000000000))*(x1980)*(x1983)))+(((x1975)*(x1982)))+(((r12)*(x1979)))+(((IkReal(-1.00000000000000))*(x1973)*(x1981)))+(cj12)+(((IkReal(-1.00000000000000))*(x1974)*(x1982))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1976)*(x1982)))+(((x1972)*(x1981)))+(((IkReal(-1.00000000000000))*(x1980)*(x1981)))+(((IkReal(-1.00000000000000))*(x1973)*(x1983)))+(((x1974)*(x1979)))+(((IkReal(-1.00000000000000))*(x1975)*(x1979))));
evalcond[5]=((((x1972)*(x1982)))+(((r02)*(x1979)))+(((IkReal(-1.00000000000000))*(x1980)*(x1982)))+(((r12)*(x1981)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1975)*(x1983)))+(((x1974)*(x1983))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst20)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst20)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst20)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1985=IKsin(j13);
IkReal x1986=IKcos(j13);
IkReal x1987=((r11)*(sj14));
IkReal x1988=((IkReal(1.00000000000000))*(r02));
IkReal x1989=((r01)*(sj14));
IkReal x1990=((cj14)*(r00));
IkReal x1991=((IkReal(1.00000000000000))*(r12));
IkReal x1992=((r21)*(sj14));
IkReal x1993=((cj14)*(r20));
IkReal x1994=((cj9)*(x1985));
IkReal x1995=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x1996=((sj9)*(x1985));
IkReal x1997=((sj9)*(x1986));
IkReal x1998=((cj9)*(x1986));
IkReal x1999=((IkReal(1.00000000000000))*(x1985));
evalcond[0]=((IkReal(-1.00000000000000))+(((r22)*(x1986)))+(((IkReal(-1.00000000000000))*(x1992)*(x1999)))+(((x1985)*(x1993))));
evalcond[1]=((((x1986)*(x1993)))+(((IkReal(-1.00000000000000))*(x1986)*(x1992)))+(((IkReal(-1.00000000000000))*(r22)*(x1999))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1989)*(x1996)))+(((r02)*(x1997)))+(((IkReal(-1.00000000000000))*(x1991)*(x1998)))+(((IkReal(-1.00000000000000))*(x1994)*(x1995)))+(((x1990)*(x1996)))+(((x1987)*(x1994))));
evalcond[3]=((((r12)*(x1994)))+(((IkReal(-1.00000000000000))*(x1989)*(x1997)))+(cj12)+(((IkReal(-1.00000000000000))*(x1995)*(x1998)))+(((x1990)*(x1997)))+(((x1987)*(x1998)))+(((IkReal(-1.00000000000000))*(x1988)*(x1996))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1995)*(x1996)))+(((x1989)*(x1994)))+(((IkReal(-1.00000000000000))*(x1991)*(x1997)))+(((IkReal(-1.00000000000000))*(x1990)*(x1994)))+(((x1987)*(x1996)))+(((IkReal(-1.00000000000000))*(x1988)*(x1998))));
evalcond[5]=((((r12)*(x1996)))+(((r02)*(x1994)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1995)*(x1997)))+(((x1989)*(x1998)))+(((IkReal(-1.00000000000000))*(x1990)*(x1998)))+(((x1987)*(x1997))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2000=((IkReal(0.0100000000000000))*(cj14));
IkReal x2001=((r10)*(sj9));
IkReal x2002=((cj14)*(r21));
IkReal x2003=((cj9)*(r00));
IkReal x2004=((IkReal(0.0100000000000000))*(sj14));
IkReal x2005=((r00)*(sj9));
IkReal x2006=((IkReal(0.374290000000000))*(sj14));
IkReal x2007=((r01)*(sj9));
IkReal x2008=((IkReal(1.00000000000000))*(py));
IkReal x2009=((cj9)*(r10));
IkReal x2010=((IkReal(0.374290000000000))*(cj14));
IkReal x2011=((r11)*(sj9));
IkReal x2012=((cj9)*(x2010));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x2002)+(((r20)*(sj14))));
evalcond[2]=((((r21)*(x2004)))+(((IkReal(0.374290000000000))*(x2002)))+(pz)+(((r20)*(x2006)))+(((IkReal(-1.00000000000000))*(r20)*(x2000))));
evalcond[3]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2006)*(x2009)))+(((x2000)*(x2009)))+(((IkReal(-1.00000000000000))*(cj9)*(x2008)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x2004)))+(((IkReal(-1.00000000000000))*(x2000)*(x2005)))+(((x2005)*(x2006)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(x2012)))+(((x2004)*(x2007)))+(((x2007)*(x2010))));
evalcond[4]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2003)*(x2006)))+(((x2000)*(x2001)))+(((x2000)*(x2003)))+(((IkReal(-1.00000000000000))*(x2004)*(x2011)))+(((IkReal(-1.00000000000000))*(x2001)*(x2006)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x2008)))+(((IkReal(-1.00000000000000))*(r01)*(x2012)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2004))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2013=((r00)*(sj14));
IkReal x2014=((cj14)*(r01));
IkReal x2015=((cj14)*(r11));
IkReal x2016=((r10)*(sj14));
IkReal x2017=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x2015)*(x2017)))+(((IkReal(-1.00000000000000))*(x2016)*(x2017)))+(((sj9)*(x2014)))+(((sj9)*(x2013))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x2014)))+(((cj9)*(x2013)))+(((sj9)*(x2015)))+(((sj9)*(x2016))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2015)*(x2017)))+(((IkReal(-1.00000000000000))*(x2016)*(x2017)))+(((sj9)*(x2014)))+(((sj9)*(x2013)))))+IKsqr(((((cj9)*(x2014)))+(((cj9)*(x2013)))+(((sj9)*(x2015)))+(((sj9)*(x2016)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2015)*(x2017)))+(((IkReal(-1.00000000000000))*(x2016)*(x2017)))+(((sj9)*(x2014)))+(((sj9)*(x2013)))), ((((cj9)*(x2014)))+(((cj9)*(x2013)))+(((sj9)*(x2015)))+(((sj9)*(x2016)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x2018=((r00)*(sj14));
IkReal x2019=((cj14)*(sj9));
IkReal x2020=((IkReal(1.00000000000000))*(r11));
IkReal x2021=((IkReal(1.00000000000000))*(cj9));
IkReal x2022=((r10)*(sj14));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2021)*(x2022)))+(((r01)*(x2019)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2020)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((sj9)*(x2018))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2019)*(x2020)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2021)))+(IKcos(j12))+(((IkReal(-1.00000000000000))*(x2018)*(x2021)))+(((IkReal(-1.00000000000000))*(sj9)*(x2022))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
gconst24=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x2023=((cj14)*(cj9));
IkReal x2024=((cj14)*(sj9));
IkReal x2025=((r21)*(sj14));
IkReal x2026=((IkReal(1.00000000000000))*(r22));
gconst25=IKsign(((((r12)*(r20)*(x2023)))+(((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2026)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2024)))+(((IkReal(-1.00000000000000))*(r10)*(x2023)*(x2026)))+(((r02)*(sj9)*(x2025)))+(((r00)*(r22)*(x2024)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2025)))));
IkReal x2027=((cj14)*(cj9));
IkReal x2028=((cj14)*(sj9));
IkReal x2029=((r21)*(sj14));
IkReal x2030=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((r12)*(r20)*(x2027)))+(((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2028)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2030)))+(((IkReal(-1.00000000000000))*(r10)*(x2027)*(x2030)))+(((r02)*(sj9)*(x2029)))+(((r00)*(r22)*(x2028)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2029))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2031=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(r12)*(x2031)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2031)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(r12)*(x2031)))+(((r02)*(sj9)))))), ((gconst25)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2031)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2032=IKsin(j13);
IkReal x2033=IKcos(j13);
IkReal x2034=((r11)*(sj14));
IkReal x2035=((IkReal(1.00000000000000))*(r02));
IkReal x2036=((r01)*(sj14));
IkReal x2037=((cj14)*(r00));
IkReal x2038=((IkReal(1.00000000000000))*(r12));
IkReal x2039=((r21)*(sj14));
IkReal x2040=((cj14)*(r20));
IkReal x2041=((cj9)*(x2032));
IkReal x2042=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2043=((sj9)*(x2032));
IkReal x2044=((sj9)*(x2033));
IkReal x2045=((cj9)*(x2033));
IkReal x2046=((IkReal(1.00000000000000))*(x2032));
evalcond[0]=((IkReal(1.00000000000000))+(((r22)*(x2033)))+(((x2032)*(x2040)))+(((IkReal(-1.00000000000000))*(x2039)*(x2046))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2046)))+(((x2033)*(x2040)))+(((IkReal(-1.00000000000000))*(x2033)*(x2039))));
evalcond[2]=((((x2037)*(x2043)))+(((IkReal(-1.00000000000000))*(x2036)*(x2043)))+(((r02)*(x2044)))+(((IkReal(-1.00000000000000))*(x2041)*(x2042)))+(((x2034)*(x2041)))+(((IkReal(-1.00000000000000))*(x2038)*(x2045))));
evalcond[3]=((((x2037)*(x2044)))+(((IkReal(-1.00000000000000))*(x2036)*(x2044)))+(((r12)*(x2041)))+(cj12)+(((IkReal(-1.00000000000000))*(x2035)*(x2043)))+(((x2034)*(x2045)))+(((IkReal(-1.00000000000000))*(x2042)*(x2045))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2037)*(x2041)))+(((IkReal(-1.00000000000000))*(x2035)*(x2045)))+(((x2034)*(x2043)))+(((x2036)*(x2041)))+(((IkReal(-1.00000000000000))*(x2042)*(x2043)))+(((IkReal(-1.00000000000000))*(x2038)*(x2044))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2037)*(x2045)))+(((r02)*(x2041)))+(((r12)*(x2043)))+(sj12)+(((x2034)*(x2044)))+(((x2036)*(x2045)))+(((IkReal(-1.00000000000000))*(x2042)*(x2044))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst24)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst24)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst24)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2047=IKsin(j13);
IkReal x2048=IKcos(j13);
IkReal x2049=((r11)*(sj14));
IkReal x2050=((IkReal(1.00000000000000))*(r02));
IkReal x2051=((r01)*(sj14));
IkReal x2052=((cj14)*(r00));
IkReal x2053=((IkReal(1.00000000000000))*(r12));
IkReal x2054=((r21)*(sj14));
IkReal x2055=((cj14)*(r20));
IkReal x2056=((cj9)*(x2047));
IkReal x2057=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2058=((sj9)*(x2047));
IkReal x2059=((sj9)*(x2048));
IkReal x2060=((cj9)*(x2048));
IkReal x2061=((IkReal(1.00000000000000))*(x2047));
evalcond[0]=((IkReal(1.00000000000000))+(((r22)*(x2048)))+(((x2047)*(x2055)))+(((IkReal(-1.00000000000000))*(x2054)*(x2061))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2048)*(x2054)))+(((IkReal(-1.00000000000000))*(r22)*(x2061)))+(((x2048)*(x2055))));
evalcond[2]=((((x2052)*(x2058)))+(((x2049)*(x2056)))+(((IkReal(-1.00000000000000))*(x2053)*(x2060)))+(((IkReal(-1.00000000000000))*(x2056)*(x2057)))+(((r02)*(x2059)))+(((IkReal(-1.00000000000000))*(x2051)*(x2058))));
evalcond[3]=((((r12)*(x2056)))+(((IkReal(-1.00000000000000))*(x2057)*(x2060)))+(((x2052)*(x2059)))+(((x2049)*(x2060)))+(cj12)+(((IkReal(-1.00000000000000))*(x2050)*(x2058)))+(((IkReal(-1.00000000000000))*(x2051)*(x2059))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2050)*(x2060)))+(((x2049)*(x2058)))+(((IkReal(-1.00000000000000))*(x2052)*(x2056)))+(((IkReal(-1.00000000000000))*(x2057)*(x2058)))+(((IkReal(-1.00000000000000))*(x2053)*(x2059)))+(((x2051)*(x2056))));
evalcond[5]=((((r12)*(x2058)))+(((x2049)*(x2059)))+(((IkReal(-1.00000000000000))*(x2057)*(x2059)))+(sj12)+(((r02)*(x2056)))+(((IkReal(-1.00000000000000))*(x2052)*(x2060)))+(((x2051)*(x2060))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2062=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2062)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2062)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2062)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2062)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2062)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2062)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x2063=IKcos(j12);
IkReal x2064=((r00)*(sj14));
IkReal x2065=((cj14)*(sj9));
IkReal x2066=((IkReal(1.00000000000000))*(r11));
IkReal x2067=((IkReal(1.00000000000000))*(cj9));
IkReal x2068=((r10)*(sj14));
IkReal x2069=((IkReal(1.00000000000000))*(x2063));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x2069)))+(((r20)*(sj14))));
evalcond[1]=((((sj9)*(x2064)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2066)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((r01)*(x2065)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj10)*(x2069)))+(((IkReal(-1.00000000000000))*(x2064)*(x2067)))+(((IkReal(-1.00000000000000))*(sj9)*(x2068)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2067)))+(((IkReal(-1.00000000000000))*(x2065)*(x2066))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x2070=((r22)*(sj14));
IkReal x2071=((IkReal(1.00000000000000))*(cj9));
IkReal x2072=((cj14)*(sj9));
IkReal x2073=((r21)*(sj14));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r22)*(x2072)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2073)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r02)*(r20)*(x2072)))+(((IkReal(-1.00000000000000))*(r11)*(x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x2071)))+(((cj9)*(r12)*(x2073)))+(((r01)*(sj9)*(x2070)))));
IkReal x2074=((r22)*(sj14));
IkReal x2075=((IkReal(1.00000000000000))*(cj9));
IkReal x2076=((cj14)*(sj9));
IkReal x2077=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x2074)*(x2075)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x2076)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2077)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r02)*(r20)*(x2076)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x2075)))+(((cj9)*(r12)*(x2077)))+(((r01)*(sj9)*(x2074))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2078=((cj10)*(sj14));
IkReal x2079=((IkReal(1.00000000000000))*(cj9));
IkReal x2080=((cj10)*(sj9));
if( IKabs(((gconst16)*(((((r02)*(x2080)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2079))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2080)))+(((IkReal(-1.00000000000000))*(r11)*(x2078)*(x2079)))+(((r01)*(sj9)*(x2078))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst16)*(((((r02)*(x2080)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2079)))))), ((gconst16)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2080)))+(((IkReal(-1.00000000000000))*(r11)*(x2078)*(x2079)))+(((r01)*(sj9)*(x2078)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2081=IKsin(j13);
IkReal x2082=IKcos(j13);
IkReal x2083=((IkReal(1.00000000000000))*(cj10));
IkReal x2084=((r11)*(sj14));
IkReal x2085=((IkReal(1.00000000000000))*(r02));
IkReal x2086=((r01)*(sj14));
IkReal x2087=((cj14)*(r00));
IkReal x2088=((IkReal(1.00000000000000))*(r12));
IkReal x2089=((r21)*(sj14));
IkReal x2090=((cj14)*(r20));
IkReal x2091=((cj9)*(x2081));
IkReal x2092=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2093=((sj9)*(x2081));
IkReal x2094=((sj9)*(x2082));
IkReal x2095=((cj9)*(x2082));
IkReal x2096=((IkReal(1.00000000000000))*(x2081));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2083)))+(((IkReal(-1.00000000000000))*(x2089)*(x2096)))+(((x2081)*(x2090)))+(((r22)*(x2082))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2082)*(x2089)))+(((x2082)*(x2090)))+(((IkReal(-1.00000000000000))*(sj10)*(sj12)))+(((IkReal(-1.00000000000000))*(r22)*(x2096))));
evalcond[2]=((((x2084)*(x2091)))+(((IkReal(-1.00000000000000))*(x2091)*(x2092)))+(((x2087)*(x2093)))+(((IkReal(-1.00000000000000))*(x2088)*(x2095)))+(((IkReal(-1.00000000000000))*(x2086)*(x2093)))+(((r02)*(x2094))));
evalcond[3]=((((x2084)*(x2095)))+(((x2087)*(x2094)))+(cj12)+(((IkReal(-1.00000000000000))*(x2086)*(x2094)))+(((IkReal(-1.00000000000000))*(x2092)*(x2095)))+(((IkReal(-1.00000000000000))*(x2085)*(x2093)))+(((r12)*(x2091))));
evalcond[4]=((((x2084)*(x2093)))+(sj10)+(((IkReal(-1.00000000000000))*(x2088)*(x2094)))+(((IkReal(-1.00000000000000))*(x2092)*(x2093)))+(((IkReal(-1.00000000000000))*(x2085)*(x2095)))+(((IkReal(-1.00000000000000))*(x2087)*(x2091)))+(((x2086)*(x2091))));
evalcond[5]=((((x2084)*(x2094)))+(((IkReal(-1.00000000000000))*(x2092)*(x2094)))+(((IkReal(-1.00000000000000))*(sj12)*(x2083)))+(((r12)*(x2093)))+(((IkReal(-1.00000000000000))*(x2087)*(x2095)))+(((r02)*(x2091)))+(((x2086)*(x2095))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2097=((sj10)*(sj12));
IkReal x2098=((cj14)*(r20));
IkReal x2099=((IkReal(1.00000000000000))*(r21)*(sj14));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(cj10)*(x2099)))+(((cj10)*(x2098)))+(((IkReal(-1.00000000000000))*(r22)*(x2097))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x2097)*(x2099)))+(((x2097)*(x2098)))+(((cj10)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(cj10)*(x2099)))+(((cj10)*(x2098)))+(((IkReal(-1.00000000000000))*(r22)*(x2097)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(x2097)*(x2099)))+(((x2097)*(x2098)))+(((cj10)*(r22)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2100=IKsin(j13);
IkReal x2101=IKcos(j13);
IkReal x2102=((IkReal(1.00000000000000))*(cj10));
IkReal x2103=((r11)*(sj14));
IkReal x2104=((IkReal(1.00000000000000))*(r02));
IkReal x2105=((r01)*(sj14));
IkReal x2106=((cj14)*(r00));
IkReal x2107=((IkReal(1.00000000000000))*(r12));
IkReal x2108=((r21)*(sj14));
IkReal x2109=((cj14)*(r20));
IkReal x2110=((cj9)*(x2100));
IkReal x2111=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2112=((sj9)*(x2100));
IkReal x2113=((sj9)*(x2101));
IkReal x2114=((cj9)*(x2101));
IkReal x2115=((IkReal(1.00000000000000))*(x2100));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2102)))+(((x2100)*(x2109)))+(((r22)*(x2101)))+(((IkReal(-1.00000000000000))*(x2108)*(x2115))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(sj12)))+(((x2101)*(x2109)))+(((IkReal(-1.00000000000000))*(r22)*(x2115)))+(((IkReal(-1.00000000000000))*(x2101)*(x2108))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2107)*(x2114)))+(((IkReal(-1.00000000000000))*(x2105)*(x2112)))+(((x2106)*(x2112)))+(((r02)*(x2113)))+(((x2103)*(x2110)))+(((IkReal(-1.00000000000000))*(x2110)*(x2111))));
evalcond[3]=((((r12)*(x2110)))+(((IkReal(-1.00000000000000))*(x2105)*(x2113)))+(((IkReal(-1.00000000000000))*(x2104)*(x2112)))+(((x2106)*(x2113)))+(cj12)+(((IkReal(-1.00000000000000))*(x2111)*(x2114)))+(((x2103)*(x2114))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2107)*(x2113)))+(((IkReal(-1.00000000000000))*(x2106)*(x2110)))+(((x2105)*(x2110)))+(((IkReal(-1.00000000000000))*(x2104)*(x2114)))+(sj10)+(((IkReal(-1.00000000000000))*(x2111)*(x2112)))+(((x2103)*(x2112))));
evalcond[5]=((((r12)*(x2112)))+(((IkReal(-1.00000000000000))*(x2106)*(x2114)))+(((x2105)*(x2114)))+(((r02)*(x2110)))+(((IkReal(-1.00000000000000))*(x2111)*(x2113)))+(((x2103)*(x2113)))+(((IkReal(-1.00000000000000))*(sj12)*(x2102))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2116=((cj10)*(cj9));
IkReal x2117=((IkReal(1.00000000000000))*(sj14));
IkReal x2118=((cj10)*(sj9));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r12)*(x2118)))+(((IkReal(-1.00000000000000))*(r02)*(x2116)))+(((r22)*(sj10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r01)*(x2116)*(x2117)))+(((cj14)*(r10)*(x2118)))+(((cj14)*(r00)*(x2116)))+(((IkReal(-1.00000000000000))*(r11)*(x2117)*(x2118)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(r12)*(x2118)))+(((IkReal(-1.00000000000000))*(r02)*(x2116)))+(((r22)*(sj10)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(r01)*(x2116)*(x2117)))+(((cj14)*(r10)*(x2118)))+(((cj14)*(r00)*(x2116)))+(((IkReal(-1.00000000000000))*(r11)*(x2117)*(x2118)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x2119=IKsin(j13);
IkReal x2120=IKcos(j13);
IkReal x2121=((r11)*(sj14));
IkReal x2122=((r01)*(sj14));
IkReal x2123=((cj14)*(r00));
IkReal x2124=((cj9)*(x2119));
IkReal x2125=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2126=((sj9)*(x2119));
IkReal x2127=((sj9)*(x2120));
IkReal x2128=((IkReal(1.00000000000000))*(cj9)*(x2120));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2119)))+(((cj14)*(r20)*(x2119)))+(((IkReal(-1.00000000000000))*(cj10)))+(((r22)*(x2120))));
evalcond[1]=((((x2123)*(x2126)))+(((r02)*(x2127)))+(((x2121)*(x2124)))+(((IkReal(-1.00000000000000))*(r12)*(x2128)))+(((IkReal(-1.00000000000000))*(x2122)*(x2126)))+(((IkReal(-1.00000000000000))*(x2124)*(x2125))));
evalcond[2]=((((x2122)*(x2124)))+(((IkReal(-1.00000000000000))*(x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(r12)*(x2127)))+(((IkReal(-1.00000000000000))*(r02)*(x2128)))+(((IkReal(-1.00000000000000))*(x2123)*(x2124)))+(((x2121)*(x2126)))+(sj10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2129=((IkReal(0.0100000000000000))*(cj14));
IkReal x2130=((r10)*(sj9));
IkReal x2131=((cj9)*(r11));
IkReal x2132=((sj13)*(sj14));
IkReal x2133=((cj14)*(r21));
IkReal x2134=((cj9)*(r00));
IkReal x2135=((IkReal(0.374290000000000))*(cj14));
IkReal x2136=((cj9)*(r01));
IkReal x2137=((r01)*(sj9));
IkReal x2138=((IkReal(0.0100000000000000))*(sj14));
IkReal x2139=((IkReal(1.00000000000000))*(sj13));
IkReal x2140=((r00)*(sj9));
IkReal x2141=((IkReal(0.374290000000000))*(sj14));
IkReal x2142=((cj13)*(sj9));
IkReal x2143=((IkReal(1.00000000000000))*(cj13));
IkReal x2144=((IkReal(1.00000000000000))*(py));
IkReal x2145=((r11)*(sj9));
IkReal x2146=((cj9)*(r10));
IkReal x2147=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x2133)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x2147)))+(((IkReal(-1.00000000000000))*(r21)*(x2132)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x2138)))+(((r20)*(x2141)))+(((IkReal(0.374290000000000))*(x2133)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x2129))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x2139)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2143))));
evalcond[5]=((((x2131)*(x2132)))+(((IkReal(-1.00000000000000))*(cj14)*(x2139)*(x2146)))+(((r02)*(x2142)))+(((x2140)*(x2147)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2143)))+(((IkReal(-1.00000000000000))*(x2132)*(x2137))));
evalcond[6]=((((x2132)*(x2145)))+(((IkReal(-1.00000000000000))*(cj14)*(x2134)*(x2139)))+(((x2132)*(x2136)))+(((IkReal(-1.00000000000000))*(cj14)*(x2130)*(x2139)))+(((IkReal(-1.00000000000000))*(r12)*(x2142)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2143))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2129)*(x2140)))+(((x2135)*(x2137)))+(((x2129)*(x2146)))+(((x2140)*(x2141)))+(((IkReal(-1.00000000000000))*(cj9)*(x2144)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2131)*(x2138)))+(((IkReal(-1.00000000000000))*(x2131)*(x2135)))+(((x2137)*(x2138)))+(((IkReal(-1.00000000000000))*(x2141)*(x2146))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x2138)*(x2145)))+(((IkReal(-1.00000000000000))*(x2135)*(x2145)))+(((IkReal(-1.00000000000000))*(x2130)*(x2141)))+(((IkReal(-1.00000000000000))*(x2135)*(x2136)))+(((IkReal(-1.00000000000000))*(x2134)*(x2141)))+(((IkReal(-1.00000000000000))*(x2136)*(x2138)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x2144)))+(((x2129)*(x2134)))+(((x2129)*(x2130))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2148=((r00)*(sj14));
IkReal x2149=((cj14)*(sj9));
IkReal x2150=((IkReal(1.00000000000000))*(r11));
IkReal x2151=((IkReal(1.00000000000000))*(cj9));
IkReal x2152=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2150)))+(((sj9)*(x2148)))+(((r01)*(x2149)))+(((IkReal(-1.00000000000000))*(x2151)*(x2152))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2149)*(x2150)))+(((IkReal(-1.00000000000000))*(x2148)*(x2151)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2151)))+(((IkReal(-1.00000000000000))*(sj9)*(x2152))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2150)))+(((sj9)*(x2148)))+(((r01)*(x2149)))+(((IkReal(-1.00000000000000))*(x2151)*(x2152)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2149)*(x2150)))+(((IkReal(-1.00000000000000))*(x2148)*(x2151)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2151)))+(((IkReal(-1.00000000000000))*(sj9)*(x2152)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2150)))+(((sj9)*(x2148)))+(((r01)*(x2149)))+(((IkReal(-1.00000000000000))*(x2151)*(x2152)))), ((((IkReal(-1.00000000000000))*(x2149)*(x2150)))+(((IkReal(-1.00000000000000))*(x2148)*(x2151)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2151)))+(((IkReal(-1.00000000000000))*(sj9)*(x2152)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2153=IKcos(j12);
IkReal x2154=((cj9)*(sj14));
IkReal x2155=((IkReal(1.00000000000000))*(r00));
IkReal x2156=((cj14)*(sj9));
IkReal x2157=((IkReal(1.00000000000000))*(r11));
IkReal x2158=((cj13)*(r01));
IkReal x2159=((IkReal(1.00000000000000))*(r10));
IkReal x2160=((cj9)*(sj13));
IkReal x2161=((cj14)*(cj9));
IkReal x2162=((sj14)*(sj9));
IkReal x2163=((sj13)*(sj9));
IkReal x2164=((cj13)*(r11));
IkReal x2165=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((r00)*(x2162)))+(((IkReal(-1.00000000000000))*(x2157)*(x2161)))+(((IkReal(-1.00000000000000))*(x2165)))+(((IkReal(-1.00000000000000))*(x2154)*(x2159)))+(((r01)*(x2156))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2159)*(x2162)))+(((IkReal(-1.00000000000000))*(x2154)*(x2155)))+(((IkReal(-1.00000000000000))*(x2156)*(x2157)))+(((IkReal(-1.00000000000000))*(x2153)))+(((IkReal(-1.00000000000000))*(r01)*(x2161))));
evalcond[2]=((((r12)*(x2160)))+(x2153)+(((IkReal(-1.00000000000000))*(r02)*(x2163)))+(((x2154)*(x2164)))+(((cj13)*(r00)*(x2156)))+(((IkReal(-1.00000000000000))*(x2158)*(x2162)))+(((IkReal(-1.00000000000000))*(cj13)*(x2159)*(x2161))));
evalcond[3]=((((r12)*(x2163)))+(((x2154)*(x2158)))+(((r02)*(x2160)))+(((IkReal(-1.00000000000000))*(cj13)*(x2156)*(x2159)))+(((x2162)*(x2164)))+(((IkReal(-1.00000000000000))*(cj13)*(x2155)*(x2161)))+(((IkReal(-1.00000000000000))*(x2165))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2166=((IkReal(0.0100000000000000))*(cj14));
IkReal x2167=((r10)*(sj9));
IkReal x2168=((cj9)*(r11));
IkReal x2169=((sj13)*(sj14));
IkReal x2170=((cj14)*(r21));
IkReal x2171=((cj9)*(r00));
IkReal x2172=((IkReal(0.374290000000000))*(cj14));
IkReal x2173=((cj9)*(r01));
IkReal x2174=((r01)*(sj9));
IkReal x2175=((IkReal(0.0100000000000000))*(sj14));
IkReal x2176=((IkReal(1.00000000000000))*(sj13));
IkReal x2177=((r00)*(sj9));
IkReal x2178=((IkReal(0.374290000000000))*(sj14));
IkReal x2179=((cj13)*(sj9));
IkReal x2180=((IkReal(1.00000000000000))*(cj13));
IkReal x2181=((IkReal(1.00000000000000))*(py));
IkReal x2182=((r11)*(sj9));
IkReal x2183=((cj9)*(r10));
IkReal x2184=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x2170)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x2169)))+(((r20)*(x2184)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x2175)))+(((IkReal(-1.00000000000000))*(r20)*(x2166)))+(((r20)*(x2178)))+(pz)+(((IkReal(0.374290000000000))*(x2170))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2180)))+(((IkReal(-1.00000000000000))*(r22)*(x2176))));
evalcond[5]=((((x2168)*(x2169)))+(((IkReal(-1.00000000000000))*(x2169)*(x2174)))+(((IkReal(-1.00000000000000))*(cj14)*(x2176)*(x2183)))+(((x2177)*(x2184)))+(((r02)*(x2179)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2180))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2179)))+(((IkReal(-1.00000000000000))*(cj14)*(x2171)*(x2176)))+(((x2169)*(x2182)))+(((IkReal(-1.00000000000000))*(cj14)*(x2167)*(x2176)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2180)))+(((x2169)*(x2173))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2168)*(x2175)))+(((IkReal(-1.00000000000000))*(x2168)*(x2172)))+(((x2172)*(x2174)))+(((x2174)*(x2175)))+(((IkReal(-1.00000000000000))*(x2166)*(x2177)))+(((x2177)*(x2178)))+(((IkReal(-1.00000000000000))*(cj9)*(x2181)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2178)*(x2183)))+(((x2166)*(x2183))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x2171)*(x2178)))+(((IkReal(-1.00000000000000))*(x2175)*(x2182)))+(((x2166)*(x2171)))+(((x2166)*(x2167)))+(((IkReal(-1.00000000000000))*(x2172)*(x2182)))+(((IkReal(-1.00000000000000))*(sj9)*(x2181)))+(((IkReal(-1.00000000000000))*(x2172)*(x2173)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x2173)*(x2175)))+(((IkReal(-1.00000000000000))*(x2167)*(x2178))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2185=((r00)*(sj14));
IkReal x2186=((cj14)*(r01));
IkReal x2187=((cj14)*(r11));
IkReal x2188=((r10)*(sj14));
IkReal x2189=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(x2187)*(x2189)))+(((sj9)*(x2186)))+(((sj9)*(x2185))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x2186)))+(((cj9)*(x2185)))+(((sj9)*(x2187)))+(((sj9)*(x2188))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(x2187)*(x2189)))+(((sj9)*(x2186)))+(((sj9)*(x2185)))))+IKsqr(((((cj9)*(x2186)))+(((cj9)*(x2185)))+(((sj9)*(x2187)))+(((sj9)*(x2188)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(x2187)*(x2189)))+(((sj9)*(x2186)))+(((sj9)*(x2185)))), ((((cj9)*(x2186)))+(((cj9)*(x2185)))+(((sj9)*(x2187)))+(((sj9)*(x2188)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2190=IKcos(j12);
IkReal x2191=IKsin(j12);
IkReal x2192=((sj13)*(sj9));
IkReal x2193=((sj14)*(sj9));
IkReal x2194=((cj13)*(r11));
IkReal x2195=((cj9)*(sj14));
IkReal x2196=((cj13)*(r10));
IkReal x2197=((cj13)*(r01));
IkReal x2198=((cj13)*(r00));
IkReal x2199=((cj14)*(sj9));
IkReal x2200=((IkReal(1.00000000000000))*(r10));
IkReal x2201=((cj9)*(sj13));
IkReal x2202=((IkReal(1.00000000000000))*(x2199));
IkReal x2203=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2195)*(x2200)))+(((IkReal(-1.00000000000000))*(x2191)))+(((IkReal(-1.00000000000000))*(r11)*(x2203)))+(((r00)*(x2193)))+(((r01)*(x2199))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2193)*(x2200)))+(((IkReal(-1.00000000000000))*(r11)*(x2202)))+(x2190)+(((IkReal(-1.00000000000000))*(r00)*(x2195)))+(((IkReal(-1.00000000000000))*(r01)*(x2203))));
evalcond[2]=((((x2194)*(x2195)))+(((r12)*(x2201)))+(((IkReal(-1.00000000000000))*(x2193)*(x2197)))+(((IkReal(-1.00000000000000))*(x2196)*(x2203)))+(x2190)+(((x2198)*(x2199)))+(((IkReal(-1.00000000000000))*(r02)*(x2192))));
evalcond[3]=((((r02)*(x2201)))+(((x2193)*(x2194)))+(((IkReal(-1.00000000000000))*(x2196)*(x2202)))+(x2191)+(((IkReal(-1.00000000000000))*(x2198)*(x2203)))+(((r12)*(x2192)))+(((x2195)*(x2197))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2204=((IkReal(0.0100000000000000))*(cj14));
IkReal x2205=((r10)*(sj9));
IkReal x2206=((cj9)*(sj14));
IkReal x2207=((r11)*(sj13));
IkReal x2208=((cj9)*(r00));
IkReal x2209=((IkReal(1.00000000000000))*(sj9));
IkReal x2210=((cj14)*(r11));
IkReal x2211=((r01)*(sj14));
IkReal x2212=((r21)*(sj14));
IkReal x2213=((IkReal(0.0100000000000000))*(r11));
IkReal x2214=((r00)*(sj9));
IkReal x2215=((IkReal(0.374290000000000))*(sj14));
IkReal x2216=((cj13)*(r02));
IkReal x2217=((IkReal(1.00000000000000))*(cj14));
IkReal x2218=((IkReal(1.00000000000000))*(cj9));
IkReal x2219=((cj13)*(r12));
IkReal x2220=((sj14)*(sj9));
IkReal x2221=((cj9)*(r10));
IkReal x2222=((cj14)*(sj13));
IkReal x2223=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2212)))+(((r20)*(x2222)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((r20)*(x2215)))+(((IkReal(-1.00000000000000))*(r20)*(x2204)))+(pz)+(((IkReal(0.0100000000000000))*(x2212)))+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x2206)))+(((IkReal(-1.00000000000000))*(x2209)*(x2210)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2217)))+(((IkReal(-1.00000000000000))*(sj14)*(x2205))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x2217)*(x2221)))+(((x2214)*(x2222)))+(((sj9)*(x2216)))+(((x2206)*(x2207)))+(((IkReal(-1.00000000000000))*(x2218)*(x2219)))+(((IkReal(-1.00000000000000))*(sj13)*(x2209)*(x2211))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(sj13)*(x2206)))+(((x2207)*(x2220)))+(((IkReal(-1.00000000000000))*(sj13)*(x2205)*(x2217)))+(((IkReal(-1.00000000000000))*(sj13)*(x2208)*(x2217)))+(((IkReal(-1.00000000000000))*(x2216)*(x2218)))+(((IkReal(-1.00000000000000))*(x2209)*(x2219))));
evalcond[6]=((((cj13)*(r01)*(x2206)))+(((IkReal(-1.00000000000000))*(cj13)*(x2205)*(x2217)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2208)*(x2217)))+(((r12)*(sj13)*(sj9)))+(((cj13)*(r11)*(x2220))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x2218)))+(((IkReal(-0.374290000000000))*(cj9)*(x2210)))+(((IkReal(-1.00000000000000))*(x2204)*(x2214)))+(((IkReal(0.0100000000000000))*(sj9)*(x2211)))+(((IkReal(-0.374290000000000))*(r10)*(x2206)))+(((x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(x2206)*(x2213)))+(((px)*(sj9)))+(((x2204)*(x2221)))+(((sj9)*(x2223))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x2223)))+(((IkReal(-1.00000000000000))*(py)*(x2209)))+(((IkReal(-1.00000000000000))*(x2205)*(x2215)))+(((IkReal(-0.374290000000000))*(sj9)*(x2210)))+(((IkReal(-1.00000000000000))*(px)*(x2218)))+(((IkReal(-0.374290000000000))*(r00)*(x2206)))+(((IkReal(-0.0100000000000000))*(r01)*(x2206)))+(((x2204)*(x2205)))+(((x2204)*(x2208)))+(((IkReal(-1.00000000000000))*(x2213)*(x2220))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2224=IKcos(j12);
IkReal x2225=((sj14)*(sj9));
IkReal x2226=((IkReal(1.00000000000000))*(sj13));
IkReal x2227=((cj13)*(sj14));
IkReal x2228=((cj9)*(r11));
IkReal x2229=((IkReal(1.00000000000000))*(cj13));
IkReal x2230=((cj9)*(r10));
IkReal x2231=((cj14)*(sj9));
IkReal x2232=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2224))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x2227)))+(((IkReal(-1.00000000000000))*(x2232)))+(((IkReal(-1.00000000000000))*(r22)*(x2226))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2230)))+(((IkReal(-1.00000000000000))*(x2232)))+(((IkReal(-1.00000000000000))*(cj14)*(x2228)))+(((r00)*(x2225)))+(((r01)*(x2231))));
evalcond[3]=((x2224)+(((IkReal(-1.00000000000000))*(r01)*(x2225)*(x2229)))+(((IkReal(-1.00000000000000))*(cj14)*(x2229)*(x2230)))+(((x2227)*(x2228)))+(((cj13)*(r00)*(x2231)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2226))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2233=((IkReal(0.0100000000000000))*(cj14));
IkReal x2234=((r10)*(sj9));
IkReal x2235=((cj9)*(sj14));
IkReal x2236=((r11)*(sj13));
IkReal x2237=((cj9)*(r00));
IkReal x2238=((IkReal(1.00000000000000))*(sj9));
IkReal x2239=((cj14)*(r11));
IkReal x2240=((r01)*(sj14));
IkReal x2241=((r21)*(sj14));
IkReal x2242=((IkReal(0.0100000000000000))*(r11));
IkReal x2243=((r00)*(sj9));
IkReal x2244=((IkReal(0.374290000000000))*(sj14));
IkReal x2245=((cj13)*(r02));
IkReal x2246=((IkReal(1.00000000000000))*(cj14));
IkReal x2247=((IkReal(1.00000000000000))*(cj9));
IkReal x2248=((cj13)*(r12));
IkReal x2249=((sj14)*(sj9));
IkReal x2250=((cj9)*(r10));
IkReal x2251=((cj14)*(sj13));
IkReal x2252=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2241)))+(((r20)*(x2251)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x2233)))+(((r20)*(x2244)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x2241))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2246)))+(((IkReal(-1.00000000000000))*(x2238)*(x2239)))+(((IkReal(-1.00000000000000))*(sj14)*(x2234)))+(((IkReal(-1.00000000000000))*(r00)*(x2235))));
evalcond[4]=((((x2235)*(x2236)))+(((sj9)*(x2245)))+(((IkReal(-1.00000000000000))*(x2247)*(x2248)))+(((x2243)*(x2251)))+(((IkReal(-1.00000000000000))*(sj13)*(x2238)*(x2240)))+(((IkReal(-1.00000000000000))*(sj13)*(x2246)*(x2250))));
evalcond[5]=((IkReal(-1.00000000000000))+(((x2236)*(x2249)))+(((r01)*(sj13)*(x2235)))+(((IkReal(-1.00000000000000))*(sj13)*(x2234)*(x2246)))+(((IkReal(-1.00000000000000))*(x2238)*(x2248)))+(((IkReal(-1.00000000000000))*(sj13)*(x2237)*(x2246)))+(((IkReal(-1.00000000000000))*(x2245)*(x2247))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x2237)*(x2246)))+(((IkReal(-1.00000000000000))*(cj13)*(x2234)*(x2246)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x2235)))+(((cj13)*(r11)*(x2249)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x2233)*(x2250)))+(((x2243)*(x2244)))+(((sj9)*(x2252)))+(((IkReal(0.0100000000000000))*(sj9)*(x2240)))+(((IkReal(-1.00000000000000))*(x2233)*(x2243)))+(((IkReal(-1.00000000000000))*(py)*(x2247)))+(((IkReal(-0.374290000000000))*(cj9)*(x2239)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2235)*(x2242)))+(((IkReal(-0.374290000000000))*(r10)*(x2235))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2234)*(x2244)))+(((IkReal(-1.00000000000000))*(py)*(x2238)))+(((IkReal(-1.00000000000000))*(px)*(x2247)))+(((IkReal(-0.374290000000000))*(sj9)*(x2239)))+(((x2233)*(x2237)))+(((x2233)*(x2234)))+(((IkReal(-1.00000000000000))*(x2242)*(x2249)))+(((IkReal(-0.0100000000000000))*(r01)*(x2235)))+(((IkReal(-0.374290000000000))*(r00)*(x2235)))+(((IkReal(-1.00000000000000))*(cj9)*(x2252))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2253=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2253))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x2253)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2253)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x2253)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2253)))), ((((IkReal(-1.00000000000000))*(r21)*(x2253)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2254=IKsin(j12);
IkReal x2255=IKcos(j12);
IkReal x2256=((sj14)*(sj9));
IkReal x2257=((IkReal(1.00000000000000))*(sj13));
IkReal x2258=((cj13)*(sj14));
IkReal x2259=((cj9)*(r11));
IkReal x2260=((IkReal(1.00000000000000))*(cj13));
IkReal x2261=((cj9)*(r10));
IkReal x2262=((cj14)*(sj9));
evalcond[0]=((x2255)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x2254)+(((IkReal(-1.00000000000000))*(r22)*(x2257)))+(((IkReal(-1.00000000000000))*(r21)*(x2258))));
evalcond[2]=((((r01)*(x2262)))+(((IkReal(-1.00000000000000))*(cj14)*(x2259)))+(((IkReal(-1.00000000000000))*(x2254)))+(((IkReal(-1.00000000000000))*(sj14)*(x2261)))+(((r00)*(x2256))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2256)*(x2260)))+(x2255)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2257)))+(((cj13)*(r00)*(x2262)))+(((x2258)*(x2259)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(x2260)*(x2261))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2263=((IkReal(1.00000000000000))*(sj14));
IkReal x2264=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x2263))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2263)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2264)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2264)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2263))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x2263)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2263)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2264)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2264)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2263)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x2263)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2263)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2264)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2264)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2263)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2265=IKsin(j12);
IkReal x2266=IKcos(j12);
IkReal x2267=((IkReal(1.00000000000000))*(sj13));
IkReal x2268=((cj13)*(r10));
IkReal x2269=((IkReal(1.00000000000000))*(cj10));
IkReal x2270=((cj9)*(sj14));
IkReal x2271=((cj13)*(r01));
IkReal x2272=((IkReal(1.00000000000000))*(r10));
IkReal x2273=((cj9)*(sj13));
IkReal x2274=((cj13)*(sj14));
IkReal x2275=((cj14)*(r01));
IkReal x2276=((cj13)*(cj14));
IkReal x2277=((IkReal(1.00000000000000))*(cj9));
IkReal x2278=((sj14)*(sj9));
IkReal x2279=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2280=((IkReal(1.00000000000000))*(x2265));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2266))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x2280)))+(((IkReal(-1.00000000000000))*(r22)*(x2267)))+(((r20)*(x2276)))+(((IkReal(-1.00000000000000))*(r21)*(x2274))));
evalcond[2]=((((r00)*(x2278)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2277)))+(((IkReal(-1.00000000000000))*(x2280)))+(((IkReal(-1.00000000000000))*(x2270)*(x2272)))+(((sj9)*(x2275))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2275)*(x2277)))+(((IkReal(-1.00000000000000))*(x2272)*(x2278)))+(((IkReal(-1.00000000000000))*(r11)*(x2279)))+(((IkReal(-1.00000000000000))*(x2266)*(x2269)))+(((IkReal(-1.00000000000000))*(r00)*(x2270))));
evalcond[4]=((x2266)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2267)))+(((cj13)*(r11)*(x2270)))+(((IkReal(-1.00000000000000))*(x2271)*(x2278)))+(((IkReal(-1.00000000000000))*(cj14)*(x2268)*(x2277)))+(((r12)*(x2273)))+(((r00)*(sj9)*(x2276))));
evalcond[5]=((((x2270)*(x2271)))+(((r02)*(x2273)))+(((IkReal(-1.00000000000000))*(r00)*(x2276)*(x2277)))+(((IkReal(-1.00000000000000))*(x2268)*(x2279)))+(((r11)*(sj9)*(x2274)))+(((IkReal(-1.00000000000000))*(x2265)*(x2269)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2281=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2281)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2281)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2281)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2281)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2281)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2281)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2282=IKsin(j12);
IkReal x2283=IKcos(j12);
IkReal x2284=((IkReal(1.00000000000000))*(sj13));
IkReal x2285=((cj13)*(r10));
IkReal x2286=((IkReal(1.00000000000000))*(cj10));
IkReal x2287=((cj9)*(sj14));
IkReal x2288=((cj13)*(r01));
IkReal x2289=((IkReal(1.00000000000000))*(r10));
IkReal x2290=((cj9)*(sj13));
IkReal x2291=((cj13)*(sj14));
IkReal x2292=((cj14)*(r01));
IkReal x2293=((cj13)*(cj14));
IkReal x2294=((IkReal(1.00000000000000))*(cj9));
IkReal x2295=((sj14)*(sj9));
IkReal x2296=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2297=((IkReal(1.00000000000000))*(x2282));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2283))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x2297)))+(((IkReal(-1.00000000000000))*(r21)*(x2291)))+(((r20)*(x2293)))+(((IkReal(-1.00000000000000))*(r22)*(x2284))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2294)))+(((r00)*(x2295)))+(((IkReal(-1.00000000000000))*(x2287)*(x2289)))+(((sj9)*(x2292)))+(((IkReal(-1.00000000000000))*(x2297))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2289)*(x2295)))+(((IkReal(-1.00000000000000))*(x2292)*(x2294)))+(((IkReal(-1.00000000000000))*(r00)*(x2287)))+(((IkReal(-1.00000000000000))*(r11)*(x2296)))+(((IkReal(-1.00000000000000))*(x2283)*(x2286))));
evalcond[4]=((x2283)+(((IkReal(-1.00000000000000))*(x2288)*(x2295)))+(((IkReal(-1.00000000000000))*(cj14)*(x2285)*(x2294)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2284)))+(((cj13)*(r11)*(x2287)))+(((r00)*(sj9)*(x2293)))+(((r12)*(x2290))));
evalcond[5]=((((r11)*(sj9)*(x2291)))+(((IkReal(-1.00000000000000))*(x2282)*(x2286)))+(((IkReal(-1.00000000000000))*(x2285)*(x2296)))+(((IkReal(-1.00000000000000))*(r00)*(x2293)*(x2294)))+(((x2287)*(x2288)))+(((r02)*(x2290)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2298=IKsin(j12);
IkReal x2299=IKcos(j12);
IkReal x2300=((IkReal(1.00000000000000))*(sj13));
IkReal x2301=((cj13)*(r10));
IkReal x2302=((IkReal(1.00000000000000))*(cj10));
IkReal x2303=((cj9)*(sj14));
IkReal x2304=((cj13)*(r01));
IkReal x2305=((IkReal(1.00000000000000))*(r10));
IkReal x2306=((cj9)*(sj13));
IkReal x2307=((cj13)*(sj14));
IkReal x2308=((cj14)*(r01));
IkReal x2309=((cj13)*(cj14));
IkReal x2310=((IkReal(1.00000000000000))*(cj9));
IkReal x2311=((sj14)*(sj9));
IkReal x2312=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2313=((IkReal(1.00000000000000))*(x2298));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x2299)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2300)))+(((r20)*(x2309)))+(((IkReal(-1.00000000000000))*(r21)*(x2307)))+(((IkReal(-1.00000000000000))*(sj10)*(x2313))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2303)*(x2305)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2310)))+(((sj9)*(x2308)))+(((r00)*(x2311)))+(((IkReal(-1.00000000000000))*(x2313))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2308)*(x2310)))+(((IkReal(-1.00000000000000))*(r11)*(x2312)))+(((IkReal(-1.00000000000000))*(x2299)*(x2302)))+(((IkReal(-1.00000000000000))*(x2305)*(x2311)))+(((IkReal(-1.00000000000000))*(r00)*(x2303))));
evalcond[4]=((((cj13)*(r11)*(x2303)))+(((r12)*(x2306)))+(x2299)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2300)))+(((r00)*(sj9)*(x2309)))+(((IkReal(-1.00000000000000))*(cj14)*(x2301)*(x2310)))+(((IkReal(-1.00000000000000))*(x2304)*(x2311))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2309)*(x2310)))+(((r11)*(sj9)*(x2307)))+(((x2303)*(x2304)))+(((r02)*(x2306)))+(((IkReal(-1.00000000000000))*(x2298)*(x2302)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x2301)*(x2312))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2314=((cj10)*(sj14));
IkReal x2315=((IkReal(1.00000000000000))*(cj9));
IkReal x2316=((cj10)*(sj9));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2315)))+(((r02)*(x2316))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((r01)*(sj9)*(x2314)))+(((IkReal(-1.00000000000000))*(r11)*(x2314)*(x2315)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2316))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2315)))+(((r02)*(x2316)))))), ((gconst13)*(((((r01)*(sj9)*(x2314)))+(((IkReal(-1.00000000000000))*(r11)*(x2314)*(x2315)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2316)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x2317=IKsin(j13);
IkReal x2318=IKcos(j13);
IkReal x2319=((r11)*(sj14));
IkReal x2320=((r01)*(sj14));
IkReal x2321=((cj14)*(r00));
IkReal x2322=((cj9)*(x2317));
IkReal x2323=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2324=((sj9)*(x2317));
IkReal x2325=((sj9)*(x2318));
IkReal x2326=((IkReal(1.00000000000000))*(cj9)*(x2318));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2317)))+(((r22)*(x2318)))+(((cj14)*(r20)*(x2317)))+(((IkReal(-1.00000000000000))*(cj10))));
evalcond[1]=((((r02)*(x2325)))+(((x2319)*(x2322)))+(((IkReal(-1.00000000000000))*(x2320)*(x2324)))+(((x2321)*(x2324)))+(((IkReal(-1.00000000000000))*(x2322)*(x2323)))+(((IkReal(-1.00000000000000))*(r12)*(x2326))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2321)*(x2322)))+(((x2319)*(x2324)))+(sj10)+(((IkReal(-1.00000000000000))*(r12)*(x2325)))+(((IkReal(-1.00000000000000))*(x2323)*(x2324)))+(((x2320)*(x2322)))+(((IkReal(-1.00000000000000))*(r02)*(x2326))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2327=((IkReal(0.0100000000000000))*(cj14));
IkReal x2328=((r10)*(sj9));
IkReal x2329=((cj9)*(r11));
IkReal x2330=((sj13)*(sj14));
IkReal x2331=((cj14)*(r21));
IkReal x2332=((cj9)*(r00));
IkReal x2333=((IkReal(0.374290000000000))*(cj14));
IkReal x2334=((cj9)*(r01));
IkReal x2335=((r01)*(sj9));
IkReal x2336=((IkReal(0.0100000000000000))*(sj14));
IkReal x2337=((IkReal(1.00000000000000))*(sj13));
IkReal x2338=((r00)*(sj9));
IkReal x2339=((IkReal(0.374290000000000))*(sj14));
IkReal x2340=((cj13)*(sj9));
IkReal x2341=((IkReal(1.00000000000000))*(cj13));
IkReal x2342=((IkReal(1.00000000000000))*(py));
IkReal x2343=((r11)*(sj9));
IkReal x2344=((cj9)*(r10));
IkReal x2345=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x2331)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x2330)))+(((r20)*(x2345)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x2336)))+(((IkReal(0.374290000000000))*(x2331)))+(pz)+(((r20)*(x2339)))+(((IkReal(-1.00000000000000))*(r20)*(x2327))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x2337)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2341))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2341)))+(((IkReal(-1.00000000000000))*(x2330)*(x2335)))+(((x2329)*(x2330)))+(((x2338)*(x2345)))+(((r02)*(x2340)))+(((IkReal(-1.00000000000000))*(cj14)*(x2337)*(x2344))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2341)))+(((IkReal(-1.00000000000000))*(cj14)*(x2328)*(x2337)))+(((IkReal(-1.00000000000000))*(cj14)*(x2332)*(x2337)))+(((IkReal(-1.00000000000000))*(r12)*(x2340)))+(((x2330)*(x2334)))+(((x2330)*(x2343))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2339)*(x2344)))+(((x2333)*(x2335)))+(((IkReal(-1.00000000000000))*(cj9)*(x2342)))+(((x2327)*(x2344)))+(((x2335)*(x2336)))+(((IkReal(-1.00000000000000))*(x2329)*(x2333)))+(((IkReal(-1.00000000000000))*(x2329)*(x2336)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2327)*(x2338)))+(((x2338)*(x2339))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x2342)))+(((IkReal(-1.00000000000000))*(x2332)*(x2339)))+(((IkReal(-1.00000000000000))*(x2328)*(x2339)))+(((IkReal(-1.00000000000000))*(x2333)*(x2343)))+(((x2327)*(x2328)))+(((IkReal(-1.00000000000000))*(x2333)*(x2334)))+(((x2327)*(x2332)))+(((IkReal(-1.00000000000000))*(x2336)*(x2343)))+(((IkReal(-1.00000000000000))*(x2334)*(x2336)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2346=((r00)*(sj14));
IkReal x2347=((cj14)*(sj9));
IkReal x2348=((IkReal(1.00000000000000))*(r11));
IkReal x2349=((IkReal(1.00000000000000))*(cj9));
IkReal x2350=((r10)*(sj14));
if( IKabs(((((r01)*(x2347)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2348)))+(((sj9)*(x2346)))+(((IkReal(-1.00000000000000))*(x2349)*(x2350))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj9)*(x2350)))+(((IkReal(-1.00000000000000))*(x2346)*(x2349)))+(((IkReal(-1.00000000000000))*(x2347)*(x2348)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2349))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(x2347)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2348)))+(((sj9)*(x2346)))+(((IkReal(-1.00000000000000))*(x2349)*(x2350)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj9)*(x2350)))+(((IkReal(-1.00000000000000))*(x2346)*(x2349)))+(((IkReal(-1.00000000000000))*(x2347)*(x2348)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2349)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((r01)*(x2347)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2348)))+(((sj9)*(x2346)))+(((IkReal(-1.00000000000000))*(x2349)*(x2350)))), ((((IkReal(-1.00000000000000))*(sj9)*(x2350)))+(((IkReal(-1.00000000000000))*(x2346)*(x2349)))+(((IkReal(-1.00000000000000))*(x2347)*(x2348)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2349)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2351=IKcos(j12);
IkReal x2352=((cj9)*(sj14));
IkReal x2353=((IkReal(1.00000000000000))*(r00));
IkReal x2354=((cj14)*(sj9));
IkReal x2355=((IkReal(1.00000000000000))*(r11));
IkReal x2356=((cj13)*(r01));
IkReal x2357=((IkReal(1.00000000000000))*(r10));
IkReal x2358=((cj9)*(sj13));
IkReal x2359=((cj14)*(cj9));
IkReal x2360=((sj14)*(sj9));
IkReal x2361=((sj13)*(sj9));
IkReal x2362=((cj13)*(r11));
IkReal x2363=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((r01)*(x2354)))+(((IkReal(-1.00000000000000))*(x2355)*(x2359)))+(((IkReal(-1.00000000000000))*(x2363)))+(((IkReal(-1.00000000000000))*(x2352)*(x2357)))+(((r00)*(x2360))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2354)*(x2355)))+(((IkReal(-1.00000000000000))*(x2351)))+(((IkReal(-1.00000000000000))*(x2357)*(x2360)))+(((IkReal(-1.00000000000000))*(r01)*(x2359)))+(((IkReal(-1.00000000000000))*(x2352)*(x2353))));
evalcond[2]=((x2351)+(((IkReal(-1.00000000000000))*(cj13)*(x2357)*(x2359)))+(((r12)*(x2358)))+(((IkReal(-1.00000000000000))*(r02)*(x2361)))+(((x2352)*(x2362)))+(((IkReal(-1.00000000000000))*(x2356)*(x2360)))+(((cj13)*(r00)*(x2354))));
evalcond[3]=((((r12)*(x2361)))+(((IkReal(-1.00000000000000))*(cj13)*(x2353)*(x2359)))+(((IkReal(-1.00000000000000))*(x2363)))+(((x2352)*(x2356)))+(((x2360)*(x2362)))+(((r02)*(x2358)))+(((IkReal(-1.00000000000000))*(cj13)*(x2354)*(x2357))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2364=((IkReal(0.0100000000000000))*(cj14));
IkReal x2365=((r10)*(sj9));
IkReal x2366=((cj9)*(r11));
IkReal x2367=((sj13)*(sj14));
IkReal x2368=((cj14)*(r21));
IkReal x2369=((cj9)*(r00));
IkReal x2370=((IkReal(0.374290000000000))*(cj14));
IkReal x2371=((cj9)*(r01));
IkReal x2372=((r01)*(sj9));
IkReal x2373=((IkReal(0.0100000000000000))*(sj14));
IkReal x2374=((IkReal(1.00000000000000))*(sj13));
IkReal x2375=((r00)*(sj9));
IkReal x2376=((IkReal(0.374290000000000))*(sj14));
IkReal x2377=((cj13)*(sj9));
IkReal x2378=((IkReal(1.00000000000000))*(cj13));
IkReal x2379=((IkReal(1.00000000000000))*(py));
IkReal x2380=((r11)*(sj9));
IkReal x2381=((cj9)*(r10));
IkReal x2382=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x2368)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x2367)))+(((r20)*(x2382)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x2376)))+(((IkReal(-1.00000000000000))*(r20)*(x2364)))+(((IkReal(0.374290000000000))*(x2368)))+(pz)+(((r21)*(x2373))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2378)))+(((IkReal(-1.00000000000000))*(r22)*(x2374))));
evalcond[5]=((((r02)*(x2377)))+(((x2366)*(x2367)))+(((IkReal(-1.00000000000000))*(x2367)*(x2372)))+(((IkReal(-1.00000000000000))*(cj14)*(x2374)*(x2381)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2378)))+(((x2375)*(x2382))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x2377)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2378)))+(((IkReal(-1.00000000000000))*(cj14)*(x2369)*(x2374)))+(((x2367)*(x2380)))+(((IkReal(-1.00000000000000))*(cj14)*(x2365)*(x2374)))+(((x2367)*(x2371))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x2372)*(x2373)))+(((x2375)*(x2376)))+(((x2370)*(x2372)))+(((IkReal(-1.00000000000000))*(x2376)*(x2381)))+(((x2364)*(x2381)))+(((IkReal(-1.00000000000000))*(x2364)*(x2375)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2366)*(x2370)))+(((IkReal(-1.00000000000000))*(x2366)*(x2373)))+(((IkReal(-1.00000000000000))*(cj9)*(x2379))));
evalcond[8]=((IkReal(-0.295420000000000))+(((x2364)*(x2369)))+(((x2364)*(x2365)))+(((IkReal(-1.00000000000000))*(sj9)*(x2379)))+(((IkReal(-1.00000000000000))*(x2369)*(x2376)))+(((IkReal(-1.00000000000000))*(x2365)*(x2376)))+(((IkReal(-1.00000000000000))*(x2373)*(x2380)))+(((IkReal(-1.00000000000000))*(x2370)*(x2371)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x2371)*(x2373)))+(((IkReal(-1.00000000000000))*(x2370)*(x2380))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2383=((r00)*(sj14));
IkReal x2384=((cj14)*(r01));
IkReal x2385=((cj14)*(r11));
IkReal x2386=((r10)*(sj14));
IkReal x2387=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x2386)*(x2387)))+(((sj9)*(x2383)))+(((sj9)*(x2384)))+(((IkReal(-1.00000000000000))*(x2385)*(x2387))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj9)*(x2385)))+(((sj9)*(x2386)))+(((cj9)*(x2383)))+(((cj9)*(x2384))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2386)*(x2387)))+(((sj9)*(x2383)))+(((sj9)*(x2384)))+(((IkReal(-1.00000000000000))*(x2385)*(x2387)))))+IKsqr(((((sj9)*(x2385)))+(((sj9)*(x2386)))+(((cj9)*(x2383)))+(((cj9)*(x2384)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2386)*(x2387)))+(((sj9)*(x2383)))+(((sj9)*(x2384)))+(((IkReal(-1.00000000000000))*(x2385)*(x2387)))), ((((sj9)*(x2385)))+(((sj9)*(x2386)))+(((cj9)*(x2383)))+(((cj9)*(x2384)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2388=IKcos(j12);
IkReal x2389=IKsin(j12);
IkReal x2390=((sj13)*(sj9));
IkReal x2391=((sj14)*(sj9));
IkReal x2392=((cj13)*(r11));
IkReal x2393=((cj9)*(sj14));
IkReal x2394=((cj13)*(r10));
IkReal x2395=((cj13)*(r01));
IkReal x2396=((cj13)*(r00));
IkReal x2397=((cj14)*(sj9));
IkReal x2398=((IkReal(1.00000000000000))*(r10));
IkReal x2399=((cj9)*(sj13));
IkReal x2400=((IkReal(1.00000000000000))*(x2397));
IkReal x2401=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((r00)*(x2391)))+(((r01)*(x2397)))+(((IkReal(-1.00000000000000))*(x2389)))+(((IkReal(-1.00000000000000))*(r11)*(x2401)))+(((IkReal(-1.00000000000000))*(x2393)*(x2398))));
evalcond[1]=((x2388)+(((IkReal(-1.00000000000000))*(r01)*(x2401)))+(((IkReal(-1.00000000000000))*(r00)*(x2393)))+(((IkReal(-1.00000000000000))*(x2391)*(x2398)))+(((IkReal(-1.00000000000000))*(r11)*(x2400))));
evalcond[2]=((((r12)*(x2399)))+(((x2392)*(x2393)))+(((IkReal(-1.00000000000000))*(x2391)*(x2395)))+(((IkReal(-1.00000000000000))*(x2394)*(x2401)))+(x2388)+(((IkReal(-1.00000000000000))*(r02)*(x2390)))+(((x2396)*(x2397))));
evalcond[3]=((((r12)*(x2390)))+(((IkReal(-1.00000000000000))*(x2394)*(x2400)))+(x2389)+(((x2393)*(x2395)))+(((r02)*(x2399)))+(((x2391)*(x2392)))+(((IkReal(-1.00000000000000))*(x2396)*(x2401))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2402=((IkReal(0.0100000000000000))*(cj14));
IkReal x2403=((r10)*(sj9));
IkReal x2404=((cj9)*(sj14));
IkReal x2405=((r11)*(sj13));
IkReal x2406=((cj9)*(r00));
IkReal x2407=((IkReal(1.00000000000000))*(sj9));
IkReal x2408=((cj14)*(r11));
IkReal x2409=((r01)*(sj14));
IkReal x2410=((r21)*(sj14));
IkReal x2411=((IkReal(0.0100000000000000))*(r11));
IkReal x2412=((r00)*(sj9));
IkReal x2413=((IkReal(0.374290000000000))*(sj14));
IkReal x2414=((cj13)*(r02));
IkReal x2415=((IkReal(1.00000000000000))*(cj14));
IkReal x2416=((IkReal(1.00000000000000))*(cj9));
IkReal x2417=((cj13)*(r12));
IkReal x2418=((sj14)*(sj9));
IkReal x2419=((cj9)*(r10));
IkReal x2420=((cj14)*(sj13));
IkReal x2421=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2410)))+(((r20)*(x2420)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(0.0100000000000000))*(x2410)))+(pz)+(((r20)*(x2413)))+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x2402))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2407)*(x2408)))+(((IkReal(-1.00000000000000))*(r00)*(x2404)))+(((IkReal(-1.00000000000000))*(sj14)*(x2403)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2415))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x2415)*(x2419)))+(((IkReal(-1.00000000000000))*(x2416)*(x2417)))+(((x2412)*(x2420)))+(((IkReal(-1.00000000000000))*(sj13)*(x2407)*(x2409)))+(((x2404)*(x2405)))+(((sj9)*(x2414))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(sj13)*(x2404)))+(((IkReal(-1.00000000000000))*(sj13)*(x2403)*(x2415)))+(((IkReal(-1.00000000000000))*(x2407)*(x2417)))+(((IkReal(-1.00000000000000))*(x2414)*(x2416)))+(((x2405)*(x2418)))+(((IkReal(-1.00000000000000))*(sj13)*(x2406)*(x2415))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x2418)))+(((IkReal(-1.00000000000000))*(cj13)*(x2403)*(x2415)))+(((cj13)*(r01)*(x2404)))+(((IkReal(-1.00000000000000))*(cj13)*(x2406)*(x2415)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2402)*(x2412)))+(((IkReal(-1.00000000000000))*(py)*(x2416)))+(((IkReal(-0.374290000000000))*(r10)*(x2404)))+(((IkReal(0.0100000000000000))*(sj9)*(x2409)))+(((IkReal(-1.00000000000000))*(x2404)*(x2411)))+(((x2402)*(x2419)))+(((px)*(sj9)))+(((sj9)*(x2421)))+(((IkReal(-0.374290000000000))*(cj9)*(x2408)))+(((x2412)*(x2413))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x2407)))+(((IkReal(-0.374290000000000))*(r00)*(x2404)))+(((IkReal(-0.374290000000000))*(sj9)*(x2408)))+(((IkReal(-0.0100000000000000))*(r01)*(x2404)))+(((IkReal(-1.00000000000000))*(x2411)*(x2418)))+(((x2402)*(x2406)))+(((x2402)*(x2403)))+(((IkReal(-1.00000000000000))*(x2403)*(x2413)))+(((IkReal(-1.00000000000000))*(px)*(x2416)))+(((IkReal(-1.00000000000000))*(cj9)*(x2421))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2422=IKcos(j12);
IkReal x2423=((sj14)*(sj9));
IkReal x2424=((IkReal(1.00000000000000))*(sj13));
IkReal x2425=((cj13)*(sj14));
IkReal x2426=((cj9)*(r11));
IkReal x2427=((IkReal(1.00000000000000))*(cj13));
IkReal x2428=((cj9)*(r10));
IkReal x2429=((cj14)*(sj9));
IkReal x2430=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2422))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x2430)))+(((IkReal(-1.00000000000000))*(r22)*(x2424)))+(((IkReal(-1.00000000000000))*(r21)*(x2425))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2430)))+(((r00)*(x2423)))+(((r01)*(x2429)))+(((IkReal(-1.00000000000000))*(cj14)*(x2426)))+(((IkReal(-1.00000000000000))*(sj14)*(x2428))));
evalcond[3]=((x2422)+(((IkReal(-1.00000000000000))*(cj14)*(x2427)*(x2428)))+(((cj13)*(r00)*(x2429)))+(((IkReal(-1.00000000000000))*(r01)*(x2423)*(x2427)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2424)))+(((x2425)*(x2426)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2431=((IkReal(0.0100000000000000))*(cj14));
IkReal x2432=((r10)*(sj9));
IkReal x2433=((cj9)*(sj14));
IkReal x2434=((r11)*(sj13));
IkReal x2435=((cj9)*(r00));
IkReal x2436=((IkReal(1.00000000000000))*(sj9));
IkReal x2437=((cj14)*(r11));
IkReal x2438=((r01)*(sj14));
IkReal x2439=((r21)*(sj14));
IkReal x2440=((IkReal(0.0100000000000000))*(r11));
IkReal x2441=((r00)*(sj9));
IkReal x2442=((IkReal(0.374290000000000))*(sj14));
IkReal x2443=((cj13)*(r02));
IkReal x2444=((IkReal(1.00000000000000))*(cj14));
IkReal x2445=((IkReal(1.00000000000000))*(cj9));
IkReal x2446=((cj13)*(r12));
IkReal x2447=((sj14)*(sj9));
IkReal x2448=((cj9)*(r10));
IkReal x2449=((cj14)*(sj13));
IkReal x2450=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x2449)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(sj13)*(x2439))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(0.0100000000000000))*(x2439)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x2431)))+(((r20)*(x2442))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2432)))+(((IkReal(-1.00000000000000))*(r00)*(x2433)))+(((IkReal(-1.00000000000000))*(x2436)*(x2437)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2444))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x2444)*(x2448)))+(((IkReal(-1.00000000000000))*(x2445)*(x2446)))+(((x2433)*(x2434)))+(((sj9)*(x2443)))+(((IkReal(-1.00000000000000))*(sj13)*(x2436)*(x2438)))+(((x2441)*(x2449))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2443)*(x2445)))+(((IkReal(-1.00000000000000))*(sj13)*(x2432)*(x2444)))+(((r01)*(sj13)*(x2433)))+(((IkReal(-1.00000000000000))*(x2436)*(x2446)))+(((IkReal(-1.00000000000000))*(sj13)*(x2435)*(x2444)))+(((x2434)*(x2447))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x2432)*(x2444)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x2447)))+(((IkReal(-1.00000000000000))*(cj13)*(x2435)*(x2444)))+(((cj13)*(r01)*(x2433)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(cj9)*(x2437)))+(((IkReal(-1.00000000000000))*(x2431)*(x2441)))+(((IkReal(-1.00000000000000))*(py)*(x2445)))+(((x2431)*(x2448)))+(((IkReal(-0.374290000000000))*(r10)*(x2433)))+(((IkReal(0.0100000000000000))*(sj9)*(x2438)))+(((sj9)*(x2450)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2433)*(x2440)))+(((x2441)*(x2442))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.0100000000000000))*(r01)*(x2433)))+(((IkReal(-1.00000000000000))*(py)*(x2436)))+(((IkReal(-0.374290000000000))*(r00)*(x2433)))+(((IkReal(-0.374290000000000))*(sj9)*(x2437)))+(((x2431)*(x2435)))+(((x2431)*(x2432)))+(((IkReal(-1.00000000000000))*(px)*(x2445)))+(((IkReal(-1.00000000000000))*(cj9)*(x2450)))+(((IkReal(-1.00000000000000))*(x2440)*(x2447)))+(((IkReal(-1.00000000000000))*(x2432)*(x2442))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2451=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2451)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x2451)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2451)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x2451)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2451)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x2451)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2452=IKsin(j12);
IkReal x2453=IKcos(j12);
IkReal x2454=((sj14)*(sj9));
IkReal x2455=((IkReal(1.00000000000000))*(sj13));
IkReal x2456=((cj13)*(sj14));
IkReal x2457=((cj9)*(r11));
IkReal x2458=((IkReal(1.00000000000000))*(cj13));
IkReal x2459=((cj9)*(r10));
IkReal x2460=((cj14)*(sj9));
evalcond[0]=((x2453)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x2452)+(((IkReal(-1.00000000000000))*(r21)*(x2456)))+(((IkReal(-1.00000000000000))*(r22)*(x2455))));
evalcond[2]=((((r01)*(x2460)))+(((IkReal(-1.00000000000000))*(sj14)*(x2459)))+(((r00)*(x2454)))+(((IkReal(-1.00000000000000))*(x2452)))+(((IkReal(-1.00000000000000))*(cj14)*(x2457))));
evalcond[3]=((((cj13)*(r00)*(x2460)))+(x2453)+(((IkReal(-1.00000000000000))*(cj14)*(x2458)*(x2459)))+(((x2456)*(x2457)))+(((IkReal(-1.00000000000000))*(r01)*(x2454)*(x2458)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2455)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2461=((IkReal(1.00000000000000))*(sj14));
IkReal x2462=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x2461)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2462)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2461)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2461)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2462))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x2461)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2462)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2461)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2461)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2462)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x2461)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2462)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2461)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2461)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2462)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2463=IKsin(j12);
IkReal x2464=IKcos(j12);
IkReal x2465=((IkReal(1.00000000000000))*(sj13));
IkReal x2466=((cj13)*(r10));
IkReal x2467=((IkReal(1.00000000000000))*(cj10));
IkReal x2468=((cj9)*(sj14));
IkReal x2469=((cj13)*(r01));
IkReal x2470=((IkReal(1.00000000000000))*(r10));
IkReal x2471=((cj9)*(sj13));
IkReal x2472=((cj13)*(sj14));
IkReal x2473=((cj14)*(r01));
IkReal x2474=((cj13)*(cj14));
IkReal x2475=((IkReal(1.00000000000000))*(cj9));
IkReal x2476=((sj14)*(sj9));
IkReal x2477=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2478=((IkReal(1.00000000000000))*(x2463));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2464))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2465)))+(((IkReal(-1.00000000000000))*(sj10)*(x2478)))+(((r20)*(x2474)))+(((IkReal(-1.00000000000000))*(r21)*(x2472))));
evalcond[2]=((((sj9)*(x2473)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2475)))+(((IkReal(-1.00000000000000))*(x2478)))+(((r00)*(x2476)))+(((IkReal(-1.00000000000000))*(x2468)*(x2470))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2464)*(x2467)))+(((IkReal(-1.00000000000000))*(r00)*(x2468)))+(((IkReal(-1.00000000000000))*(r11)*(x2477)))+(((IkReal(-1.00000000000000))*(x2473)*(x2475)))+(((IkReal(-1.00000000000000))*(x2470)*(x2476))));
evalcond[4]=((((r12)*(x2471)))+(x2464)+(((IkReal(-1.00000000000000))*(cj14)*(x2466)*(x2475)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2465)))+(((r00)*(sj9)*(x2474)))+(((IkReal(-1.00000000000000))*(x2469)*(x2476)))+(((cj13)*(r11)*(x2468))));
evalcond[5]=((((r11)*(sj9)*(x2472)))+(((IkReal(-1.00000000000000))*(r00)*(x2474)*(x2475)))+(((IkReal(-1.00000000000000))*(x2463)*(x2467)))+(((r02)*(x2471)))+(((IkReal(-1.00000000000000))*(x2466)*(x2477)))+(((x2468)*(x2469)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2479=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2479)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2479)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2479)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2479)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2479)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x2479)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2480=IKsin(j12);
IkReal x2481=IKcos(j12);
IkReal x2482=((IkReal(1.00000000000000))*(sj13));
IkReal x2483=((cj13)*(r10));
IkReal x2484=((IkReal(1.00000000000000))*(cj10));
IkReal x2485=((cj9)*(sj14));
IkReal x2486=((cj13)*(r01));
IkReal x2487=((IkReal(1.00000000000000))*(r10));
IkReal x2488=((cj9)*(sj13));
IkReal x2489=((cj13)*(sj14));
IkReal x2490=((cj14)*(r01));
IkReal x2491=((cj13)*(cj14));
IkReal x2492=((IkReal(1.00000000000000))*(cj9));
IkReal x2493=((sj14)*(sj9));
IkReal x2494=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2495=((IkReal(1.00000000000000))*(x2480));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2481))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2482)))+(((IkReal(-1.00000000000000))*(sj10)*(x2495)))+(((IkReal(-1.00000000000000))*(r21)*(x2489)))+(((r20)*(x2491))));
evalcond[2]=((((r00)*(x2493)))+(((IkReal(-1.00000000000000))*(x2495)))+(((sj9)*(x2490)))+(((IkReal(-1.00000000000000))*(x2485)*(x2487)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2492))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x2485)))+(((IkReal(-1.00000000000000))*(x2490)*(x2492)))+(((IkReal(-1.00000000000000))*(x2481)*(x2484)))+(((IkReal(-1.00000000000000))*(r11)*(x2494)))+(((IkReal(-1.00000000000000))*(x2487)*(x2493))));
evalcond[4]=((x2481)+(((IkReal(-1.00000000000000))*(cj14)*(x2483)*(x2492)))+(((cj13)*(r11)*(x2485)))+(((r00)*(sj9)*(x2491)))+(((IkReal(-1.00000000000000))*(x2486)*(x2493)))+(((r12)*(x2488)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2482))));
evalcond[5]=((((r11)*(sj9)*(x2489)))+(((x2485)*(x2486)))+(((IkReal(-1.00000000000000))*(r00)*(x2491)*(x2492)))+(((r02)*(x2488)))+(((IkReal(-1.00000000000000))*(x2480)*(x2484)))+(((IkReal(-1.00000000000000))*(x2483)*(x2494)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2496=IKsin(j12);
IkReal x2497=IKcos(j12);
IkReal x2498=((IkReal(1.00000000000000))*(sj13));
IkReal x2499=((cj13)*(r10));
IkReal x2500=((IkReal(1.00000000000000))*(cj10));
IkReal x2501=((cj9)*(sj14));
IkReal x2502=((cj13)*(r01));
IkReal x2503=((IkReal(1.00000000000000))*(r10));
IkReal x2504=((cj9)*(sj13));
IkReal x2505=((cj13)*(sj14));
IkReal x2506=((cj14)*(r01));
IkReal x2507=((cj13)*(cj14));
IkReal x2508=((IkReal(1.00000000000000))*(cj9));
IkReal x2509=((sj14)*(sj9));
IkReal x2510=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2511=((IkReal(1.00000000000000))*(x2496));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2497))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x2505)))+(((IkReal(-1.00000000000000))*(sj10)*(x2511)))+(((r20)*(x2507)))+(((IkReal(-1.00000000000000))*(r22)*(x2498))));
evalcond[2]=((((sj9)*(x2506)))+(((IkReal(-1.00000000000000))*(x2511)))+(((IkReal(-1.00000000000000))*(x2501)*(x2503)))+(((r00)*(x2509)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2508))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2503)*(x2509)))+(((IkReal(-1.00000000000000))*(r11)*(x2510)))+(((IkReal(-1.00000000000000))*(x2497)*(x2500)))+(((IkReal(-1.00000000000000))*(r00)*(x2501)))+(((IkReal(-1.00000000000000))*(x2506)*(x2508))));
evalcond[4]=((x2497)+(((r12)*(x2504)))+(((IkReal(-1.00000000000000))*(cj14)*(x2499)*(x2508)))+(((IkReal(-1.00000000000000))*(x2502)*(x2509)))+(((cj13)*(r11)*(x2501)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2498)))+(((r00)*(sj9)*(x2507))));
evalcond[5]=((((r02)*(x2504)))+(((x2501)*(x2502)))+(((IkReal(-1.00000000000000))*(x2496)*(x2500)))+(((IkReal(-1.00000000000000))*(r00)*(x2507)*(x2508)))+(((IkReal(-1.00000000000000))*(x2499)*(x2510)))+(((r11)*(sj9)*(x2505)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x2512=((IkReal(0.0100000000000000))*(cj14));
IkReal x2513=((r10)*(sj9));
IkReal x2514=((cj9)*(r00));
IkReal x2515=((IkReal(0.0100000000000000))*(sj14));
IkReal x2516=((r00)*(sj9));
IkReal x2517=((IkReal(0.374290000000000))*(sj14));
IkReal x2518=((r01)*(sj9));
IkReal x2519=((IkReal(0.374290000000000))*(cj14));
IkReal x2520=((IkReal(1.00000000000000))*(py));
IkReal x2521=((cj9)*(r10));
IkReal x2522=((r11)*(sj9));
IkReal x2523=((cj9)*(x2519));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((pz)+(((r21)*(x2515)))+(((r21)*(x2519)))+(((IkReal(0.364420000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r20)*(x2512)))+(((r20)*(x2517))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((x2518)*(x2519)))+(((IkReal(-1.00000000000000))*(r11)*(x2523)))+(((IkReal(-1.00000000000000))*(x2517)*(x2521)))+(((IkReal(-1.00000000000000))*(cj9)*(x2520)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x2515)))+(((IkReal(-1.00000000000000))*(x2512)*(x2516)))+(((x2515)*(x2518)))+(((px)*(sj9)))+(((x2512)*(x2521)))+(((x2516)*(x2517))));
evalcond[3]=((IkReal(0.0690000000000000))+(((x2512)*(x2513)))+(((x2512)*(x2514)))+(((IkReal(-1.00000000000000))*(sj9)*(x2520)))+(((IkReal(-1.00000000000000))*(x2515)*(x2522)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x2513)*(x2517)))+(((IkReal(-1.00000000000000))*(x2514)*(x2517)))+(((IkReal(-1.00000000000000))*(r01)*(x2523)))+(((IkReal(-1.00000000000000))*(x2519)*(x2522)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2515))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x2524=((cj14)*(cj9));
IkReal x2525=((cj14)*(sj9));
IkReal x2526=((r21)*(sj14));
IkReal x2527=((IkReal(1.00000000000000))*(r22));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x2524)*(x2527)))+(((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2525)))+(((r00)*(r22)*(x2525)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2527)))+(((r02)*(sj9)*(x2526)))+(((r12)*(r20)*(x2524)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2526)))));
IkReal x2528=((cj14)*(cj9));
IkReal x2529=((cj14)*(sj9));
IkReal x2530=((r21)*(sj14));
IkReal x2531=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2529)))+(((r02)*(sj9)*(x2530)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2531)))+(((r00)*(r22)*(x2529)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2530)))+(((IkReal(-1.00000000000000))*(r10)*(x2528)*(x2531)))+(((r12)*(r20)*(x2528))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
IkReal x2532=((cj14)*(r20));
IkReal x2533=((r12)*(sj9));
IkReal x2534=((r22)*(sj14));
IkReal x2535=((cj9)*(r02));
IkReal x2536=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x2537=((IkReal(1.00000000000000))*(r21)*(sj14));
gconst27=IKsign(((((IkReal(-1.00000000000000))*(x2533)*(x2537)))+(((IkReal(-1.00000000000000))*(x2535)*(x2537)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2536)))+(((r11)*(sj9)*(x2534)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2536)))+(((x2532)*(x2535)))+(((x2532)*(x2533)))+(((cj9)*(r01)*(x2534)))));
IkReal x2538=((cj14)*(r20));
IkReal x2539=((r12)*(sj9));
IkReal x2540=((r22)*(sj14));
IkReal x2541=((cj9)*(r02));
IkReal x2542=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x2543=((IkReal(1.00000000000000))*(r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x2541)*(x2543)))+(((x2538)*(x2541)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x2542)))+(((cj9)*(r01)*(x2540)))+(((IkReal(-1.00000000000000))*(x2539)*(x2543)))+(((x2538)*(x2539)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x2542)))+(((r11)*(sj9)*(x2540))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2544=((IkReal(0.0100000000000000))*(cj14));
IkReal x2545=((r10)*(sj9));
IkReal x2546=((cj14)*(r21));
IkReal x2547=((cj9)*(r00));
IkReal x2548=((IkReal(0.0100000000000000))*(sj14));
IkReal x2549=((r00)*(sj9));
IkReal x2550=((IkReal(0.374290000000000))*(sj14));
IkReal x2551=((r01)*(sj9));
IkReal x2552=((IkReal(1.00000000000000))*(py));
IkReal x2553=((cj9)*(r10));
IkReal x2554=((IkReal(0.374290000000000))*(cj14));
IkReal x2555=((r11)*(sj9));
IkReal x2556=((cj9)*(x2554));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x2546)+(((r20)*(sj14))));
evalcond[2]=((((r21)*(x2548)))+(((IkReal(0.374290000000000))*(x2546)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x2544)))+(((r20)*(x2550))));
evalcond[3]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x2556)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x2548)))+(((x2551)*(x2554)))+(((x2549)*(x2550)))+(((IkReal(-1.00000000000000))*(cj9)*(x2552)))+(((IkReal(-1.00000000000000))*(x2550)*(x2553)))+(((IkReal(-1.00000000000000))*(x2544)*(x2549)))+(((x2548)*(x2551)))+(((px)*(sj9)))+(((x2544)*(x2553))));
evalcond[4]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x2552)))+(((IkReal(-1.00000000000000))*(x2554)*(x2555)))+(((IkReal(-1.00000000000000))*(x2548)*(x2555)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2548)))+(((IkReal(-1.00000000000000))*(r01)*(x2556)))+(((IkReal(-1.00000000000000))*(x2545)*(x2550)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x2547)*(x2550)))+(((x2544)*(x2547)))+(((x2544)*(x2545))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2557=((cj14)*(r11));
IkReal x2558=((IkReal(1.00000000000000))*(sj9));
IkReal x2559=((cj14)*(r01));
IkReal x2560=((r00)*(sj14));
IkReal x2561=((r10)*(sj14));
IkReal x2562=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x2557)))+(((cj9)*(x2561)))+(((IkReal(-1.00000000000000))*(x2558)*(x2560)))+(((IkReal(-1.00000000000000))*(x2558)*(x2559))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2558)*(x2561)))+(((IkReal(-1.00000000000000))*(x2557)*(x2558)))+(((IkReal(-1.00000000000000))*(x2560)*(x2562)))+(((IkReal(-1.00000000000000))*(x2559)*(x2562))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x2557)))+(((cj9)*(x2561)))+(((IkReal(-1.00000000000000))*(x2558)*(x2560)))+(((IkReal(-1.00000000000000))*(x2558)*(x2559)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2558)*(x2561)))+(((IkReal(-1.00000000000000))*(x2557)*(x2558)))+(((IkReal(-1.00000000000000))*(x2560)*(x2562)))+(((IkReal(-1.00000000000000))*(x2559)*(x2562)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x2557)))+(((cj9)*(x2561)))+(((IkReal(-1.00000000000000))*(x2558)*(x2560)))+(((IkReal(-1.00000000000000))*(x2558)*(x2559)))), ((((IkReal(-1.00000000000000))*(x2558)*(x2561)))+(((IkReal(-1.00000000000000))*(x2557)*(x2558)))+(((IkReal(-1.00000000000000))*(x2560)*(x2562)))+(((IkReal(-1.00000000000000))*(x2559)*(x2562)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x2563=((r00)*(sj14));
IkReal x2564=((cj14)*(sj9));
IkReal x2565=((IkReal(1.00000000000000))*(r11));
IkReal x2566=((IkReal(1.00000000000000))*(cj9));
IkReal x2567=((r10)*(sj14));
evalcond[0]=((IKsin(j12))+(((r01)*(x2564)))+(((sj9)*(x2563)))+(((IkReal(-1.00000000000000))*(x2566)*(x2567)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2565))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2563)*(x2566)))+(((IkReal(-1.00000000000000))*(sj9)*(x2567)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2566)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(x2564)*(x2565))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst33;
gconst33=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
IkReal x2568=((cj14)*(cj9));
IkReal x2569=((cj14)*(sj9));
IkReal x2570=((r21)*(sj14));
IkReal x2571=((IkReal(1.00000000000000))*(r22));
gconst34=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x2568)*(x2571)))+(((r00)*(r22)*(x2569)))+(((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2569)))+(((r12)*(r20)*(x2568)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2570)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2571)))+(((r02)*(sj9)*(x2570)))));
IkReal x2572=((cj14)*(cj9));
IkReal x2573=((cj14)*(sj9));
IkReal x2574=((r21)*(sj14));
IkReal x2575=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r10)*(x2572)*(x2575)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2574)))+(((r00)*(r22)*(x2573)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2575)))+(((r12)*(r20)*(x2572)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2573)))+(((r02)*(sj9)*(x2574))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2576=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(r12)*(x2576)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2576)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst34)*(((((IkReal(-1.00000000000000))*(r12)*(x2576)))+(((r02)*(sj9)))))), ((gconst34)*(((((cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2576)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2577=IKsin(j13);
IkReal x2578=IKcos(j13);
IkReal x2579=((r11)*(sj14));
IkReal x2580=((IkReal(1.00000000000000))*(r02));
IkReal x2581=((r01)*(sj14));
IkReal x2582=((cj14)*(r00));
IkReal x2583=((IkReal(1.00000000000000))*(r12));
IkReal x2584=((r21)*(sj14));
IkReal x2585=((cj14)*(r20));
IkReal x2586=((cj9)*(x2577));
IkReal x2587=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2588=((sj9)*(x2577));
IkReal x2589=((sj9)*(x2578));
IkReal x2590=((cj9)*(x2578));
IkReal x2591=((IkReal(1.00000000000000))*(x2577));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2584)*(x2591)))+(((x2577)*(x2585)))+(((r22)*(x2578))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2591)))+(((IkReal(-1.00000000000000))*(x2578)*(x2584)))+(((x2578)*(x2585))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2586)*(x2587)))+(((x2579)*(x2586)))+(((IkReal(-1.00000000000000))*(x2583)*(x2590)))+(((x2582)*(x2588)))+(((r02)*(x2589)))+(((IkReal(-1.00000000000000))*(x2581)*(x2588))));
evalcond[3]=((((r12)*(x2586)))+(((IkReal(-1.00000000000000))*(x2587)*(x2590)))+(((IkReal(-1.00000000000000))*(cj12)))+(((x2579)*(x2590)))+(((x2582)*(x2589)))+(((IkReal(-1.00000000000000))*(x2581)*(x2589)))+(((IkReal(-1.00000000000000))*(x2580)*(x2588))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2580)*(x2590)))+(((IkReal(-1.00000000000000))*(x2582)*(x2586)))+(((x2581)*(x2586)))+(((IkReal(-1.00000000000000))*(x2587)*(x2588)))+(((x2579)*(x2588)))+(((IkReal(-1.00000000000000))*(x2583)*(x2589))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2582)*(x2590)))+(((x2581)*(x2590)))+(((r12)*(x2588)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x2587)*(x2589)))+(((x2579)*(x2589)))+(((r02)*(x2586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst33)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst33)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst33)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2592=IKsin(j13);
IkReal x2593=IKcos(j13);
IkReal x2594=((r11)*(sj14));
IkReal x2595=((IkReal(1.00000000000000))*(r02));
IkReal x2596=((r01)*(sj14));
IkReal x2597=((cj14)*(r00));
IkReal x2598=((IkReal(1.00000000000000))*(r12));
IkReal x2599=((r21)*(sj14));
IkReal x2600=((cj14)*(r20));
IkReal x2601=((cj9)*(x2592));
IkReal x2602=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2603=((sj9)*(x2592));
IkReal x2604=((sj9)*(x2593));
IkReal x2605=((cj9)*(x2593));
IkReal x2606=((IkReal(1.00000000000000))*(x2592));
evalcond[0]=((IkReal(1.00000000000000))+(((r22)*(x2593)))+(((x2592)*(x2600)))+(((IkReal(-1.00000000000000))*(x2599)*(x2606))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2593)*(x2599)))+(((IkReal(-1.00000000000000))*(r22)*(x2606)))+(((x2593)*(x2600))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2601)*(x2602)))+(((IkReal(-1.00000000000000))*(x2596)*(x2603)))+(((x2597)*(x2603)))+(((x2594)*(x2601)))+(((r02)*(x2604)))+(((IkReal(-1.00000000000000))*(x2598)*(x2605))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2595)*(x2603)))+(((IkReal(-1.00000000000000))*(x2596)*(x2604)))+(((x2597)*(x2604)))+(((x2594)*(x2605)))+(((r12)*(x2601)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x2602)*(x2605))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2595)*(x2605)))+(((IkReal(-1.00000000000000))*(x2597)*(x2601)))+(((x2596)*(x2601)))+(((x2594)*(x2603)))+(((IkReal(-1.00000000000000))*(x2598)*(x2604)))+(((IkReal(-1.00000000000000))*(x2602)*(x2603))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2597)*(x2605)))+(((x2596)*(x2605)))+(((x2594)*(x2604)))+(((IkReal(-1.00000000000000))*(sj12)))+(((r12)*(x2603)))+(((r02)*(x2601)))+(((IkReal(-1.00000000000000))*(x2602)*(x2604))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2607=((IkReal(0.0100000000000000))*(cj14));
IkReal x2608=((r10)*(sj9));
IkReal x2609=((cj14)*(r21));
IkReal x2610=((cj9)*(r00));
IkReal x2611=((IkReal(0.0100000000000000))*(sj14));
IkReal x2612=((r00)*(sj9));
IkReal x2613=((IkReal(0.374290000000000))*(sj14));
IkReal x2614=((r01)*(sj9));
IkReal x2615=((IkReal(1.00000000000000))*(py));
IkReal x2616=((cj9)*(r10));
IkReal x2617=((IkReal(0.374290000000000))*(cj14));
IkReal x2618=((r11)*(sj9));
IkReal x2619=((cj9)*(x2617));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x2609));
evalcond[2]=((((r20)*(x2613)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x2607)))+(((IkReal(0.374290000000000))*(x2609)))+(((r21)*(x2611))));
evalcond[3]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x2611)))+(((IkReal(-1.00000000000000))*(x2607)*(x2612)))+(((IkReal(-1.00000000000000))*(r11)*(x2619)))+(((x2614)*(x2617)))+(((IkReal(-1.00000000000000))*(x2613)*(x2616)))+(((x2611)*(x2614)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x2615)))+(((x2612)*(x2613)))+(((x2607)*(x2616))));
evalcond[4]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x2617)*(x2618)))+(((x2607)*(x2608)))+(((IkReal(-1.00000000000000))*(r01)*(x2619)))+(((IkReal(-1.00000000000000))*(x2610)*(x2613)))+(((IkReal(-1.00000000000000))*(x2611)*(x2618)))+(((IkReal(-1.00000000000000))*(x2608)*(x2613)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2611)))+(((IkReal(-1.00000000000000))*(sj9)*(x2615)))+(((x2607)*(x2610))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2620=((cj14)*(cj9));
IkReal x2621=((IkReal(1.00000000000000))*(sj9));
IkReal x2622=((r00)*(sj14));
IkReal x2623=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2621)))+(((cj9)*(x2623)))+(((r11)*(x2620)))+(((IkReal(-1.00000000000000))*(x2621)*(x2622))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x2620)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x2623)))+(((cj9)*(x2622))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2621)))+(((cj9)*(x2623)))+(((r11)*(x2620)))+(((IkReal(-1.00000000000000))*(x2621)*(x2622)))))+IKsqr(((((r01)*(x2620)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x2623)))+(((cj9)*(x2622)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2621)))+(((cj9)*(x2623)))+(((r11)*(x2620)))+(((IkReal(-1.00000000000000))*(x2621)*(x2622)))), ((((r01)*(x2620)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x2623)))+(((cj9)*(x2622)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x2624=((r00)*(sj14));
IkReal x2625=((cj14)*(sj9));
IkReal x2626=((IkReal(1.00000000000000))*(r11));
IkReal x2627=((IkReal(1.00000000000000))*(cj9));
IkReal x2628=((r10)*(sj14));
evalcond[0]=((((r01)*(x2625)))+(IKsin(j12))+(((sj9)*(x2624)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2626)))+(((IkReal(-1.00000000000000))*(x2627)*(x2628))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2627)))+(((IkReal(-1.00000000000000))*(x2625)*(x2626)))+(((IkReal(-1.00000000000000))*(sj9)*(x2628)))+(((IkReal(-1.00000000000000))*(x2624)*(x2627)))+(IKcos(j12)));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
gconst37=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x2629=((r22)*(sj14));
IkReal x2630=((IkReal(1.00000000000000))*(cj9));
IkReal x2631=((cj14)*(sj9));
IkReal x2632=((r21)*(sj14));
gconst38=IKsign(((((cj9)*(r12)*(x2632)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x2630)))+(((r02)*(r20)*(x2631)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x2631)))+(((IkReal(-1.00000000000000))*(r11)*(x2629)*(x2630)))+(((r01)*(sj9)*(x2629)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2632)))));
IkReal x2633=((r22)*(sj14));
IkReal x2634=((IkReal(1.00000000000000))*(cj9));
IkReal x2635=((cj14)*(sj9));
IkReal x2636=((r21)*(sj14));
dummyeval[0]=((((cj9)*(r12)*(x2636)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x2634)))+(((r02)*(r20)*(x2635)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x2633)))+(((IkReal(-1.00000000000000))*(r11)*(x2633)*(x2634)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x2635)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2636))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2637=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst38)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x2637))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2637)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst38)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x2637)))))), ((gconst38)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x2637)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2638=IKsin(j13);
IkReal x2639=IKcos(j13);
IkReal x2640=((r11)*(sj14));
IkReal x2641=((IkReal(1.00000000000000))*(r02));
IkReal x2642=((r01)*(sj14));
IkReal x2643=((cj14)*(r00));
IkReal x2644=((IkReal(1.00000000000000))*(r12));
IkReal x2645=((r21)*(sj14));
IkReal x2646=((cj14)*(r20));
IkReal x2647=((cj9)*(x2638));
IkReal x2648=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2649=((sj9)*(x2638));
IkReal x2650=((sj9)*(x2639));
IkReal x2651=((cj9)*(x2639));
IkReal x2652=((IkReal(1.00000000000000))*(x2638));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2645)*(x2652)))+(((r22)*(x2639)))+(((x2638)*(x2646))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2652)))+(((x2639)*(x2646)))+(((IkReal(-1.00000000000000))*(x2639)*(x2645))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2644)*(x2651)))+(((IkReal(-1.00000000000000))*(x2647)*(x2648)))+(((r02)*(x2650)))+(((x2640)*(x2647)))+(((IkReal(-1.00000000000000))*(x2642)*(x2649)))+(((x2643)*(x2649))));
evalcond[3]=((((r12)*(x2647)))+(((IkReal(-1.00000000000000))*(x2641)*(x2649)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x2648)*(x2651)))+(((x2640)*(x2651)))+(((x2643)*(x2650)))+(((IkReal(-1.00000000000000))*(x2642)*(x2650))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2643)*(x2647)))+(((IkReal(-1.00000000000000))*(x2644)*(x2650)))+(((IkReal(-1.00000000000000))*(x2641)*(x2651)))+(((IkReal(-1.00000000000000))*(x2648)*(x2649)))+(((x2640)*(x2649)))+(((x2642)*(x2647))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2643)*(x2651)))+(((r12)*(x2649)))+(((r02)*(x2647)))+(sj12)+(((IkReal(-1.00000000000000))*(x2648)*(x2650)))+(((x2642)*(x2651)))+(((x2640)*(x2650))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst37)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst37)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst37)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2653=IKsin(j13);
IkReal x2654=IKcos(j13);
IkReal x2655=((r11)*(sj14));
IkReal x2656=((IkReal(1.00000000000000))*(r02));
IkReal x2657=((r01)*(sj14));
IkReal x2658=((cj14)*(r00));
IkReal x2659=((IkReal(1.00000000000000))*(r12));
IkReal x2660=((r21)*(sj14));
IkReal x2661=((cj14)*(r20));
IkReal x2662=((cj9)*(x2653));
IkReal x2663=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2664=((sj9)*(x2653));
IkReal x2665=((sj9)*(x2654));
IkReal x2666=((cj9)*(x2654));
IkReal x2667=((IkReal(1.00000000000000))*(x2653));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2660)*(x2667)))+(((x2653)*(x2661)))+(((r22)*(x2654))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2654)*(x2660)))+(((x2654)*(x2661)))+(((IkReal(-1.00000000000000))*(r22)*(x2667))));
evalcond[2]=((((x2658)*(x2664)))+(((r02)*(x2665)))+(((IkReal(-1.00000000000000))*(x2657)*(x2664)))+(((IkReal(-1.00000000000000))*(x2662)*(x2663)))+(((x2655)*(x2662)))+(((IkReal(-1.00000000000000))*(x2659)*(x2666))));
evalcond[3]=((((x2658)*(x2665)))+(((r12)*(x2662)))+(((IkReal(-1.00000000000000))*(x2657)*(x2665)))+(((x2655)*(x2666)))+(((IkReal(-1.00000000000000))*(x2663)*(x2666)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x2656)*(x2664))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2658)*(x2662)))+(((x2657)*(x2662)))+(((x2655)*(x2664)))+(((IkReal(-1.00000000000000))*(x2663)*(x2664)))+(((IkReal(-1.00000000000000))*(x2659)*(x2665)))+(((IkReal(-1.00000000000000))*(x2656)*(x2666))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2658)*(x2666)))+(((x2657)*(x2666)))+(((r12)*(x2664)))+(((r02)*(x2662)))+(((x2655)*(x2665)))+(((IkReal(-1.00000000000000))*(x2663)*(x2665)))+(sj12));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2668=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2668)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2668))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2668)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2668)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2668)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2668)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x2669=IKcos(j12);
IkReal x2670=((r00)*(sj14));
IkReal x2671=((cj14)*(sj9));
IkReal x2672=((IkReal(1.00000000000000))*(r11));
IkReal x2673=((IkReal(1.00000000000000))*(cj9));
IkReal x2674=((r10)*(sj14));
IkReal x2675=((IkReal(1.00000000000000))*(x2669));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2675))));
evalcond[1]=((IKsin(j12))+(((IkReal(-1.00000000000000))*(x2673)*(x2674)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x2672)))+(((sj9)*(x2670)))+(((r01)*(x2671))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2670)*(x2673)))+(((IkReal(-1.00000000000000))*(cj10)*(x2675)))+(((IkReal(-1.00000000000000))*(x2671)*(x2672)))+(((IkReal(-1.00000000000000))*(sj9)*(x2674)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2673))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
IkReal x2676=((cj14)*(cj9));
IkReal x2677=((cj14)*(sj9));
IkReal x2678=((r21)*(sj14));
IkReal x2679=((IkReal(1.00000000000000))*(r22));
gconst29=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2679)))+(((r00)*(r22)*(x2677)))+(((IkReal(-1.00000000000000))*(r10)*(x2676)*(x2679)))+(((r12)*(r20)*(x2676)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x2677)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2678)))+(((r02)*(sj9)*(x2678)))));
IkReal x2680=((cj14)*(cj9));
IkReal x2681=((cj14)*(sj9));
IkReal x2682=((r21)*(sj14));
IkReal x2683=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r20)*(x2681)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x2683)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r02)*(sj9)*(x2682)))+(((r12)*(r20)*(x2680)))+(((IkReal(-1.00000000000000))*(r10)*(x2680)*(x2683)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2682)))+(((r00)*(r22)*(x2681))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2684=((cj10)*(sj14));
IkReal x2685=((IkReal(1.00000000000000))*(cj9));
IkReal x2686=((cj10)*(sj9));
if( IKabs(((gconst29)*(((((r02)*(x2686)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2685))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((r01)*(sj9)*(x2684)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2686)))+(((IkReal(-1.00000000000000))*(r11)*(x2684)*(x2685))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst29)*(((((r02)*(x2686)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2685)))))), ((gconst29)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((r01)*(sj9)*(x2684)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2686)))+(((IkReal(-1.00000000000000))*(r11)*(x2684)*(x2685)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2687=IKsin(j13);
IkReal x2688=IKcos(j13);
IkReal x2689=((r11)*(sj14));
IkReal x2690=((IkReal(1.00000000000000))*(r02));
IkReal x2691=((r01)*(sj14));
IkReal x2692=((IkReal(1.00000000000000))*(sj12));
IkReal x2693=((cj14)*(r00));
IkReal x2694=((IkReal(1.00000000000000))*(r12));
IkReal x2695=((r21)*(sj14));
IkReal x2696=((cj14)*(r20));
IkReal x2697=((cj9)*(x2687));
IkReal x2698=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2699=((sj9)*(x2687));
IkReal x2700=((sj9)*(x2688));
IkReal x2701=((cj9)*(x2688));
IkReal x2702=((IkReal(1.00000000000000))*(x2687));
evalcond[0]=((((r22)*(x2688)))+(((x2687)*(x2696)))+(cj10)+(((IkReal(-1.00000000000000))*(x2695)*(x2702))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2702)))+(((IkReal(-1.00000000000000))*(x2688)*(x2695)))+(((IkReal(-1.00000000000000))*(sj10)*(x2692)))+(((x2688)*(x2696))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2691)*(x2699)))+(((x2689)*(x2697)))+(((x2693)*(x2699)))+(((IkReal(-1.00000000000000))*(x2697)*(x2698)))+(((IkReal(-1.00000000000000))*(x2694)*(x2701)))+(((r02)*(x2700))));
evalcond[3]=((((r12)*(x2697)))+(((x2693)*(x2700)))+(((IkReal(-1.00000000000000))*(x2691)*(x2700)))+(((x2689)*(x2701)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x2690)*(x2699)))+(((IkReal(-1.00000000000000))*(x2698)*(x2701))));
evalcond[4]=((((x2691)*(x2697)))+(((x2689)*(x2699)))+(((IkReal(-1.00000000000000))*(x2693)*(x2697)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x2698)*(x2699)))+(((IkReal(-1.00000000000000))*(x2690)*(x2701)))+(((IkReal(-1.00000000000000))*(x2694)*(x2700))));
evalcond[5]=((((r12)*(x2699)))+(((x2689)*(x2700)))+(((IkReal(-1.00000000000000))*(cj10)*(x2692)))+(((x2691)*(x2701)))+(((IkReal(-1.00000000000000))*(x2693)*(x2701)))+(((r02)*(x2697)))+(((IkReal(-1.00000000000000))*(x2698)*(x2700))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2703=((r21)*(sj14));
IkReal x2704=((sj10)*(sj12));
IkReal x2705=((cj14)*(r20));
if( IKabs(((gconst28)*(((((r22)*(x2704)))+(((cj10)*(x2705)))+(((IkReal(-1.00000000000000))*(cj10)*(x2703))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((x2703)*(x2704)))+(((IkReal(-1.00000000000000))*(x2704)*(x2705)))+(((cj10)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst28)*(((((r22)*(x2704)))+(((cj10)*(x2705)))+(((IkReal(-1.00000000000000))*(cj10)*(x2703)))))), ((gconst28)*(((((x2703)*(x2704)))+(((IkReal(-1.00000000000000))*(x2704)*(x2705)))+(((cj10)*(r22)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x2706=IKsin(j13);
IkReal x2707=IKcos(j13);
IkReal x2708=((r11)*(sj14));
IkReal x2709=((IkReal(1.00000000000000))*(r02));
IkReal x2710=((r01)*(sj14));
IkReal x2711=((IkReal(1.00000000000000))*(sj12));
IkReal x2712=((cj14)*(r00));
IkReal x2713=((IkReal(1.00000000000000))*(r12));
IkReal x2714=((r21)*(sj14));
IkReal x2715=((cj14)*(r20));
IkReal x2716=((cj9)*(x2706));
IkReal x2717=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2718=((sj9)*(x2706));
IkReal x2719=((sj9)*(x2707));
IkReal x2720=((cj9)*(x2707));
IkReal x2721=((IkReal(1.00000000000000))*(x2706));
evalcond[0]=((((r22)*(x2707)))+(((x2706)*(x2715)))+(cj10)+(((IkReal(-1.00000000000000))*(x2714)*(x2721))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x2711)))+(((x2707)*(x2715)))+(((IkReal(-1.00000000000000))*(r22)*(x2721)))+(((IkReal(-1.00000000000000))*(x2707)*(x2714))));
evalcond[2]=((((x2708)*(x2716)))+(((r02)*(x2719)))+(((x2712)*(x2718)))+(((IkReal(-1.00000000000000))*(x2710)*(x2718)))+(((IkReal(-1.00000000000000))*(x2713)*(x2720)))+(((IkReal(-1.00000000000000))*(x2716)*(x2717))));
evalcond[3]=((((r12)*(x2716)))+(((x2712)*(x2719)))+(((IkReal(-1.00000000000000))*(x2710)*(x2719)))+(((x2708)*(x2720)))+(((IkReal(-1.00000000000000))*(x2709)*(x2718)))+(((IkReal(-1.00000000000000))*(x2717)*(x2720)))+(((IkReal(-1.00000000000000))*(cj12))));
evalcond[4]=((((x2708)*(x2718)))+(((IkReal(-1.00000000000000))*(x2713)*(x2719)))+(((IkReal(-1.00000000000000))*(x2709)*(x2720)))+(((x2710)*(x2716)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x2717)*(x2718)))+(((IkReal(-1.00000000000000))*(x2712)*(x2716))));
evalcond[5]=((((r12)*(x2718)))+(((IkReal(-1.00000000000000))*(cj10)*(x2711)))+(((x2708)*(x2719)))+(((r02)*(x2716)))+(((IkReal(-1.00000000000000))*(x2712)*(x2720)))+(((IkReal(-1.00000000000000))*(x2717)*(x2719)))+(((x2710)*(x2720))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2722=((cj10)*(cj9));
IkReal x2723=((IkReal(1.00000000000000))*(sj14));
IkReal x2724=((cj10)*(sj9));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(r02)*(x2722)))+(((IkReal(-1.00000000000000))*(r12)*(x2724)))+(((r22)*(sj10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((cj14)*(r00)*(x2722)))+(((cj14)*(r10)*(x2724)))+(((IkReal(-1.00000000000000))*(r01)*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(r11)*(x2723)*(x2724)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(r02)*(x2722)))+(((IkReal(-1.00000000000000))*(r12)*(x2724)))+(((r22)*(sj10)))))), ((gconst27)*(((((cj14)*(r00)*(x2722)))+(((cj14)*(r10)*(x2724)))+(((IkReal(-1.00000000000000))*(r01)*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(r11)*(x2723)*(x2724)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x2725=IKsin(j13);
IkReal x2726=IKcos(j13);
IkReal x2727=((r11)*(sj14));
IkReal x2728=((r01)*(sj14));
IkReal x2729=((cj14)*(r00));
IkReal x2730=((cj9)*(x2725));
IkReal x2731=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2732=((sj9)*(x2725));
IkReal x2733=((sj9)*(x2726));
IkReal x2734=((IkReal(1.00000000000000))*(cj9)*(x2726));
evalcond[0]=((((r22)*(x2726)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2725)))+(cj10)+(((cj14)*(r20)*(x2725))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2730)*(x2731)))+(((r02)*(x2733)))+(((x2727)*(x2730)))+(((IkReal(-1.00000000000000))*(x2728)*(x2732)))+(((IkReal(-1.00000000000000))*(r12)*(x2734)))+(((x2729)*(x2732))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2729)*(x2730)))+(((IkReal(-1.00000000000000))*(x2731)*(x2732)))+(((x2728)*(x2730)))+(((IkReal(-1.00000000000000))*(sj10)))+(((x2727)*(x2732)))+(((IkReal(-1.00000000000000))*(r02)*(x2734)))+(((IkReal(-1.00000000000000))*(r12)*(x2733))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2735=((IkReal(0.0100000000000000))*(cj14));
IkReal x2736=((r10)*(sj9));
IkReal x2737=((cj9)*(sj14));
IkReal x2738=((r11)*(sj13));
IkReal x2739=((cj9)*(r00));
IkReal x2740=((IkReal(1.00000000000000))*(sj9));
IkReal x2741=((cj14)*(r11));
IkReal x2742=((r01)*(sj14));
IkReal x2743=((r21)*(sj14));
IkReal x2744=((IkReal(0.0100000000000000))*(r11));
IkReal x2745=((r00)*(sj9));
IkReal x2746=((IkReal(0.374290000000000))*(sj14));
IkReal x2747=((cj13)*(r02));
IkReal x2748=((IkReal(1.00000000000000))*(cj14));
IkReal x2749=((IkReal(1.00000000000000))*(cj9));
IkReal x2750=((cj13)*(r12));
IkReal x2751=((sj14)*(sj9));
IkReal x2752=((cj9)*(r10));
IkReal x2753=((cj14)*(sj13));
IkReal x2754=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2743)))+(((r20)*(x2753)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(0.0100000000000000))*(x2743)))+(pz)+(((r20)*(x2746)))+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x2735))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2736)))+(((IkReal(-1.00000000000000))*(x2740)*(x2741)))+(((IkReal(-1.00000000000000))*(r00)*(x2737)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2748))));
evalcond[4]=((((sj9)*(x2747)))+(((x2745)*(x2753)))+(((x2737)*(x2738)))+(((IkReal(-1.00000000000000))*(sj13)*(x2740)*(x2742)))+(((IkReal(-1.00000000000000))*(x2749)*(x2750)))+(((IkReal(-1.00000000000000))*(sj13)*(x2748)*(x2752))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2747)*(x2749)))+(((r01)*(sj13)*(x2737)))+(((x2738)*(x2751)))+(((IkReal(-1.00000000000000))*(x2740)*(x2750)))+(((IkReal(-1.00000000000000))*(sj13)*(x2739)*(x2748)))+(((IkReal(-1.00000000000000))*(sj13)*(x2736)*(x2748))));
evalcond[6]=((((cj13)*(r01)*(x2737)))+(((cj13)*(r11)*(x2751)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2739)*(x2748)))+(((IkReal(-1.00000000000000))*(cj13)*(x2736)*(x2748)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((sj9)*(x2754)))+(((IkReal(-1.00000000000000))*(py)*(x2749)))+(((x2745)*(x2746)))+(((IkReal(-1.00000000000000))*(x2735)*(x2745)))+(((px)*(sj9)))+(((IkReal(-0.374290000000000))*(r10)*(x2737)))+(((IkReal(-1.00000000000000))*(x2737)*(x2744)))+(((IkReal(-0.374290000000000))*(cj9)*(x2741)))+(((IkReal(0.0100000000000000))*(sj9)*(x2742)))+(((x2735)*(x2752))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2744)*(x2751)))+(((IkReal(-0.0100000000000000))*(r01)*(x2737)))+(((IkReal(-0.374290000000000))*(r00)*(x2737)))+(((IkReal(-1.00000000000000))*(py)*(x2740)))+(((x2735)*(x2736)))+(((x2735)*(x2739)))+(((IkReal(-1.00000000000000))*(x2736)*(x2746)))+(((IkReal(-0.374290000000000))*(sj9)*(x2741)))+(((IkReal(-1.00000000000000))*(cj9)*(x2754)))+(((IkReal(-1.00000000000000))*(px)*(x2749))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2755=IKsin(j12);
IkReal x2756=((sj14)*(sj9));
IkReal x2757=((IkReal(1.00000000000000))*(sj13));
IkReal x2758=((cj13)*(sj14));
IkReal x2759=((cj9)*(r11));
IkReal x2760=((IkReal(1.00000000000000))*(cj13));
IkReal x2761=((cj9)*(r10));
IkReal x2762=((cj14)*(sj9));
IkReal x2763=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2763))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2757)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x2758)))+(((IkReal(-1.00000000000000))*(x2755))));
evalcond[2]=((x2755)+(((IkReal(-1.00000000000000))*(cj14)*(x2759)))+(((r01)*(x2762)))+(((IkReal(-1.00000000000000))*(sj14)*(x2761)))+(((r00)*(x2756))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x2756)*(x2760)))+(((IkReal(-1.00000000000000))*(cj14)*(x2760)*(x2761)))+(((x2758)*(x2759)))+(((cj13)*(r00)*(x2762)))+(((IkReal(-1.00000000000000))*(x2763)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2757)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2764=((IkReal(0.0100000000000000))*(cj14));
IkReal x2765=((r10)*(sj9));
IkReal x2766=((cj9)*(sj14));
IkReal x2767=((r11)*(sj13));
IkReal x2768=((cj9)*(r00));
IkReal x2769=((IkReal(1.00000000000000))*(sj9));
IkReal x2770=((cj14)*(r11));
IkReal x2771=((r01)*(sj14));
IkReal x2772=((r21)*(sj14));
IkReal x2773=((IkReal(0.0100000000000000))*(r11));
IkReal x2774=((r00)*(sj9));
IkReal x2775=((IkReal(0.374290000000000))*(sj14));
IkReal x2776=((cj13)*(r02));
IkReal x2777=((IkReal(1.00000000000000))*(cj14));
IkReal x2778=((IkReal(1.00000000000000))*(cj9));
IkReal x2779=((cj13)*(r12));
IkReal x2780=((sj14)*(sj9));
IkReal x2781=((cj9)*(r10));
IkReal x2782=((cj14)*(sj13));
IkReal x2783=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2772)))+(((cj13)*(r22)))+(((r20)*(x2782))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(0.0100000000000000))*(x2772)))+(((r20)*(x2775)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x2764))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2769)*(x2770)))+(((IkReal(-1.00000000000000))*(r00)*(x2766)))+(((IkReal(-1.00000000000000))*(sj14)*(x2765)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2777))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x2769)*(x2771)))+(((IkReal(-1.00000000000000))*(sj13)*(x2777)*(x2781)))+(((sj9)*(x2776)))+(((x2774)*(x2782)))+(((IkReal(-1.00000000000000))*(x2778)*(x2779)))+(((x2766)*(x2767))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(sj13)*(x2766)))+(((IkReal(-1.00000000000000))*(x2776)*(x2778)))+(((IkReal(-1.00000000000000))*(x2769)*(x2779)))+(((x2767)*(x2780)))+(((IkReal(-1.00000000000000))*(sj13)*(x2765)*(x2777)))+(((IkReal(-1.00000000000000))*(sj13)*(x2768)*(x2777))));
evalcond[6]=((((cj13)*(r11)*(x2780)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x2766)))+(((IkReal(-1.00000000000000))*(cj13)*(x2765)*(x2777)))+(((IkReal(-1.00000000000000))*(cj13)*(x2768)*(x2777)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((sj9)*(x2783)))+(((x2774)*(x2775)))+(((IkReal(-1.00000000000000))*(x2766)*(x2773)))+(((x2764)*(x2781)))+(((IkReal(-1.00000000000000))*(py)*(x2778)))+(((IkReal(-0.374290000000000))*(r10)*(x2766)))+(((IkReal(-0.374290000000000))*(cj9)*(x2770)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2764)*(x2774)))+(((IkReal(0.0100000000000000))*(sj9)*(x2771))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(r00)*(x2766)))+(((IkReal(-1.00000000000000))*(py)*(x2769)))+(((IkReal(-1.00000000000000))*(px)*(x2778)))+(((IkReal(-1.00000000000000))*(x2773)*(x2780)))+(((IkReal(-0.374290000000000))*(sj9)*(x2770)))+(((x2764)*(x2768)))+(((x2764)*(x2765)))+(((IkReal(-0.0100000000000000))*(r01)*(x2766)))+(((IkReal(-1.00000000000000))*(x2765)*(x2775)))+(((IkReal(-1.00000000000000))*(cj9)*(x2783))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2784=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2784)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x2784)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2784)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x2784)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2784)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x2784)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2785=IKsin(j12);
IkReal x2786=IKcos(j12);
IkReal x2787=((sj14)*(sj9));
IkReal x2788=((IkReal(1.00000000000000))*(sj13));
IkReal x2789=((cj13)*(sj14));
IkReal x2790=((cj9)*(r11));
IkReal x2791=((IkReal(1.00000000000000))*(cj13));
IkReal x2792=((cj9)*(r10));
IkReal x2793=((cj14)*(sj9));
evalcond[0]=((x2786)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((x2785)+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x2789)))+(((IkReal(-1.00000000000000))*(r22)*(x2788))));
evalcond[2]=((x2785)+(((IkReal(-1.00000000000000))*(sj14)*(x2792)))+(((r01)*(x2793)))+(((r00)*(x2787)))+(((IkReal(-1.00000000000000))*(cj14)*(x2790))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x2791)*(x2792)))+(((x2789)*(x2790)))+(((IkReal(-1.00000000000000))*(x2786)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2788)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x2787)*(x2791)))+(((cj13)*(r00)*(x2793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2794=((IkReal(0.0100000000000000))*(cj14));
IkReal x2795=((r10)*(sj9));
IkReal x2796=((cj9)*(r11));
IkReal x2797=((sj13)*(sj14));
IkReal x2798=((cj14)*(r21));
IkReal x2799=((cj9)*(r00));
IkReal x2800=((IkReal(0.374290000000000))*(cj14));
IkReal x2801=((cj9)*(r01));
IkReal x2802=((r01)*(sj9));
IkReal x2803=((IkReal(0.0100000000000000))*(sj14));
IkReal x2804=((IkReal(1.00000000000000))*(sj13));
IkReal x2805=((r00)*(sj9));
IkReal x2806=((IkReal(0.374290000000000))*(sj14));
IkReal x2807=((cj13)*(sj9));
IkReal x2808=((IkReal(1.00000000000000))*(cj13));
IkReal x2809=((IkReal(1.00000000000000))*(py));
IkReal x2810=((r11)*(sj9));
IkReal x2811=((cj9)*(r10));
IkReal x2812=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x2798)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x2797)))+(((r20)*(x2812)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x2794)))+(((r20)*(x2806)))+(((IkReal(0.374290000000000))*(x2798)))+(pz)+(((r21)*(x2803))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x2804)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2808))));
evalcond[5]=((((r02)*(x2807)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2808)))+(((IkReal(-1.00000000000000))*(x2797)*(x2802)))+(((IkReal(-1.00000000000000))*(cj14)*(x2804)*(x2811)))+(((x2796)*(x2797)))+(((x2805)*(x2812))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2808)))+(((IkReal(-1.00000000000000))*(cj14)*(x2795)*(x2804)))+(((IkReal(-1.00000000000000))*(r12)*(x2807)))+(((x2797)*(x2801)))+(((x2797)*(x2810)))+(((IkReal(-1.00000000000000))*(cj14)*(x2799)*(x2804))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x2794)*(x2811)))+(((IkReal(-1.00000000000000))*(cj9)*(x2809)))+(((x2805)*(x2806)))+(((IkReal(-1.00000000000000))*(x2806)*(x2811)))+(((x2802)*(x2803)))+(((IkReal(-1.00000000000000))*(x2796)*(x2803)))+(((IkReal(-1.00000000000000))*(x2796)*(x2800)))+(((IkReal(-1.00000000000000))*(x2794)*(x2805)))+(((px)*(sj9)))+(((x2800)*(x2802))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x2800)*(x2810)))+(((x2794)*(x2795)))+(((x2794)*(x2799)))+(((IkReal(-1.00000000000000))*(x2800)*(x2801)))+(((IkReal(-1.00000000000000))*(x2799)*(x2806)))+(((IkReal(-1.00000000000000))*(x2795)*(x2806)))+(((IkReal(-1.00000000000000))*(sj9)*(x2809)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x2801)*(x2803)))+(((IkReal(-1.00000000000000))*(x2803)*(x2810))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2813=((cj14)*(r11));
IkReal x2814=((IkReal(1.00000000000000))*(sj9));
IkReal x2815=((cj14)*(r01));
IkReal x2816=((r00)*(sj14));
IkReal x2817=((r10)*(sj14));
IkReal x2818=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x2817)))+(((cj9)*(x2813)))+(((IkReal(-1.00000000000000))*(x2814)*(x2815)))+(((IkReal(-1.00000000000000))*(x2814)*(x2816))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2813)*(x2814)))+(((IkReal(-1.00000000000000))*(x2815)*(x2818)))+(((IkReal(-1.00000000000000))*(x2814)*(x2817)))+(((IkReal(-1.00000000000000))*(x2816)*(x2818))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x2817)))+(((cj9)*(x2813)))+(((IkReal(-1.00000000000000))*(x2814)*(x2815)))+(((IkReal(-1.00000000000000))*(x2814)*(x2816)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2813)*(x2814)))+(((IkReal(-1.00000000000000))*(x2815)*(x2818)))+(((IkReal(-1.00000000000000))*(x2814)*(x2817)))+(((IkReal(-1.00000000000000))*(x2816)*(x2818)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x2817)))+(((cj9)*(x2813)))+(((IkReal(-1.00000000000000))*(x2814)*(x2815)))+(((IkReal(-1.00000000000000))*(x2814)*(x2816)))), ((((IkReal(-1.00000000000000))*(x2813)*(x2814)))+(((IkReal(-1.00000000000000))*(x2815)*(x2818)))+(((IkReal(-1.00000000000000))*(x2814)*(x2817)))+(((IkReal(-1.00000000000000))*(x2816)*(x2818)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2819=IKsin(j12);
IkReal x2820=((cj13)*(r10));
IkReal x2821=((cj9)*(sj14));
IkReal x2822=((cj13)*(r01));
IkReal x2823=((IkReal(1.00000000000000))*(r10));
IkReal x2824=((cj14)*(r01));
IkReal x2825=((cj9)*(sj13));
IkReal x2826=((IkReal(1.00000000000000))*(cj9));
IkReal x2827=((sj14)*(sj9));
IkReal x2828=((sj13)*(sj9));
IkReal x2829=((cj13)*(r11));
IkReal x2830=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x2831=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2832=((cj13)*(cj14)*(r00));
evalcond[0]=((((sj9)*(x2824)))+(((IkReal(-1.00000000000000))*(x2821)*(x2823)))+(((r00)*(x2827)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2826)))+(x2819));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x2821)))+(((IkReal(-1.00000000000000))*(x2830)))+(((IkReal(-1.00000000000000))*(x2824)*(x2826)))+(((IkReal(-1.00000000000000))*(r11)*(x2831)))+(((IkReal(-1.00000000000000))*(x2823)*(x2827))));
evalcond[2]=((((x2821)*(x2829)))+(((IkReal(-1.00000000000000))*(x2830)))+(((IkReal(-1.00000000000000))*(x2822)*(x2827)))+(((IkReal(-1.00000000000000))*(r02)*(x2828)))+(((sj9)*(x2832)))+(((IkReal(-1.00000000000000))*(cj14)*(x2820)*(x2826)))+(((r12)*(x2825))));
evalcond[3]=((((x2821)*(x2822)))+(((r02)*(x2825)))+(((IkReal(-1.00000000000000))*(x2819)))+(((IkReal(-1.00000000000000))*(x2826)*(x2832)))+(((IkReal(-1.00000000000000))*(x2820)*(x2831)))+(((x2827)*(x2829)))+(((r12)*(x2828))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2833=((IkReal(0.0100000000000000))*(cj14));
IkReal x2834=((r10)*(sj9));
IkReal x2835=((cj9)*(r11));
IkReal x2836=((sj13)*(sj14));
IkReal x2837=((cj14)*(r21));
IkReal x2838=((cj9)*(r00));
IkReal x2839=((IkReal(0.374290000000000))*(cj14));
IkReal x2840=((cj9)*(r01));
IkReal x2841=((r01)*(sj9));
IkReal x2842=((IkReal(0.0100000000000000))*(sj14));
IkReal x2843=((IkReal(1.00000000000000))*(sj13));
IkReal x2844=((r00)*(sj9));
IkReal x2845=((IkReal(0.374290000000000))*(sj14));
IkReal x2846=((cj13)*(sj9));
IkReal x2847=((IkReal(1.00000000000000))*(cj13));
IkReal x2848=((IkReal(1.00000000000000))*(py));
IkReal x2849=((r11)*(sj9));
IkReal x2850=((cj9)*(r10));
IkReal x2851=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x2837));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x2851)))+(((IkReal(-1.00000000000000))*(r21)*(x2836)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x2842)))+(((r20)*(x2845)))+(((IkReal(-1.00000000000000))*(r20)*(x2833)))+(pz)+(((IkReal(0.374290000000000))*(x2837))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2847)))+(((IkReal(-1.00000000000000))*(r22)*(x2843))));
evalcond[5]=((((x2844)*(x2851)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x2847)))+(((IkReal(-1.00000000000000))*(cj14)*(x2843)*(x2850)))+(((x2835)*(x2836)))+(((IkReal(-1.00000000000000))*(x2836)*(x2841)))+(((r02)*(x2846))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x2838)*(x2843)))+(((IkReal(-1.00000000000000))*(cj14)*(x2834)*(x2843)))+(((x2836)*(x2840)))+(((x2836)*(x2849)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x2847)))+(((IkReal(-1.00000000000000))*(r12)*(x2846))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x2848)))+(((x2844)*(x2845)))+(((IkReal(-1.00000000000000))*(x2845)*(x2850)))+(((IkReal(-1.00000000000000))*(x2835)*(x2842)))+(((x2833)*(x2850)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x2835)*(x2839)))+(((IkReal(-1.00000000000000))*(x2833)*(x2844)))+(((x2841)*(x2842)))+(((x2839)*(x2841))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x2842)*(x2849)))+(((IkReal(-1.00000000000000))*(x2840)*(x2842)))+(((IkReal(-1.00000000000000))*(x2839)*(x2840)))+(((IkReal(-1.00000000000000))*(x2839)*(x2849)))+(((IkReal(-1.00000000000000))*(x2838)*(x2845)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((x2833)*(x2834)))+(((x2833)*(x2838)))+(((IkReal(-1.00000000000000))*(sj9)*(x2848)))+(((IkReal(-1.00000000000000))*(x2834)*(x2845))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2852=((cj14)*(cj9));
IkReal x2853=((IkReal(1.00000000000000))*(sj9));
IkReal x2854=((r00)*(sj14));
IkReal x2855=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2853)))+(((r11)*(x2852)))+(((cj9)*(x2855)))+(((IkReal(-1.00000000000000))*(x2853)*(x2854))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((sj9)*(x2855)))+(((r01)*(x2852)))+(((cj9)*(x2854))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2853)))+(((r11)*(x2852)))+(((cj9)*(x2855)))+(((IkReal(-1.00000000000000))*(x2853)*(x2854)))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((sj9)*(x2855)))+(((r01)*(x2852)))+(((cj9)*(x2854)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2853)))+(((r11)*(x2852)))+(((cj9)*(x2855)))+(((IkReal(-1.00000000000000))*(x2853)*(x2854)))), ((((cj14)*(r11)*(sj9)))+(((sj9)*(x2855)))+(((r01)*(x2852)))+(((cj9)*(x2854)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2856=IKcos(j12);
IkReal x2857=IKsin(j12);
IkReal x2858=((r12)*(sj13));
IkReal x2859=((sj14)*(sj9));
IkReal x2860=((cj13)*(r11));
IkReal x2861=((cj9)*(sj14));
IkReal x2862=((IkReal(1.00000000000000))*(cj14));
IkReal x2863=((cj13)*(cj9));
IkReal x2864=((cj13)*(r01));
IkReal x2865=((cj14)*(sj9));
IkReal x2866=((IkReal(1.00000000000000))*(r10));
IkReal x2867=((r02)*(sj13));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2861)*(x2866)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x2862)))+(((r00)*(x2859)))+(x2857)+(((r01)*(x2865))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2862)))+(((IkReal(-1.00000000000000))*(r00)*(x2861)))+(((IkReal(-1.00000000000000))*(x2859)*(x2866)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x2862)))+(x2856));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x2867)))+(((cj13)*(r00)*(x2865)))+(((IkReal(-1.00000000000000))*(x2859)*(x2864)))+(((IkReal(-1.00000000000000))*(r10)*(x2862)*(x2863)))+(((IkReal(-1.00000000000000))*(x2856)))+(((cj9)*(x2858)))+(((x2860)*(x2861))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x2862)))+(((cj9)*(x2867)))+(((x2861)*(x2864)))+(((sj9)*(x2858)))+(((x2859)*(x2860)))+(((IkReal(-1.00000000000000))*(r00)*(x2862)*(x2863)))+(x2857));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2868=((cj14)*(r11));
IkReal x2869=((IkReal(1.00000000000000))*(sj9));
IkReal x2870=((cj14)*(r01));
IkReal x2871=((r00)*(sj14));
IkReal x2872=((r10)*(sj14));
IkReal x2873=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x2868)))+(((IkReal(-1.00000000000000))*(x2869)*(x2871)))+(((IkReal(-1.00000000000000))*(x2869)*(x2870)))+(((cj9)*(x2872))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2871)*(x2873)))+(((IkReal(-1.00000000000000))*(x2869)*(x2872)))+(((IkReal(-1.00000000000000))*(x2870)*(x2873)))+(((IkReal(-1.00000000000000))*(x2868)*(x2869))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x2868)))+(((IkReal(-1.00000000000000))*(x2869)*(x2871)))+(((IkReal(-1.00000000000000))*(x2869)*(x2870)))+(((cj9)*(x2872)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2871)*(x2873)))+(((IkReal(-1.00000000000000))*(x2869)*(x2872)))+(((IkReal(-1.00000000000000))*(x2870)*(x2873)))+(((IkReal(-1.00000000000000))*(x2868)*(x2869)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x2868)))+(((IkReal(-1.00000000000000))*(x2869)*(x2871)))+(((IkReal(-1.00000000000000))*(x2869)*(x2870)))+(((cj9)*(x2872)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2871)*(x2873)))+(((IkReal(-1.00000000000000))*(x2869)*(x2872)))+(((IkReal(-1.00000000000000))*(x2870)*(x2873)))+(((IkReal(-1.00000000000000))*(x2868)*(x2869)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2874=IKsin(j12);
IkReal x2875=IKcos(j12);
IkReal x2876=((IkReal(1.00000000000000))*(sj13));
IkReal x2877=((cj13)*(r10));
IkReal x2878=((cj9)*(sj14));
IkReal x2879=((cj13)*(r01));
IkReal x2880=((IkReal(1.00000000000000))*(r10));
IkReal x2881=((r12)*(sj13));
IkReal x2882=((cj13)*(sj14));
IkReal x2883=((cj14)*(r01));
IkReal x2884=((cj13)*(cj14));
IkReal x2885=((IkReal(1.00000000000000))*(cj9));
IkReal x2886=((sj14)*(sj9));
IkReal x2887=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2888=((IkReal(1.00000000000000))*(x2875));
IkReal x2889=((IkReal(1.00000000000000))*(x2874));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2888))));
evalcond[1]=((((r20)*(x2884)))+(((IkReal(-1.00000000000000))*(r22)*(x2876)))+(((IkReal(-1.00000000000000))*(r21)*(x2882)))+(((IkReal(-1.00000000000000))*(sj10)*(x2889))));
evalcond[2]=((((sj9)*(x2883)))+(((r00)*(x2886)))+(((IkReal(-1.00000000000000))*(x2878)*(x2880)))+(x2874)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2885))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2887)))+(((IkReal(-1.00000000000000))*(x2883)*(x2885)))+(((IkReal(-1.00000000000000))*(cj10)*(x2888)))+(((IkReal(-1.00000000000000))*(r00)*(x2878)))+(((IkReal(-1.00000000000000))*(x2880)*(x2886))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2876)))+(((IkReal(-1.00000000000000))*(x2879)*(x2886)))+(((cj13)*(r11)*(x2878)))+(((cj9)*(x2881)))+(((IkReal(-1.00000000000000))*(cj14)*(x2877)*(x2885)))+(((IkReal(-1.00000000000000))*(x2888)))+(((r00)*(sj9)*(x2884))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj10)*(x2889)))+(((sj9)*(x2881)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x2882)))+(((IkReal(-1.00000000000000))*(x2877)*(x2887)))+(((IkReal(-1.00000000000000))*(r00)*(x2884)*(x2885)))+(((x2878)*(x2879))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2890=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2890)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2890))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2890)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2890)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x2890)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x2890)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2891=IKsin(j12);
IkReal x2892=IKcos(j12);
IkReal x2893=((IkReal(1.00000000000000))*(sj13));
IkReal x2894=((cj13)*(r10));
IkReal x2895=((cj9)*(sj14));
IkReal x2896=((cj13)*(r01));
IkReal x2897=((IkReal(1.00000000000000))*(r10));
IkReal x2898=((r12)*(sj13));
IkReal x2899=((cj13)*(sj14));
IkReal x2900=((cj14)*(r01));
IkReal x2901=((cj13)*(cj14));
IkReal x2902=((IkReal(1.00000000000000))*(cj9));
IkReal x2903=((sj14)*(sj9));
IkReal x2904=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2905=((IkReal(1.00000000000000))*(x2892));
IkReal x2906=((IkReal(1.00000000000000))*(x2891));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x2905))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x2893)))+(((r20)*(x2901)))+(((IkReal(-1.00000000000000))*(r21)*(x2899)))+(((IkReal(-1.00000000000000))*(sj10)*(x2906))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2895)*(x2897)))+(((r00)*(x2903)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2902)))+(((sj9)*(x2900)))+(x2891));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x2905)))+(((IkReal(-1.00000000000000))*(x2900)*(x2902)))+(((IkReal(-1.00000000000000))*(x2897)*(x2903)))+(((IkReal(-1.00000000000000))*(r00)*(x2895)))+(((IkReal(-1.00000000000000))*(r11)*(x2904))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x2894)*(x2902)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2893)))+(((IkReal(-1.00000000000000))*(x2896)*(x2903)))+(((IkReal(-1.00000000000000))*(x2905)))+(((cj9)*(x2898)))+(((cj13)*(r11)*(x2895)))+(((r00)*(sj9)*(x2901))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2901)*(x2902)))+(((IkReal(-1.00000000000000))*(cj10)*(x2906)))+(((x2895)*(x2896)))+(((r11)*(sj9)*(x2899)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x2894)*(x2904)))+(((sj9)*(x2898))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x2907=IKsin(j12);
IkReal x2908=IKcos(j12);
IkReal x2909=((IkReal(1.00000000000000))*(sj13));
IkReal x2910=((cj13)*(r10));
IkReal x2911=((cj9)*(sj14));
IkReal x2912=((cj13)*(r01));
IkReal x2913=((IkReal(1.00000000000000))*(r10));
IkReal x2914=((r12)*(sj13));
IkReal x2915=((cj13)*(sj14));
IkReal x2916=((cj14)*(r01));
IkReal x2917=((cj13)*(cj14));
IkReal x2918=((IkReal(1.00000000000000))*(cj9));
IkReal x2919=((sj14)*(sj9));
IkReal x2920=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x2921=((IkReal(1.00000000000000))*(x2908));
IkReal x2922=((IkReal(1.00000000000000))*(x2907));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x2921)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x2922)))+(((r20)*(x2917)))+(((IkReal(-1.00000000000000))*(r21)*(x2915)))+(((IkReal(-1.00000000000000))*(r22)*(x2909))));
evalcond[2]=((((r00)*(x2919)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x2918)))+(((IkReal(-1.00000000000000))*(x2911)*(x2913)))+(x2907)+(((sj9)*(x2916))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x2921)))+(((IkReal(-1.00000000000000))*(r00)*(x2911)))+(((IkReal(-1.00000000000000))*(x2913)*(x2919)))+(((IkReal(-1.00000000000000))*(r11)*(x2920)))+(((IkReal(-1.00000000000000))*(x2916)*(x2918))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x2910)*(x2918)))+(((IkReal(-1.00000000000000))*(x2921)))+(((r00)*(sj9)*(x2917)))+(((IkReal(-1.00000000000000))*(x2912)*(x2919)))+(((cj9)*(x2914)))+(((cj13)*(r11)*(x2911)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2909))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj10)*(x2922)))+(((IkReal(-1.00000000000000))*(r00)*(x2917)*(x2918)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x2915)))+(((x2911)*(x2912)))+(((IkReal(-1.00000000000000))*(x2910)*(x2920)))+(((sj9)*(x2914))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x2923=((cj10)*(sj14));
IkReal x2924=((IkReal(1.00000000000000))*(cj9));
IkReal x2925=((cj10)*(sj9));
if( IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2924)))+(((r02)*(x2925))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2925)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(x2923)*(x2924)))+(((r01)*(sj9)*(x2923))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst26)*(((((IkReal(-1.00000000000000))*(cj10)*(r12)*(x2924)))+(((r02)*(x2925)))))), ((gconst26)*(((((IkReal(-1.00000000000000))*(cj14)*(r00)*(x2925)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(x2923)*(x2924)))+(((r01)*(sj9)*(x2923)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x2926=IKsin(j13);
IkReal x2927=IKcos(j13);
IkReal x2928=((r11)*(sj14));
IkReal x2929=((r01)*(sj14));
IkReal x2930=((cj14)*(r00));
IkReal x2931=((cj9)*(x2926));
IkReal x2932=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x2933=((sj9)*(x2926));
IkReal x2934=((sj9)*(x2927));
IkReal x2935=((IkReal(1.00000000000000))*(cj9)*(x2927));
evalcond[0]=((((r22)*(x2927)))+(((cj14)*(r20)*(x2926)))+(cj10)+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x2926))));
evalcond[1]=((((r02)*(x2934)))+(((IkReal(-1.00000000000000))*(x2931)*(x2932)))+(((x2928)*(x2931)))+(((x2930)*(x2933)))+(((IkReal(-1.00000000000000))*(r12)*(x2935)))+(((IkReal(-1.00000000000000))*(x2929)*(x2933))));
evalcond[2]=((((x2929)*(x2931)))+(((x2928)*(x2933)))+(((IkReal(-1.00000000000000))*(r12)*(x2934)))+(((IkReal(-1.00000000000000))*(x2932)*(x2933)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r02)*(x2935)))+(((IkReal(-1.00000000000000))*(x2930)*(x2931))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2936=((IkReal(0.0100000000000000))*(cj14));
IkReal x2937=((r10)*(sj9));
IkReal x2938=((cj9)*(sj14));
IkReal x2939=((r11)*(sj13));
IkReal x2940=((cj9)*(r00));
IkReal x2941=((IkReal(1.00000000000000))*(sj9));
IkReal x2942=((cj14)*(r11));
IkReal x2943=((r01)*(sj14));
IkReal x2944=((r21)*(sj14));
IkReal x2945=((IkReal(0.0100000000000000))*(r11));
IkReal x2946=((r00)*(sj9));
IkReal x2947=((IkReal(0.374290000000000))*(sj14));
IkReal x2948=((cj13)*(r02));
IkReal x2949=((IkReal(1.00000000000000))*(cj14));
IkReal x2950=((IkReal(1.00000000000000))*(cj9));
IkReal x2951=((cj13)*(r12));
IkReal x2952=((sj14)*(sj9));
IkReal x2953=((cj9)*(r10));
IkReal x2954=((cj14)*(sj13));
IkReal x2955=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2944)))+(((r20)*(x2954)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x2936)))+(((IkReal(0.0100000000000000))*(x2944)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((r20)*(x2947))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x2938)))+(((IkReal(-1.00000000000000))*(sj14)*(x2937)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2949)))+(((IkReal(-1.00000000000000))*(x2941)*(x2942))));
evalcond[4]=((((x2946)*(x2954)))+(((sj9)*(x2948)))+(((x2938)*(x2939)))+(((IkReal(-1.00000000000000))*(sj13)*(x2949)*(x2953)))+(((IkReal(-1.00000000000000))*(sj13)*(x2941)*(x2943)))+(((IkReal(-1.00000000000000))*(x2950)*(x2951))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2948)*(x2950)))+(((x2939)*(x2952)))+(((IkReal(-1.00000000000000))*(sj13)*(x2940)*(x2949)))+(((r01)*(sj13)*(x2938)))+(((IkReal(-1.00000000000000))*(x2941)*(x2951)))+(((IkReal(-1.00000000000000))*(sj13)*(x2937)*(x2949))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x2937)*(x2949)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2940)*(x2949)))+(((r12)*(sj13)*(sj9)))+(((cj13)*(r11)*(x2952)))+(((cj13)*(r01)*(x2938))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x2946)*(x2947)))+(((IkReal(-1.00000000000000))*(x2936)*(x2946)))+(((IkReal(-0.374290000000000))*(r10)*(x2938)))+(((x2936)*(x2953)))+(((IkReal(0.0100000000000000))*(sj9)*(x2943)))+(((sj9)*(x2955)))+(((IkReal(-1.00000000000000))*(py)*(x2950)))+(((px)*(sj9)))+(((IkReal(-0.374290000000000))*(cj9)*(x2942)))+(((IkReal(-1.00000000000000))*(x2938)*(x2945))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(r00)*(x2938)))+(((IkReal(-0.374290000000000))*(sj9)*(x2942)))+(((IkReal(-1.00000000000000))*(px)*(x2950)))+(((x2936)*(x2940)))+(((x2936)*(x2937)))+(((IkReal(-1.00000000000000))*(cj9)*(x2955)))+(((IkReal(-0.0100000000000000))*(r01)*(x2938)))+(((IkReal(-1.00000000000000))*(py)*(x2941)))+(((IkReal(-1.00000000000000))*(x2945)*(x2952)))+(((IkReal(-1.00000000000000))*(x2937)*(x2947))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2956=IKsin(j12);
IkReal x2957=((sj14)*(sj9));
IkReal x2958=((IkReal(1.00000000000000))*(sj13));
IkReal x2959=((cj13)*(sj14));
IkReal x2960=((cj9)*(r11));
IkReal x2961=((IkReal(1.00000000000000))*(cj13));
IkReal x2962=((cj9)*(r10));
IkReal x2963=((cj14)*(sj9));
IkReal x2964=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x2964))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2956)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x2958)))+(((IkReal(-1.00000000000000))*(r21)*(x2959))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x2962)))+(((IkReal(-1.00000000000000))*(cj14)*(x2960)))+(((r00)*(x2957)))+(((r01)*(x2963)))+(x2956));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2964)))+(((x2959)*(x2960)))+(((IkReal(-1.00000000000000))*(cj14)*(x2961)*(x2962)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2958)))+(((IkReal(-1.00000000000000))*(r01)*(x2957)*(x2961)))+(((cj13)*(r00)*(x2963))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2965=((IkReal(0.0100000000000000))*(cj14));
IkReal x2966=((r10)*(sj9));
IkReal x2967=((cj9)*(sj14));
IkReal x2968=((r11)*(sj13));
IkReal x2969=((cj9)*(r00));
IkReal x2970=((IkReal(1.00000000000000))*(sj9));
IkReal x2971=((cj14)*(r11));
IkReal x2972=((r01)*(sj14));
IkReal x2973=((r21)*(sj14));
IkReal x2974=((IkReal(0.0100000000000000))*(r11));
IkReal x2975=((r00)*(sj9));
IkReal x2976=((IkReal(0.374290000000000))*(sj14));
IkReal x2977=((cj13)*(r02));
IkReal x2978=((IkReal(1.00000000000000))*(cj14));
IkReal x2979=((IkReal(1.00000000000000))*(cj9));
IkReal x2980=((cj13)*(r12));
IkReal x2981=((sj14)*(sj9));
IkReal x2982=((cj9)*(r10));
IkReal x2983=((cj14)*(sj13));
IkReal x2984=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x2973)))+(((r20)*(x2983)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x2965)))+(((IkReal(0.0100000000000000))*(x2973)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((r20)*(x2976))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x2966)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x2978)))+(((IkReal(-1.00000000000000))*(r00)*(x2967)))+(((IkReal(-1.00000000000000))*(x2970)*(x2971))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2979)*(x2980)))+(((sj9)*(x2977)))+(((IkReal(-1.00000000000000))*(sj13)*(x2970)*(x2972)))+(((x2975)*(x2983)))+(((x2967)*(x2968)))+(((IkReal(-1.00000000000000))*(sj13)*(x2978)*(x2982))));
evalcond[5]=((IkReal(1.00000000000000))+(((x2968)*(x2981)))+(((IkReal(-1.00000000000000))*(x2977)*(x2979)))+(((IkReal(-1.00000000000000))*(sj13)*(x2969)*(x2978)))+(((IkReal(-1.00000000000000))*(x2970)*(x2980)))+(((IkReal(-1.00000000000000))*(sj13)*(x2966)*(x2978)))+(((r01)*(sj13)*(x2967))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x2966)*(x2978)))+(((IkReal(-1.00000000000000))*(cj13)*(x2969)*(x2978)))+(((cj13)*(r01)*(x2967)))+(((cj13)*(r11)*(x2981)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((sj9)*(x2984)))+(((IkReal(0.0100000000000000))*(sj9)*(x2972)))+(((IkReal(-1.00000000000000))*(x2965)*(x2975)))+(((IkReal(-0.374290000000000))*(r10)*(x2967)))+(((x2975)*(x2976)))+(((x2965)*(x2982)))+(((IkReal(-1.00000000000000))*(x2967)*(x2974)))+(((px)*(sj9)))+(((IkReal(-0.374290000000000))*(cj9)*(x2971)))+(((IkReal(-1.00000000000000))*(py)*(x2979))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x2965)*(x2966)))+(((x2965)*(x2969)))+(((IkReal(-0.374290000000000))*(sj9)*(x2971)))+(((IkReal(-1.00000000000000))*(x2974)*(x2981)))+(((IkReal(-0.0100000000000000))*(r01)*(x2967)))+(((IkReal(-0.374290000000000))*(r00)*(x2967)))+(((IkReal(-1.00000000000000))*(cj9)*(x2984)))+(((IkReal(-1.00000000000000))*(py)*(x2970)))+(((IkReal(-1.00000000000000))*(x2966)*(x2976)))+(((IkReal(-1.00000000000000))*(px)*(x2979))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x2985=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2985))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x2985)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2985)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x2985)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x2985)))), ((((IkReal(-1.00000000000000))*(r21)*(x2985)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x2986=IKsin(j12);
IkReal x2987=IKcos(j12);
IkReal x2988=((sj14)*(sj9));
IkReal x2989=((IkReal(1.00000000000000))*(sj13));
IkReal x2990=((cj13)*(sj14));
IkReal x2991=((cj9)*(r11));
IkReal x2992=((IkReal(1.00000000000000))*(cj13));
IkReal x2993=((cj9)*(r10));
IkReal x2994=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x2987));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x2990)))+(((IkReal(-1.00000000000000))*(r22)*(x2989)))+(x2986));
evalcond[2]=((((r01)*(x2994)))+(((r00)*(x2988)))+(((IkReal(-1.00000000000000))*(cj14)*(x2991)))+(((IkReal(-1.00000000000000))*(sj14)*(x2993)))+(x2986));
evalcond[3]=((((x2990)*(x2991)))+(((IkReal(-1.00000000000000))*(r01)*(x2988)*(x2992)))+(((IkReal(-1.00000000000000))*(x2987)))+(((cj13)*(r00)*(x2994)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x2989)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(x2992)*(x2993))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2995=((IkReal(0.0100000000000000))*(cj14));
IkReal x2996=((r10)*(sj9));
IkReal x2997=((cj9)*(r11));
IkReal x2998=((sj13)*(sj14));
IkReal x2999=((cj14)*(r21));
IkReal x3000=((cj9)*(r00));
IkReal x3001=((IkReal(0.374290000000000))*(cj14));
IkReal x3002=((cj9)*(r01));
IkReal x3003=((r01)*(sj9));
IkReal x3004=((IkReal(0.0100000000000000))*(sj14));
IkReal x3005=((IkReal(1.00000000000000))*(sj13));
IkReal x3006=((r00)*(sj9));
IkReal x3007=((IkReal(0.374290000000000))*(sj14));
IkReal x3008=((cj13)*(sj9));
IkReal x3009=((IkReal(1.00000000000000))*(cj13));
IkReal x3010=((IkReal(1.00000000000000))*(py));
IkReal x3011=((r11)*(sj9));
IkReal x3012=((cj9)*(r10));
IkReal x3013=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x2999));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x2998)))+(((r20)*(x3013)))+(((cj13)*(r22))));
evalcond[3]=((pz)+(((r20)*(x3007)))+(((r21)*(x3004)))+(((IkReal(-1.00000000000000))*(r20)*(x2995)))+(((IkReal(0.374290000000000))*(x2999))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x3005)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3009))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2998)*(x3003)))+(((x2997)*(x2998)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x3009)))+(((x3006)*(x3013)))+(((IkReal(-1.00000000000000))*(cj14)*(x3005)*(x3012)))+(((r02)*(x3008))));
evalcond[6]=((((x2998)*(x3011)))+(((IkReal(-1.00000000000000))*(cj14)*(x2996)*(x3005)))+(((x2998)*(x3002)))+(((IkReal(-1.00000000000000))*(cj14)*(x3000)*(x3005)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x3009)))+(((IkReal(-1.00000000000000))*(r12)*(x3008))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x2997)*(x3004)))+(((IkReal(-1.00000000000000))*(x2997)*(x3001)))+(((x3001)*(x3003)))+(((x2995)*(x3012)))+(((x3003)*(x3004)))+(((IkReal(-1.00000000000000))*(x2995)*(x3006)))+(((IkReal(-1.00000000000000))*(cj9)*(x3010)))+(((IkReal(-1.00000000000000))*(x3007)*(x3012)))+(((px)*(sj9)))+(((x3006)*(x3007))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x3001)*(x3011)))+(((x2995)*(x2996)))+(((IkReal(-1.00000000000000))*(x3002)*(x3004)))+(((IkReal(-1.00000000000000))*(x3000)*(x3007)))+(((x2995)*(x3000)))+(((IkReal(-1.00000000000000))*(x2996)*(x3007)))+(((IkReal(-1.00000000000000))*(x3004)*(x3011)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x3010)))+(((IkReal(-1.00000000000000))*(x3001)*(x3002))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3014=((cj14)*(r11));
IkReal x3015=((IkReal(1.00000000000000))*(sj9));
IkReal x3016=((cj14)*(r01));
IkReal x3017=((r00)*(sj14));
IkReal x3018=((r10)*(sj14));
IkReal x3019=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x3018)))+(((cj9)*(x3014)))+(((IkReal(-1.00000000000000))*(x3015)*(x3016)))+(((IkReal(-1.00000000000000))*(x3015)*(x3017))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x3017)*(x3019)))+(((IkReal(-1.00000000000000))*(x3014)*(x3015)))+(((IkReal(-1.00000000000000))*(x3015)*(x3018)))+(((IkReal(-1.00000000000000))*(x3016)*(x3019))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x3018)))+(((cj9)*(x3014)))+(((IkReal(-1.00000000000000))*(x3015)*(x3016)))+(((IkReal(-1.00000000000000))*(x3015)*(x3017)))))+IKsqr(((((IkReal(-1.00000000000000))*(x3017)*(x3019)))+(((IkReal(-1.00000000000000))*(x3014)*(x3015)))+(((IkReal(-1.00000000000000))*(x3015)*(x3018)))+(((IkReal(-1.00000000000000))*(x3016)*(x3019)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x3018)))+(((cj9)*(x3014)))+(((IkReal(-1.00000000000000))*(x3015)*(x3016)))+(((IkReal(-1.00000000000000))*(x3015)*(x3017)))), ((((IkReal(-1.00000000000000))*(x3017)*(x3019)))+(((IkReal(-1.00000000000000))*(x3014)*(x3015)))+(((IkReal(-1.00000000000000))*(x3015)*(x3018)))+(((IkReal(-1.00000000000000))*(x3016)*(x3019)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3020=IKsin(j12);
IkReal x3021=((cj13)*(r10));
IkReal x3022=((cj9)*(sj14));
IkReal x3023=((cj13)*(r01));
IkReal x3024=((IkReal(1.00000000000000))*(r10));
IkReal x3025=((cj14)*(r01));
IkReal x3026=((cj9)*(sj13));
IkReal x3027=((IkReal(1.00000000000000))*(cj9));
IkReal x3028=((sj14)*(sj9));
IkReal x3029=((sj13)*(sj9));
IkReal x3030=((cj13)*(r11));
IkReal x3031=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x3032=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3033=((cj13)*(cj14)*(r00));
evalcond[0]=((x3020)+(((r00)*(x3028)))+(((sj9)*(x3025)))+(((IkReal(-1.00000000000000))*(x3022)*(x3024)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3027))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3022)))+(((IkReal(-1.00000000000000))*(x3031)))+(((IkReal(-1.00000000000000))*(x3025)*(x3027)))+(((IkReal(-1.00000000000000))*(x3024)*(x3028)))+(((IkReal(-1.00000000000000))*(r11)*(x3032))));
evalcond[2]=((((r12)*(x3026)))+(((x3022)*(x3030)))+(((IkReal(-1.00000000000000))*(cj14)*(x3021)*(x3027)))+(((IkReal(-1.00000000000000))*(x3031)))+(((IkReal(-1.00000000000000))*(x3023)*(x3028)))+(((IkReal(-1.00000000000000))*(r02)*(x3029)))+(((sj9)*(x3033))));
evalcond[3]=((((x3028)*(x3030)))+(((r12)*(x3029)))+(((IkReal(-1.00000000000000))*(x3020)))+(((r02)*(x3026)))+(((IkReal(-1.00000000000000))*(x3021)*(x3032)))+(((IkReal(-1.00000000000000))*(x3027)*(x3033)))+(((x3022)*(x3023))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3034=((IkReal(0.0100000000000000))*(cj14));
IkReal x3035=((r10)*(sj9));
IkReal x3036=((cj9)*(r11));
IkReal x3037=((sj13)*(sj14));
IkReal x3038=((cj14)*(r21));
IkReal x3039=((cj9)*(r00));
IkReal x3040=((IkReal(0.374290000000000))*(cj14));
IkReal x3041=((cj9)*(r01));
IkReal x3042=((r01)*(sj9));
IkReal x3043=((IkReal(0.0100000000000000))*(sj14));
IkReal x3044=((IkReal(1.00000000000000))*(sj13));
IkReal x3045=((r00)*(sj9));
IkReal x3046=((IkReal(0.374290000000000))*(sj14));
IkReal x3047=((cj13)*(sj9));
IkReal x3048=((IkReal(1.00000000000000))*(cj13));
IkReal x3049=((IkReal(1.00000000000000))*(py));
IkReal x3050=((r11)*(sj9));
IkReal x3051=((cj9)*(r10));
IkReal x3052=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x3038)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x3037)))+(((cj13)*(r22)))+(((r20)*(x3052))));
evalcond[3]=((((r21)*(x3043)))+(((IkReal(0.374290000000000))*(x3038)))+(((IkReal(-1.00000000000000))*(r20)*(x3034)))+(((r20)*(x3046)))+(pz));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3048)))+(((IkReal(-1.00000000000000))*(r22)*(x3044))));
evalcond[5]=((((x3045)*(x3052)))+(((x3036)*(x3037)))+(((IkReal(-1.00000000000000))*(x3037)*(x3042)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x3048)))+(((IkReal(-1.00000000000000))*(cj14)*(x3044)*(x3051)))+(((r02)*(x3047))));
evalcond[6]=((((x3037)*(x3041)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x3048)))+(((IkReal(-1.00000000000000))*(r12)*(x3047)))+(((x3037)*(x3050)))+(((IkReal(-1.00000000000000))*(cj14)*(x3039)*(x3044)))+(((IkReal(-1.00000000000000))*(cj14)*(x3035)*(x3044))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x3034)*(x3051)))+(((x3042)*(x3043)))+(((IkReal(-1.00000000000000))*(cj9)*(x3049)))+(((x3040)*(x3042)))+(((IkReal(-1.00000000000000))*(x3034)*(x3045)))+(((IkReal(-1.00000000000000))*(x3046)*(x3051)))+(((px)*(sj9)))+(((x3045)*(x3046)))+(((IkReal(-1.00000000000000))*(x3036)*(x3040)))+(((IkReal(-1.00000000000000))*(x3036)*(x3043))));
evalcond[8]=((IkReal(-0.295420000000000))+(((x3034)*(x3039)))+(((x3034)*(x3035)))+(((IkReal(-1.00000000000000))*(x3043)*(x3050)))+(((IkReal(-1.00000000000000))*(x3039)*(x3046)))+(((IkReal(-1.00000000000000))*(x3040)*(x3050)))+(((IkReal(-1.00000000000000))*(x3041)*(x3043)))+(((IkReal(-1.00000000000000))*(x3035)*(x3046)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x3040)*(x3041)))+(((IkReal(-1.00000000000000))*(sj9)*(x3049))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3053=((cj14)*(cj9));
IkReal x3054=((IkReal(1.00000000000000))*(sj9));
IkReal x3055=((r00)*(sj14));
IkReal x3056=((r10)*(sj14));
if( IKabs(((((cj9)*(x3056)))+(((r11)*(x3053)))+(((IkReal(-1.00000000000000))*(x3054)*(x3055)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3054))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x3055)))+(((cj14)*(r11)*(sj9)))+(((r01)*(x3053)))+(((sj9)*(x3056))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x3056)))+(((r11)*(x3053)))+(((IkReal(-1.00000000000000))*(x3054)*(x3055)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3054)))))+IKsqr(((((cj9)*(x3055)))+(((cj14)*(r11)*(sj9)))+(((r01)*(x3053)))+(((sj9)*(x3056)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x3056)))+(((r11)*(x3053)))+(((IkReal(-1.00000000000000))*(x3054)*(x3055)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3054)))), ((((cj9)*(x3055)))+(((cj14)*(r11)*(sj9)))+(((r01)*(x3053)))+(((sj9)*(x3056)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3057=IKcos(j12);
IkReal x3058=IKsin(j12);
IkReal x3059=((r12)*(sj13));
IkReal x3060=((sj14)*(sj9));
IkReal x3061=((cj13)*(r11));
IkReal x3062=((cj9)*(sj14));
IkReal x3063=((IkReal(1.00000000000000))*(cj14));
IkReal x3064=((cj13)*(cj9));
IkReal x3065=((cj13)*(r01));
IkReal x3066=((cj14)*(sj9));
IkReal x3067=((IkReal(1.00000000000000))*(r10));
IkReal x3068=((r02)*(sj13));
evalcond[0]=((x3058)+(((r00)*(x3060)))+(((r01)*(x3066)))+(((IkReal(-1.00000000000000))*(x3062)*(x3067)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x3063))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3060)*(x3067)))+(x3057)+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3063)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3063)))+(((IkReal(-1.00000000000000))*(r00)*(x3062))));
evalcond[2]=((((cj9)*(x3059)))+(((IkReal(-1.00000000000000))*(x3057)))+(((IkReal(-1.00000000000000))*(x3060)*(x3065)))+(((cj13)*(r00)*(x3066)))+(((IkReal(-1.00000000000000))*(sj9)*(x3068)))+(((IkReal(-1.00000000000000))*(r10)*(x3063)*(x3064)))+(((x3061)*(x3062))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x3063)))+(x3058)+(((IkReal(-1.00000000000000))*(r00)*(x3063)*(x3064)))+(((sj9)*(x3059)))+(((x3060)*(x3061)))+(((x3062)*(x3065)))+(((cj9)*(x3068))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3069=((cj14)*(r11));
IkReal x3070=((IkReal(1.00000000000000))*(sj9));
IkReal x3071=((cj14)*(r01));
IkReal x3072=((r00)*(sj14));
IkReal x3073=((r10)*(sj14));
IkReal x3074=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x3070)*(x3072)))+(((IkReal(-1.00000000000000))*(x3070)*(x3071)))+(((cj9)*(x3073)))+(((cj9)*(x3069))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3072)*(x3074)))+(((IkReal(-1.00000000000000))*(x3071)*(x3074)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((IkReal(-1.00000000000000))*(x3070)*(x3073))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3070)*(x3072)))+(((IkReal(-1.00000000000000))*(x3070)*(x3071)))+(((cj9)*(x3073)))+(((cj9)*(x3069)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3072)*(x3074)))+(((IkReal(-1.00000000000000))*(x3071)*(x3074)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((IkReal(-1.00000000000000))*(x3070)*(x3073)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3070)*(x3072)))+(((IkReal(-1.00000000000000))*(x3070)*(x3071)))+(((cj9)*(x3073)))+(((cj9)*(x3069)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3072)*(x3074)))+(((IkReal(-1.00000000000000))*(x3071)*(x3074)))+(((IkReal(-1.00000000000000))*(x3069)*(x3070)))+(((IkReal(-1.00000000000000))*(x3070)*(x3073)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3075=IKsin(j12);
IkReal x3076=IKcos(j12);
IkReal x3077=((IkReal(1.00000000000000))*(sj13));
IkReal x3078=((cj13)*(r10));
IkReal x3079=((cj9)*(sj14));
IkReal x3080=((cj13)*(r01));
IkReal x3081=((IkReal(1.00000000000000))*(r10));
IkReal x3082=((r12)*(sj13));
IkReal x3083=((cj13)*(sj14));
IkReal x3084=((cj14)*(r01));
IkReal x3085=((cj13)*(cj14));
IkReal x3086=((IkReal(1.00000000000000))*(cj9));
IkReal x3087=((sj14)*(sj9));
IkReal x3088=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3089=((IkReal(1.00000000000000))*(x3076));
IkReal x3090=((IkReal(1.00000000000000))*(x3075));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x3089)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3077)))+(((r20)*(x3085)))+(((IkReal(-1.00000000000000))*(sj10)*(x3090)))+(((IkReal(-1.00000000000000))*(r21)*(x3083))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3079)*(x3081)))+(x3075)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3086)))+(((r00)*(x3087)))+(((sj9)*(x3084))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3079)))+(((IkReal(-1.00000000000000))*(x3084)*(x3086)))+(((IkReal(-1.00000000000000))*(x3081)*(x3087)))+(((IkReal(-1.00000000000000))*(cj10)*(x3089)))+(((IkReal(-1.00000000000000))*(r11)*(x3088))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3080)*(x3087)))+(((IkReal(-1.00000000000000))*(x3089)))+(((cj9)*(x3082)))+(((cj13)*(r11)*(x3079)))+(((IkReal(-1.00000000000000))*(cj14)*(x3078)*(x3086)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3077)))+(((r00)*(sj9)*(x3085))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x3085)*(x3086)))+(((IkReal(-1.00000000000000))*(cj10)*(x3090)))+(((IkReal(-1.00000000000000))*(x3078)*(x3088)))+(((x3079)*(x3080)))+(((sj9)*(x3082)))+(((r11)*(sj9)*(x3083))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3091=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3091)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3091))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3091)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3091)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3091)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3091)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3092=IKsin(j12);
IkReal x3093=IKcos(j12);
IkReal x3094=((IkReal(1.00000000000000))*(sj13));
IkReal x3095=((cj13)*(r10));
IkReal x3096=((cj9)*(sj14));
IkReal x3097=((cj13)*(r01));
IkReal x3098=((IkReal(1.00000000000000))*(r10));
IkReal x3099=((r12)*(sj13));
IkReal x3100=((cj13)*(sj14));
IkReal x3101=((cj14)*(r01));
IkReal x3102=((cj13)*(cj14));
IkReal x3103=((IkReal(1.00000000000000))*(cj9));
IkReal x3104=((sj14)*(sj9));
IkReal x3105=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3106=((IkReal(1.00000000000000))*(x3093));
IkReal x3107=((IkReal(1.00000000000000))*(x3092));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x3106))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3094)))+(((r20)*(x3102)))+(((IkReal(-1.00000000000000))*(r21)*(x3100)))+(((IkReal(-1.00000000000000))*(sj10)*(x3107))));
evalcond[2]=((x3092)+(((sj9)*(x3101)))+(((IkReal(-1.00000000000000))*(x3096)*(x3098)))+(((r00)*(x3104)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3103))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x3106)))+(((IkReal(-1.00000000000000))*(r11)*(x3105)))+(((IkReal(-1.00000000000000))*(x3098)*(x3104)))+(((IkReal(-1.00000000000000))*(r00)*(x3096)))+(((IkReal(-1.00000000000000))*(x3101)*(x3103))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3094)))+(((IkReal(-1.00000000000000))*(x3106)))+(((cj9)*(x3099)))+(((IkReal(-1.00000000000000))*(x3097)*(x3104)))+(((r00)*(sj9)*(x3102)))+(((IkReal(-1.00000000000000))*(cj14)*(x3095)*(x3103)))+(((cj13)*(r11)*(x3096))));
evalcond[5]=((((r11)*(sj9)*(x3100)))+(((IkReal(-1.00000000000000))*(cj10)*(x3107)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x3095)*(x3105)))+(((sj9)*(x3099)))+(((x3096)*(x3097)))+(((IkReal(-1.00000000000000))*(r00)*(x3102)*(x3103))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3108=IKsin(j12);
IkReal x3109=IKcos(j12);
IkReal x3110=((IkReal(1.00000000000000))*(sj13));
IkReal x3111=((cj13)*(r10));
IkReal x3112=((cj9)*(sj14));
IkReal x3113=((cj13)*(r01));
IkReal x3114=((IkReal(1.00000000000000))*(r10));
IkReal x3115=((r12)*(sj13));
IkReal x3116=((cj13)*(sj14));
IkReal x3117=((cj14)*(r01));
IkReal x3118=((cj13)*(cj14));
IkReal x3119=((IkReal(1.00000000000000))*(cj9));
IkReal x3120=((sj14)*(sj9));
IkReal x3121=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3122=((IkReal(1.00000000000000))*(x3109));
IkReal x3123=((IkReal(1.00000000000000))*(x3108));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x3122)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x3123)))+(((IkReal(-1.00000000000000))*(r22)*(x3110)))+(((r20)*(x3118)))+(((IkReal(-1.00000000000000))*(r21)*(x3116))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3119)))+(((r00)*(x3120)))+(x3108)+(((sj9)*(x3117)))+(((IkReal(-1.00000000000000))*(x3112)*(x3114))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3114)*(x3120)))+(((IkReal(-1.00000000000000))*(x3117)*(x3119)))+(((IkReal(-1.00000000000000))*(r00)*(x3112)))+(((IkReal(-1.00000000000000))*(r11)*(x3121)))+(((IkReal(-1.00000000000000))*(cj10)*(x3122))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3110)))+(((IkReal(-1.00000000000000))*(x3113)*(x3120)))+(((cj9)*(x3115)))+(((r00)*(sj9)*(x3118)))+(((IkReal(-1.00000000000000))*(cj14)*(x3111)*(x3119)))+(((IkReal(-1.00000000000000))*(x3122)))+(((cj13)*(r11)*(x3112))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x3118)*(x3119)))+(((r11)*(sj9)*(x3116)))+(((x3112)*(x3113)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x3111)*(x3121)))+(((sj9)*(x3115)))+(((IkReal(-1.00000000000000))*(cj10)*(x3123))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3124=(cj10)*(cj10);
IkReal x3125=(sj10)*(sj10);
IkReal x3126=((cj14)*(sj10));
IkReal x3127=((r11)*(sj9));
IkReal x3128=((sj10)*(sj14));
IkReal x3129=((r10)*(sj9));
IkReal x3130=((cj10)*(cj14));
IkReal x3131=((cj9)*(r00));
IkReal x3132=((cj9)*(r01));
IkReal x3133=((IkReal(1.00000000000000))*(cj10)*(sj14));
if( IKabs(((((IKabs(((((cj11)*(x3124)))+(((cj11)*(x3125))))) != 0)?((IkReal)1/(((((cj11)*(x3124)))+(((cj11)*(x3125)))))):(IkReal)1.0e30))*(((((r21)*(x3130)))+(((cj10)*(r20)*(sj14)))+(((x3126)*(x3127)))+(((x3126)*(x3132)))+(((x3128)*(x3129)))+(((x3128)*(x3131))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x3124)+(x3125))) != 0)?((IkReal)1/(((x3124)+(x3125)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3131)*(x3133)))+(((r20)*(x3128)))+(((r21)*(x3126)))+(((IkReal(-1.00000000000000))*(x3130)*(x3132)))+(((IkReal(-1.00000000000000))*(x3127)*(x3130)))+(((IkReal(-1.00000000000000))*(x3129)*(x3133))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj11)*(x3124)))+(((cj11)*(x3125))))) != 0)?((IkReal)1/(((((cj11)*(x3124)))+(((cj11)*(x3125)))))):(IkReal)1.0e30))*(((((r21)*(x3130)))+(((cj10)*(r20)*(sj14)))+(((x3126)*(x3127)))+(((x3126)*(x3132)))+(((x3128)*(x3129)))+(((x3128)*(x3131)))))))+IKsqr(((((IKabs(((x3124)+(x3125))) != 0)?((IkReal)1/(((x3124)+(x3125)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3131)*(x3133)))+(((r20)*(x3128)))+(((r21)*(x3126)))+(((IkReal(-1.00000000000000))*(x3130)*(x3132)))+(((IkReal(-1.00000000000000))*(x3127)*(x3130)))+(((IkReal(-1.00000000000000))*(x3129)*(x3133)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(((((cj11)*(x3124)))+(((cj11)*(x3125))))) != 0)?((IkReal)1/(((((cj11)*(x3124)))+(((cj11)*(x3125)))))):(IkReal)1.0e30))*(((((r21)*(x3130)))+(((cj10)*(r20)*(sj14)))+(((x3126)*(x3127)))+(((x3126)*(x3132)))+(((x3128)*(x3129)))+(((x3128)*(x3131)))))), ((((IKabs(((x3124)+(x3125))) != 0)?((IkReal)1/(((x3124)+(x3125)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3131)*(x3133)))+(((r20)*(x3128)))+(((r21)*(x3126)))+(((IkReal(-1.00000000000000))*(x3130)*(x3132)))+(((IkReal(-1.00000000000000))*(x3127)*(x3130)))+(((IkReal(-1.00000000000000))*(x3129)*(x3133)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x3134=IKsin(j12);
IkReal x3135=IKcos(j12);
IkReal x3136=((r00)*(sj14));
IkReal x3137=((cj14)*(sj9));
IkReal x3138=((IkReal(1.00000000000000))*(r11));
IkReal x3139=((IkReal(1.00000000000000))*(cj9));
IkReal x3140=((r10)*(sj14));
IkReal x3141=((IkReal(1.00000000000000))*(x3134));
IkReal x3142=((IkReal(1.00000000000000))*(x3135));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x3141)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x3142))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj11)*(x3141)))+(((r01)*(x3137)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3138)))+(((sj9)*(x3136)))+(((IkReal(-1.00000000000000))*(x3139)*(x3140))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x3140)))+(((cj11)*(sj10)*(x3134)))+(((IkReal(-1.00000000000000))*(x3136)*(x3139)))+(((IkReal(-1.00000000000000))*(cj10)*(x3142)))+(((IkReal(-1.00000000000000))*(x3137)*(x3138)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3139))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x3143=((r22)*(sj14));
IkReal x3144=((IkReal(1.00000000000000))*(cj9));
IkReal x3145=((cj14)*(sj9));
IkReal x3146=((r21)*(sj14));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x3144)))+(((IkReal(-1.00000000000000))*(r11)*(x3143)*(x3144)))+(((r02)*(r20)*(x3145)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r01)*(sj9)*(x3143)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3146)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x3145)))+(((cj9)*(r12)*(x3146)))));
IkReal x3147=((r22)*(sj14));
IkReal x3148=((IkReal(1.00000000000000))*(cj9));
IkReal x3149=((cj14)*(sj9));
IkReal x3150=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x3148)))+(((r02)*(r20)*(x3149)))+(((IkReal(-1.00000000000000))*(r11)*(x3147)*(x3148)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3150)))+(((cj14)*(cj9)*(r10)*(r22)))+(((cj9)*(r12)*(x3150)))+(((r01)*(sj9)*(x3147)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x3149))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x3151=((IkReal(1.00000000000000))*(cj14));
IkReal x3152=((cj10)*(sj11)*(sj9));
IkReal x3153=((cj10)*(cj9)*(sj11));
if( IKabs(((gconst3)*(((((r02)*(x3152)))+(((cj11)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(x3153))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(x3151)*(x3152)))+(((IkReal(-1.00000000000000))*(cj11)*(r20)*(x3151)))+(((r01)*(sj14)*(x3152)))+(((cj14)*(r10)*(x3153)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3153))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst3)*(((((r02)*(x3152)))+(((cj11)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(x3153)))))), ((gconst3)*(((((cj11)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(x3151)*(x3152)))+(((IkReal(-1.00000000000000))*(cj11)*(r20)*(x3151)))+(((r01)*(sj14)*(x3152)))+(((cj14)*(r10)*(x3153)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3153)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x3154=IKsin(j13);
IkReal x3155=IKcos(j13);
IkReal x3156=((r11)*(sj14));
IkReal x3157=((IkReal(1.00000000000000))*(r02));
IkReal x3158=((r01)*(sj14));
IkReal x3159=((IkReal(1.00000000000000))*(sj12));
IkReal x3160=((cj14)*(r00));
IkReal x3161=((IkReal(1.00000000000000))*(r12));
IkReal x3162=((r21)*(sj14));
IkReal x3163=((cj11)*(cj12));
IkReal x3164=((cj14)*(r20));
IkReal x3165=((cj9)*(x3154));
IkReal x3166=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x3167=((sj9)*(x3154));
IkReal x3168=((sj9)*(x3155));
IkReal x3169=((cj9)*(x3155));
IkReal x3170=((IkReal(1.00000000000000))*(x3154));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3162)*(x3170)))+(((r22)*(x3155)))+(((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((x3154)*(x3164))));
evalcond[1]=((((x3155)*(x3164)))+(((IkReal(-1.00000000000000))*(r22)*(x3170)))+(((IkReal(-1.00000000000000))*(x3155)*(x3162)))+(((cj10)*(x3163)))+(((IkReal(-1.00000000000000))*(sj10)*(x3159))));
evalcond[2]=((((r02)*(x3168)))+(((IkReal(-1.00000000000000))*(x3161)*(x3169)))+(((IkReal(-1.00000000000000))*(x3165)*(x3166)))+(((IkReal(-1.00000000000000))*(x3158)*(x3167)))+(cj11)+(((x3156)*(x3165)))+(((x3160)*(x3167))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3157)*(x3167)))+(((r12)*(x3165)))+(((IkReal(-1.00000000000000))*(x3158)*(x3168)))+(((x3156)*(x3169)))+(((IkReal(-1.00000000000000))*(x3166)*(x3169)))+(((cj12)*(sj11)))+(((x3160)*(x3168))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3157)*(x3169)))+(((IkReal(-1.00000000000000))*(x3161)*(x3168)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x3160)*(x3165)))+(((x3156)*(x3167)))+(((IkReal(-1.00000000000000))*(x3166)*(x3167)))+(((x3158)*(x3165))));
evalcond[5]=((((r02)*(x3165)))+(((r12)*(x3167)))+(((IkReal(-1.00000000000000))*(cj10)*(x3159)))+(((IkReal(-1.00000000000000))*(x3160)*(x3169)))+(((x3156)*(x3168)))+(((IkReal(-1.00000000000000))*(x3166)*(x3168)))+(((IkReal(-1.00000000000000))*(sj10)*(x3163)))+(((x3158)*(x3169))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x3171=((cj10)*(sj11));
IkReal x3172=((r21)*(sj14));
IkReal x3173=((cj14)*(r20));
IkReal x3174=((cj10)*(cj11)*(cj12));
IkReal x3175=((IkReal(1.00000000000000))*(sj10)*(sj12));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x3171)*(x3172)))+(((r22)*(x3174)))+(((x3171)*(x3173)))+(((IkReal(-1.00000000000000))*(r22)*(x3175))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x3173)*(x3174)))+(((r22)*(x3171)))+(((IkReal(-1.00000000000000))*(x3172)*(x3175)))+(((x3172)*(x3174)))+(((sj10)*(sj12)*(x3173))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x3171)*(x3172)))+(((r22)*(x3174)))+(((x3171)*(x3173)))+(((IkReal(-1.00000000000000))*(r22)*(x3175)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x3173)*(x3174)))+(((r22)*(x3171)))+(((IkReal(-1.00000000000000))*(x3172)*(x3175)))+(((x3172)*(x3174)))+(((sj10)*(sj12)*(x3173)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x3176=IKsin(j13);
IkReal x3177=IKcos(j13);
IkReal x3178=((r11)*(sj14));
IkReal x3179=((IkReal(1.00000000000000))*(r02));
IkReal x3180=((r01)*(sj14));
IkReal x3181=((IkReal(1.00000000000000))*(sj12));
IkReal x3182=((cj14)*(r00));
IkReal x3183=((IkReal(1.00000000000000))*(r12));
IkReal x3184=((r21)*(sj14));
IkReal x3185=((cj11)*(cj12));
IkReal x3186=((cj14)*(r20));
IkReal x3187=((cj9)*(x3176));
IkReal x3188=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x3189=((sj9)*(x3176));
IkReal x3190=((sj9)*(x3177));
IkReal x3191=((cj9)*(x3177));
IkReal x3192=((IkReal(1.00000000000000))*(x3176));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3184)*(x3192)))+(((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((x3176)*(x3186)))+(((r22)*(x3177))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3192)))+(((IkReal(-1.00000000000000))*(sj10)*(x3181)))+(((IkReal(-1.00000000000000))*(x3177)*(x3184)))+(((cj10)*(x3185)))+(((x3177)*(x3186))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3187)*(x3188)))+(((IkReal(-1.00000000000000))*(x3183)*(x3191)))+(((IkReal(-1.00000000000000))*(x3180)*(x3189)))+(((x3178)*(x3187)))+(((x3182)*(x3189)))+(cj11)+(((r02)*(x3190))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3179)*(x3189)))+(((IkReal(-1.00000000000000))*(x3188)*(x3191)))+(((x3178)*(x3191)))+(((r12)*(x3187)))+(((IkReal(-1.00000000000000))*(x3180)*(x3190)))+(((x3182)*(x3190)))+(((cj12)*(sj11))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3183)*(x3190)))+(((x3178)*(x3189)))+(((IkReal(-1.00000000000000))*(x3188)*(x3189)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x3179)*(x3191)))+(((x3180)*(x3187)))+(((IkReal(-1.00000000000000))*(x3182)*(x3187))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj10)*(x3185)))+(((IkReal(-1.00000000000000))*(x3188)*(x3190)))+(((x3178)*(x3190)))+(((r12)*(x3189)))+(((IkReal(-1.00000000000000))*(cj10)*(x3181)))+(((x3180)*(x3191)))+(((IkReal(-1.00000000000000))*(x3182)*(x3191)))+(((r02)*(x3187))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x3193=((cj10)*(sj11));
IkReal x3194=((sj10)*(sj11));
IkReal x3195=((IkReal(1.00000000000000))*(sj9));
IkReal x3196=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r12)*(x3193)*(x3195)))+(((IkReal(-1.00000000000000))*(r02)*(x3193)*(x3196)))+(((r22)*(x3194))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((cj14)*(r10)*(sj9)*(x3193)))+(((r21)*(sj14)*(x3194)))+(((cj14)*(cj9)*(r00)*(x3193)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3194)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x3193)*(x3196)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3193)*(x3195))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r12)*(x3193)*(x3195)))+(((IkReal(-1.00000000000000))*(r02)*(x3193)*(x3196)))+(((r22)*(x3194)))))), ((gconst1)*(((((cj14)*(r10)*(sj9)*(x3193)))+(((r21)*(sj14)*(x3194)))+(((cj14)*(cj9)*(r00)*(x3193)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(x3194)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x3193)*(x3196)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x3193)*(x3195)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x3197=IKsin(j13);
IkReal x3198=IKcos(j13);
IkReal x3199=((r11)*(sj14));
IkReal x3200=((r01)*(sj14));
IkReal x3201=((cj14)*(r00));
IkReal x3202=((cj9)*(x3197));
IkReal x3203=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x3204=((sj9)*(x3197));
IkReal x3205=((sj9)*(x3198));
IkReal x3206=((IkReal(1.00000000000000))*(cj9)*(x3198));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((cj14)*(r20)*(x3197)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3197)))+(((r22)*(x3198))));
evalcond[1]=((((x3199)*(x3202)))+(((IkReal(-1.00000000000000))*(r12)*(x3206)))+(((IkReal(-1.00000000000000))*(x3202)*(x3203)))+(((x3201)*(x3204)))+(cj11)+(((r02)*(x3205)))+(((IkReal(-1.00000000000000))*(x3200)*(x3204))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x3205)))+(((IkReal(-1.00000000000000))*(r02)*(x3206)))+(((x3199)*(x3204)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x3203)*(x3204)))+(((x3200)*(x3202)))+(((IkReal(-1.00000000000000))*(x3201)*(x3202))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10))));
dummyeval[0]=(((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x3207=(cj10)*(cj10);
IkReal x3208=(sj10)*(sj10);
dummyeval[0]=((((cj11)*(x3207)))+(((cj11)*(x3208))));
dummyeval[1]=((x3207)+(x3208));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3209=((IkReal(0.0100000000000000))*(cj14));
IkReal x3210=((r10)*(sj9));
IkReal x3211=((IkReal(1.00000000000000))*(sj9));
IkReal x3212=((IkReal(0.0100000000000000))*(sj14));
IkReal x3213=((cj9)*(r11));
IkReal x3214=((r00)*(sj9));
IkReal x3215=((IkReal(0.374290000000000))*(sj14));
IkReal x3216=((cj13)*(r02));
IkReal x3217=((cj9)*(r12));
IkReal x3218=((cj9)*(r00));
IkReal x3219=((r01)*(sj9));
IkReal x3220=((IkReal(0.374290000000000))*(cj14));
IkReal x3221=((IkReal(1.00000000000000))*(cj9));
IkReal x3222=((cj9)*(r10));
IkReal x3223=((r11)*(sj9));
IkReal x3224=((IkReal(1.00000000000000))*(sj13));
IkReal x3225=((cj14)*(sj13));
IkReal x3226=((cj13)*(sj14));
IkReal x3227=((cj13)*(cj14));
IkReal x3228=((r11)*(sj13)*(sj14));
IkReal x3229=((cj9)*(x3220));
IkReal x3230=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3224)))+(((cj13)*(r22)))+(((r20)*(x3225))));
evalcond[2]=((((IkReal(0.0690000000000000))*(cj10)))+(((r21)*(x3220)))+(((r20)*(x3215)))+(((IkReal(-1.00000000000000))*(r20)*(x3209)))+(pz)+(((IkReal(0.364420000000000))*(sj10)))+(((r21)*(x3212))));
evalcond[3]=((((sj14)*(x3214)))+(((cj14)*(x3219)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3221)))+(((IkReal(-1.00000000000000))*(cj14)*(x3213))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3211)*(x3230)))+(((sj9)*(x3216)))+(((sj13)*(sj14)*(x3213)))+(((IkReal(-1.00000000000000))*(cj13)*(x3217)))+(((IkReal(-1.00000000000000))*(r10)*(x3221)*(x3225)))+(((x3214)*(x3225))));
evalcond[5]=((((sj13)*(x3217)))+(((IkReal(-1.00000000000000))*(r01)*(x3211)*(x3226)))+(((x3213)*(x3226)))+(((IkReal(-1.00000000000000))*(r10)*(x3221)*(x3227)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3211)))+(((x3214)*(x3227))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3216)*(x3221)))+(((sj13)*(sj14)*(x3223)))+(((IkReal(-1.00000000000000))*(cj14)*(x3210)*(x3224)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3211)))+(((cj9)*(x3230)))+(((IkReal(-1.00000000000000))*(cj14)*(x3218)*(x3224))));
evalcond[7]=((((x3212)*(x3219)))+(((x3209)*(x3222)))+(((x3214)*(x3215)))+(((IkReal(-1.00000000000000))*(x3209)*(x3214)))+(((IkReal(-1.00000000000000))*(x3213)*(x3220)))+(((IkReal(-1.00000000000000))*(x3215)*(x3222)))+(((IkReal(-1.00000000000000))*(py)*(x3221)))+(((IkReal(-1.00000000000000))*(x3212)*(x3213)))+(((px)*(sj9)))+(((x3219)*(x3220))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x3215)*(x3218)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3212)))+(((x3209)*(x3210)))+(((x3209)*(x3218)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x3210)*(x3215)))+(((IkReal(-0.0690000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x3220)*(x3223)))+(((IkReal(-1.00000000000000))*(px)*(x3221)))+(((IkReal(-1.00000000000000))*(py)*(x3211)))+(((IkReal(-1.00000000000000))*(r01)*(x3229)))+(((IkReal(-1.00000000000000))*(x3212)*(x3223))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3231=((cj14)*(sj10));
IkReal x3232=((r11)*(sj9));
IkReal x3233=((r20)*(sj14));
IkReal x3234=((IkReal(1.00000000000000))*(cj10));
IkReal x3235=((cj9)*(r01));
IkReal x3236=((r10)*(sj14)*(sj9));
IkReal x3237=((cj9)*(r00)*(sj14));
if( IKabs(((gconst6)*(((((sj10)*(x3237)))+(((sj10)*(x3236)))+(((cj10)*(x3233)))+(((x3231)*(x3235)))+(((x3231)*(x3232)))+(((cj10)*(cj14)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((sj10)*(x3233)))+(((IkReal(-1.00000000000000))*(cj14)*(x3232)*(x3234)))+(((IkReal(-1.00000000000000))*(x3234)*(x3236)))+(((IkReal(-1.00000000000000))*(x3234)*(x3237)))+(((IkReal(-1.00000000000000))*(cj14)*(x3234)*(x3235)))+(((r21)*(x3231))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst6)*(((((sj10)*(x3237)))+(((sj10)*(x3236)))+(((cj10)*(x3233)))+(((x3231)*(x3235)))+(((x3231)*(x3232)))+(((cj10)*(cj14)*(r21)))))), ((gconst6)*(((((sj10)*(x3233)))+(((IkReal(-1.00000000000000))*(cj14)*(x3232)*(x3234)))+(((IkReal(-1.00000000000000))*(x3234)*(x3236)))+(((IkReal(-1.00000000000000))*(x3234)*(x3237)))+(((IkReal(-1.00000000000000))*(cj14)*(x3234)*(x3235)))+(((r21)*(x3231)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3238=IKcos(j12);
IkReal x3239=IKsin(j12);
IkReal x3240=((cj13)*(sj14));
IkReal x3241=((r11)*(sj9));
IkReal x3242=((IkReal(1.00000000000000))*(cj10));
IkReal x3243=((cj9)*(r01));
IkReal x3244=((IkReal(1.00000000000000))*(cj14));
IkReal x3245=((cj9)*(r00));
IkReal x3246=((IkReal(1.00000000000000))*(sj14));
IkReal x3247=((r10)*(sj9));
IkReal x3248=((sj10)*(x3239));
IkReal x3249=((IkReal(1.00000000000000))*(sj10)*(x3238));
IkReal x3250=((x3239)*(x3242));
IkReal x3251=((x3249)+(x3250));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3251))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3248)))+(((cj13)*(cj14)*(r20)))+(((cj10)*(x3238)))+(((IkReal(-1.00000000000000))*(r21)*(x3240)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3243)*(x3244)))+(((IkReal(-1.00000000000000))*(x3238)*(x3242)))+(x3248)+(((IkReal(-1.00000000000000))*(x3245)*(x3246)))+(((IkReal(-1.00000000000000))*(x3241)*(x3244)))+(((IkReal(-1.00000000000000))*(x3246)*(x3247))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x3244)*(x3247)))+(((IkReal(-1.00000000000000))*(cj13)*(x3244)*(x3245)))+(((x3240)*(x3241)))+(((x3240)*(x3243)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x3251))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3252=((cj10)*(cj13));
IkReal x3253=((r21)*(sj14));
IkReal x3254=((r22)*(sj13));
IkReal x3255=((IkReal(1.00000000000000))*(sj10));
IkReal x3256=((cj14)*(r20));
IkReal x3257=((cj14)*(r21));
IkReal x3258=((r20)*(sj14));
if( IKabs(((gconst5)*(((((cj13)*(sj10)*(x3256)))+(((IkReal(-1.00000000000000))*(x3254)*(x3255)))+(((cj10)*(x3258)))+(((cj10)*(x3257)))+(((IkReal(-1.00000000000000))*(cj13)*(x3253)*(x3255))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((sj10)*(x3258)))+(((sj10)*(x3257)))+(((IkReal(-1.00000000000000))*(x3252)*(x3256)))+(((cj10)*(x3254)))+(((x3252)*(x3253))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst5)*(((((cj13)*(sj10)*(x3256)))+(((IkReal(-1.00000000000000))*(x3254)*(x3255)))+(((cj10)*(x3258)))+(((cj10)*(x3257)))+(((IkReal(-1.00000000000000))*(cj13)*(x3253)*(x3255)))))), ((gconst5)*(((((sj10)*(x3258)))+(((sj10)*(x3257)))+(((IkReal(-1.00000000000000))*(x3252)*(x3256)))+(((cj10)*(x3254)))+(((x3252)*(x3253)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3259=IKcos(j12);
IkReal x3260=IKsin(j12);
IkReal x3261=((cj13)*(sj14));
IkReal x3262=((r11)*(sj9));
IkReal x3263=((IkReal(1.00000000000000))*(cj10));
IkReal x3264=((cj9)*(r01));
IkReal x3265=((IkReal(1.00000000000000))*(cj14));
IkReal x3266=((cj9)*(r00));
IkReal x3267=((IkReal(1.00000000000000))*(sj14));
IkReal x3268=((r10)*(sj9));
IkReal x3269=((sj10)*(x3260));
IkReal x3270=((IkReal(1.00000000000000))*(sj10)*(x3259));
IkReal x3271=((x3260)*(x3263));
IkReal x3272=((x3270)+(x3271));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3272))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x3269)))+(((IkReal(-1.00000000000000))*(r21)*(x3261)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((cj10)*(x3259))));
evalcond[2]=((x3269)+(((IkReal(-1.00000000000000))*(x3264)*(x3265)))+(((IkReal(-1.00000000000000))*(x3262)*(x3265)))+(((IkReal(-1.00000000000000))*(x3266)*(x3267)))+(((IkReal(-1.00000000000000))*(x3267)*(x3268)))+(((IkReal(-1.00000000000000))*(x3259)*(x3263))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x3265)*(x3268)))+(((IkReal(-1.00000000000000))*(cj13)*(x3265)*(x3266)))+(((IkReal(-1.00000000000000))*(x3272)))+(((x3261)*(x3264)))+(((x3261)*(x3262)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3273=((IkReal(0.0100000000000000))*(cj14));
IkReal x3274=((r10)*(sj9));
IkReal x3275=((IkReal(1.00000000000000))*(sj9));
IkReal x3276=((IkReal(0.0100000000000000))*(sj14));
IkReal x3277=((cj9)*(r11));
IkReal x3278=((r00)*(sj9));
IkReal x3279=((IkReal(0.374290000000000))*(sj14));
IkReal x3280=((cj13)*(r02));
IkReal x3281=((cj9)*(r12));
IkReal x3282=((cj9)*(r00));
IkReal x3283=((r01)*(sj9));
IkReal x3284=((IkReal(0.374290000000000))*(cj14));
IkReal x3285=((IkReal(1.00000000000000))*(cj9));
IkReal x3286=((cj9)*(r10));
IkReal x3287=((r11)*(sj9));
IkReal x3288=((IkReal(1.00000000000000))*(sj13));
IkReal x3289=((cj14)*(sj13));
IkReal x3290=((cj13)*(sj14));
IkReal x3291=((cj13)*(cj14));
IkReal x3292=((r11)*(sj13)*(sj14));
IkReal x3293=((cj9)*(x3284));
IkReal x3294=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x3289)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3288)))+(((cj13)*(r22))));
evalcond[2]=((((r21)*(x3276)))+(((IkReal(-1.00000000000000))*(r20)*(x3273)))+(((r20)*(x3279)))+(((r21)*(x3284)))+(pz)+(((IkReal(-0.0690000000000000))*(cj10)))+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x3277)))+(((cj14)*(x3283)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3285)))+(((sj14)*(x3278))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj9)*(x3280)))+(((IkReal(-1.00000000000000))*(r10)*(x3285)*(x3289)))+(((sj13)*(sj14)*(x3277)))+(((IkReal(-1.00000000000000))*(x3275)*(x3294)))+(((x3278)*(x3289)))+(((IkReal(-1.00000000000000))*(cj13)*(x3281))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3275)))+(((IkReal(-1.00000000000000))*(r10)*(x3285)*(x3291)))+(((sj13)*(x3281)))+(((x3278)*(x3291)))+(((IkReal(-1.00000000000000))*(r01)*(x3275)*(x3290)))+(((x3277)*(x3290))));
evalcond[6]=((((cj9)*(x3294)))+(((IkReal(-1.00000000000000))*(x3280)*(x3285)))+(((IkReal(-1.00000000000000))*(cj14)*(x3282)*(x3288)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3275)))+(((IkReal(-1.00000000000000))*(cj14)*(x3274)*(x3288)))+(((sj13)*(sj14)*(x3287))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3276)*(x3277)))+(((IkReal(-1.00000000000000))*(x3273)*(x3278)))+(((IkReal(-1.00000000000000))*(x3279)*(x3286)))+(((x3273)*(x3286)))+(((IkReal(-1.00000000000000))*(x3277)*(x3284)))+(((x3283)*(x3284)))+(((x3276)*(x3283)))+(((x3278)*(x3279)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x3285))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x3279)*(x3282)))+(((x3273)*(x3274)))+(((x3273)*(x3282)))+(((IkReal(-1.00000000000000))*(x3274)*(x3279)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x3276)*(x3287)))+(((IkReal(0.0690000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r01)*(x3293)))+(((IkReal(-1.00000000000000))*(px)*(x3285)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3276)))+(((IkReal(-1.00000000000000))*(x3284)*(x3287)))+(((IkReal(-1.00000000000000))*(py)*(x3275))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3295=((sj10)*(sj14));
IkReal x3296=((cj14)*(r21));
IkReal x3297=((cj10)*(sj14));
IkReal x3298=((IkReal(1.00000000000000))*(cj10));
IkReal x3299=((IkReal(1.00000000000000))*(sj10));
IkReal x3300=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x3301=((cj14)*(r11)*(sj9));
IkReal x3302=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x3303=((cj14)*(cj9)*(r01));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r20)*(x3297)))+(((IkReal(-1.00000000000000))*(x3296)*(x3298)))+(((IkReal(-1.00000000000000))*(x3295)*(x3302)))+(((IkReal(-1.00000000000000))*(x3295)*(x3300)))+(((IkReal(-1.00000000000000))*(x3299)*(x3303)))+(((IkReal(-1.00000000000000))*(x3299)*(x3301))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((r20)*(x3295)))+(((IkReal(-1.00000000000000))*(x3298)*(x3301)))+(((IkReal(-1.00000000000000))*(x3298)*(x3303)))+(((sj10)*(x3296)))+(((IkReal(-1.00000000000000))*(x3297)*(x3300)))+(((IkReal(-1.00000000000000))*(x3297)*(x3302))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(r20)*(x3297)))+(((IkReal(-1.00000000000000))*(x3296)*(x3298)))+(((IkReal(-1.00000000000000))*(x3295)*(x3302)))+(((IkReal(-1.00000000000000))*(x3295)*(x3300)))+(((IkReal(-1.00000000000000))*(x3299)*(x3303)))+(((IkReal(-1.00000000000000))*(x3299)*(x3301)))))), ((gconst8)*(((((r20)*(x3295)))+(((IkReal(-1.00000000000000))*(x3298)*(x3301)))+(((IkReal(-1.00000000000000))*(x3298)*(x3303)))+(((sj10)*(x3296)))+(((IkReal(-1.00000000000000))*(x3297)*(x3300)))+(((IkReal(-1.00000000000000))*(x3297)*(x3302)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3304=IKsin(j12);
IkReal x3305=IKcos(j12);
IkReal x3306=((cj13)*(sj14));
IkReal x3307=((r11)*(sj9));
IkReal x3308=((cj13)*(cj14));
IkReal x3309=((IkReal(1.00000000000000))*(cj14));
IkReal x3310=((IkReal(1.00000000000000))*(cj10));
IkReal x3311=((cj9)*(r01));
IkReal x3312=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x3313=((sj10)*(x3305));
IkReal x3314=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x3315=((IkReal(1.00000000000000))*(sj10)*(x3304));
IkReal x3316=((x3305)*(x3310));
IkReal x3317=((x3315)+(x3316));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj10)*(x3304)))+(((IkReal(-1.00000000000000))*(x3313))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3317)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x3306)))+(((r20)*(x3308))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3317)))+(((IkReal(-1.00000000000000))*(x3309)*(x3311)))+(((IkReal(-1.00000000000000))*(sj14)*(x3312)))+(((IkReal(-1.00000000000000))*(sj14)*(x3314)))+(((IkReal(-1.00000000000000))*(x3307)*(x3309))));
evalcond[3]=((x3313)+(((IkReal(-1.00000000000000))*(x3304)*(x3310)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x3308)*(x3314)))+(((IkReal(-1.00000000000000))*(x3308)*(x3312)))+(((x3306)*(x3311)))+(((x3306)*(x3307)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3318=((r21)*(sj10));
IkReal x3319=((r20)*(sj14));
IkReal x3320=((IkReal(1.00000000000000))*(cj10));
IkReal x3321=((IkReal(1.00000000000000))*(r22)*(sj13));
IkReal x3322=((IkReal(1.00000000000000))*(cj13)*(sj14));
IkReal x3323=((cj13)*(cj14)*(r20));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj14)*(r21)*(x3320)))+(((sj10)*(x3323)))+(((IkReal(-1.00000000000000))*(x3319)*(x3320)))+(((IkReal(-1.00000000000000))*(x3318)*(x3322)))+(((IkReal(-1.00000000000000))*(sj10)*(x3321))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((sj10)*(x3319)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3320)))+(((cj14)*(x3318)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x3320)))+(((cj10)*(x3323))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj14)*(r21)*(x3320)))+(((sj10)*(x3323)))+(((IkReal(-1.00000000000000))*(x3319)*(x3320)))+(((IkReal(-1.00000000000000))*(x3318)*(x3322)))+(((IkReal(-1.00000000000000))*(sj10)*(x3321)))))), ((gconst7)*(((((sj10)*(x3319)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x3320)))+(((cj14)*(x3318)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x3320)))+(((cj10)*(x3323)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3324=IKsin(j12);
IkReal x3325=IKcos(j12);
IkReal x3326=((cj13)*(sj14));
IkReal x3327=((r11)*(sj9));
IkReal x3328=((cj13)*(cj14));
IkReal x3329=((IkReal(1.00000000000000))*(cj14));
IkReal x3330=((IkReal(1.00000000000000))*(cj10));
IkReal x3331=((cj9)*(r01));
IkReal x3332=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x3333=((sj10)*(x3325));
IkReal x3334=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x3335=((IkReal(1.00000000000000))*(sj10)*(x3324));
IkReal x3336=((x3325)*(x3330));
IkReal x3337=((x3336)+(x3335));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3333)))+(((cj10)*(x3324))));
evalcond[1]=((((r20)*(x3328)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x3326)))+(((IkReal(-1.00000000000000))*(x3337))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3327)*(x3329)))+(((IkReal(-1.00000000000000))*(sj14)*(x3332)))+(((IkReal(-1.00000000000000))*(sj14)*(x3334)))+(((IkReal(-1.00000000000000))*(x3337)))+(((IkReal(-1.00000000000000))*(x3329)*(x3331))));
evalcond[3]=((x3333)+(((cj9)*(r02)*(sj13)))+(((x3326)*(x3327)))+(((IkReal(-1.00000000000000))*(x3324)*(x3330)))+(((x3326)*(x3331)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x3328)*(x3334)))+(((IkReal(-1.00000000000000))*(x3328)*(x3332))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3338=((IkReal(0.0100000000000000))*(cj14));
IkReal x3339=((r10)*(sj9));
IkReal x3340=((cj9)*(r11));
IkReal x3341=((sj13)*(sj14));
IkReal x3342=((cj9)*(r00));
IkReal x3343=((IkReal(0.374290000000000))*(cj14));
IkReal x3344=((cj9)*(r01));
IkReal x3345=((r01)*(sj9));
IkReal x3346=((IkReal(0.0100000000000000))*(sj14));
IkReal x3347=((IkReal(0.374290000000000))*(sj14));
IkReal x3348=((r00)*(sj9));
IkReal x3349=((cj13)*(r02));
IkReal x3350=((cj9)*(r10));
IkReal x3351=((IkReal(1.00000000000000))*(sj9));
IkReal x3352=((IkReal(1.00000000000000))*(cj9));
IkReal x3353=((cj13)*(r12));
IkReal x3354=((r11)*(sj9));
IkReal x3355=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3341)))+(((r20)*(x3355)))+(((IkReal(-1.00000000000000))*(sj11)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x3338)))+(((IkReal(0.0690000000000000))*(cj11)))+(pz)+(((r21)*(x3346)))+(((r21)*(x3343)))+(((r20)*(x3347))));
evalcond[3]=((((x3340)*(x3341)))+(((IkReal(-1.00000000000000))*(x3352)*(x3353)))+(((IkReal(-1.00000000000000))*(x3350)*(x3355)))+(cj11)+(((sj9)*(x3349)))+(((IkReal(-1.00000000000000))*(x3341)*(x3345)))+(((x3348)*(x3355))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3349)*(x3352)))+(((IkReal(-1.00000000000000))*(x3342)*(x3355)))+(((x3341)*(x3344)))+(((IkReal(-1.00000000000000))*(x3351)*(x3353)))+(((x3341)*(x3354)))+(((IkReal(-1.00000000000000))*(x3339)*(x3355))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3340)*(x3343)))+(((IkReal(-1.00000000000000))*(x3340)*(x3346)))+(((x3343)*(x3345)))+(((x3347)*(x3348)))+(((IkReal(-1.00000000000000))*(x3347)*(x3350)))+(((IkReal(-1.00000000000000))*(x3338)*(x3348)))+(((IkReal(-1.00000000000000))*(py)*(x3352)))+(((x3338)*(x3350)))+(((IkReal(0.0690000000000000))*(sj11)))+(((x3345)*(x3346)))+(((px)*(sj9))));
evalcond[6]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x3343)*(x3344)))+(((IkReal(-1.00000000000000))*(x3346)*(x3354)))+(((IkReal(-1.00000000000000))*(x3343)*(x3354)))+(((x3338)*(x3342)))+(((IkReal(-1.00000000000000))*(py)*(x3351)))+(((IkReal(-1.00000000000000))*(x3339)*(x3347)))+(((IkReal(-1.00000000000000))*(px)*(x3352)))+(((IkReal(-1.00000000000000))*(x3342)*(x3347)))+(((x3338)*(x3339)))+(((IkReal(-1.00000000000000))*(x3344)*(x3346))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3356=((IkReal(0.0100000000000000))*(cj14));
IkReal x3357=((r10)*(sj9));
IkReal x3358=((cj9)*(r11));
IkReal x3359=((sj13)*(sj14));
IkReal x3360=((cj9)*(r00));
IkReal x3361=((IkReal(0.374290000000000))*(cj14));
IkReal x3362=((cj9)*(r01));
IkReal x3363=((r01)*(sj9));
IkReal x3364=((IkReal(0.0100000000000000))*(sj14));
IkReal x3365=((r00)*(sj9));
IkReal x3366=((IkReal(0.374290000000000))*(sj14));
IkReal x3367=((cj13)*(r02));
IkReal x3368=((cj9)*(r12));
IkReal x3369=((IkReal(1.00000000000000))*(sj9));
IkReal x3370=((IkReal(1.00000000000000))*(cj9));
IkReal x3371=((r11)*(sj9));
IkReal x3372=((cj9)*(r10));
IkReal x3373=((cj14)*(sj13));
IkReal x3374=((IkReal(1.00000000000000))*(cj13));
IkReal x3375=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3359)))+(((r20)*(x3373)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((r21)*(x3364)))+(((r21)*(x3361)))+(((IkReal(-1.00000000000000))*(r20)*(x3356)))+(pz)+(((r20)*(x3366))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x3358)))+(((sj14)*(x3365)))+(((cj14)*(x3363)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3370))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj9)*(x3367)))+(((x3358)*(x3359)))+(((IkReal(-1.00000000000000))*(x3359)*(x3363)))+(((x3365)*(x3373)))+(((IkReal(-1.00000000000000))*(x3368)*(x3374)))+(((IkReal(-1.00000000000000))*(r10)*(x3370)*(x3373))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3369)))+(((IkReal(-1.00000000000000))*(sj14)*(x3363)*(x3374)))+(((cj13)*(sj14)*(x3358)))+(((x3365)*(x3375)))+(((sj13)*(x3368)))+(((IkReal(-1.00000000000000))*(r10)*(x3370)*(x3375))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3367)*(x3370)))+(((IkReal(-1.00000000000000))*(x3357)*(x3373)))+(((IkReal(-1.00000000000000))*(x3360)*(x3373)))+(((x3359)*(x3362)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3369)))+(((x3359)*(x3371))));
evalcond[7]=((((x3363)*(x3364)))+(((IkReal(-1.00000000000000))*(py)*(x3370)))+(((x3365)*(x3366)))+(((IkReal(-1.00000000000000))*(x3366)*(x3372)))+(((x3361)*(x3363)))+(((x3356)*(x3372)))+(((IkReal(-1.00000000000000))*(x3356)*(x3365)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x3358)*(x3361)))+(((IkReal(-1.00000000000000))*(x3358)*(x3364))));
evalcond[8]=((IkReal(0.433420000000000))+(((x3356)*(x3360)))+(((IkReal(-1.00000000000000))*(x3361)*(x3362)))+(((IkReal(-1.00000000000000))*(x3360)*(x3366)))+(((IkReal(-1.00000000000000))*(py)*(x3369)))+(((IkReal(-1.00000000000000))*(x3362)*(x3364)))+(((IkReal(-1.00000000000000))*(x3357)*(x3366)))+(((IkReal(-1.00000000000000))*(x3361)*(x3371)))+(((IkReal(-1.00000000000000))*(px)*(x3370)))+(((x3356)*(x3357)))+(((IkReal(-1.00000000000000))*(x3364)*(x3371))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3376=IKcos(j12);
IkReal x3377=((cj13)*(sj9));
IkReal x3378=((IkReal(1.00000000000000))*(cj14));
IkReal x3379=((cj13)*(sj14));
IkReal x3380=((cj9)*(r00));
IkReal x3381=((cj9)*(r01));
IkReal x3382=((IkReal(1.00000000000000))*(sj14));
IkReal x3383=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3383))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x3376)+(((IkReal(-1.00000000000000))*(r21)*(x3379)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3376)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3382)))+(((IkReal(-1.00000000000000))*(x3378)*(x3381)))+(((IkReal(-1.00000000000000))*(x3380)*(x3382)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3378))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((x3379)*(x3381)))+(((IkReal(-1.00000000000000))*(cj13)*(x3378)*(x3380)))+(((IkReal(-1.00000000000000))*(r10)*(x3377)*(x3378)))+(((IkReal(-1.00000000000000))*(x3383)))+(((r11)*(sj14)*(x3377)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3384=((IkReal(0.0100000000000000))*(cj14));
IkReal x3385=((r10)*(sj9));
IkReal x3386=((cj9)*(r11));
IkReal x3387=((sj13)*(sj14));
IkReal x3388=((cj9)*(r00));
IkReal x3389=((IkReal(0.374290000000000))*(cj14));
IkReal x3390=((cj9)*(r01));
IkReal x3391=((r01)*(sj9));
IkReal x3392=((IkReal(0.0100000000000000))*(sj14));
IkReal x3393=((r00)*(sj9));
IkReal x3394=((IkReal(0.374290000000000))*(sj14));
IkReal x3395=((cj13)*(r02));
IkReal x3396=((cj9)*(r12));
IkReal x3397=((IkReal(1.00000000000000))*(sj9));
IkReal x3398=((IkReal(1.00000000000000))*(cj9));
IkReal x3399=((r11)*(sj9));
IkReal x3400=((cj9)*(r10));
IkReal x3401=((cj14)*(sj13));
IkReal x3402=((IkReal(1.00000000000000))*(cj13));
IkReal x3403=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3387)))+(((r20)*(x3401)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((r20)*(x3394)))+(((r21)*(x3389)))+(((r21)*(x3392)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x3384))));
evalcond[3]=((((sj14)*(x3393)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3398)))+(((cj14)*(x3391)))+(((IkReal(-1.00000000000000))*(cj14)*(x3386))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3398)*(x3401)))+(((IkReal(-1.00000000000000))*(x3396)*(x3402)))+(((sj9)*(x3395)))+(((IkReal(-1.00000000000000))*(x3387)*(x3391)))+(((x3393)*(x3401)))+(((x3386)*(x3387))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3398)*(x3403)))+(((cj13)*(sj14)*(x3386)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3397)))+(((sj13)*(x3396)))+(((IkReal(-1.00000000000000))*(sj14)*(x3391)*(x3402)))+(((x3393)*(x3403))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3388)*(x3401)))+(((IkReal(-1.00000000000000))*(x3395)*(x3398)))+(((x3387)*(x3399)))+(((x3387)*(x3390)))+(((IkReal(-1.00000000000000))*(x3385)*(x3401)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3397))));
evalcond[7]=((((IkReal(-1.00000000000000))*(py)*(x3398)))+(((IkReal(-1.00000000000000))*(x3394)*(x3400)))+(((x3391)*(x3392)))+(((IkReal(-1.00000000000000))*(x3384)*(x3393)))+(((x3389)*(x3391)))+(((x3393)*(x3394)))+(((IkReal(-1.00000000000000))*(x3386)*(x3392)))+(((x3384)*(x3400)))+(((IkReal(-1.00000000000000))*(x3386)*(x3389)))+(((px)*(sj9))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(py)*(x3397)))+(((IkReal(-1.00000000000000))*(x3392)*(x3399)))+(((IkReal(-1.00000000000000))*(x3385)*(x3394)))+(((IkReal(-1.00000000000000))*(x3389)*(x3399)))+(((IkReal(-1.00000000000000))*(x3389)*(x3390)))+(((x3384)*(x3388)))+(((x3384)*(x3385)))+(((IkReal(-1.00000000000000))*(px)*(x3398)))+(((IkReal(-1.00000000000000))*(x3388)*(x3394)))+(((IkReal(-1.00000000000000))*(x3390)*(x3392))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3404=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x3404))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3404))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x3404)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3404)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x3404)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3404)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3405=IKsin(j12);
IkReal x3406=((cj13)*(sj9));
IkReal x3407=((IkReal(1.00000000000000))*(cj14));
IkReal x3408=((cj13)*(sj14));
IkReal x3409=((cj9)*(r00));
IkReal x3410=((cj9)*(r01));
IkReal x3411=((IkReal(1.00000000000000))*(sj14));
IkReal x3412=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x3405));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x3408)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x3412))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3407)*(x3410)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3411)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3407)))+(((IkReal(-1.00000000000000))*(x3409)*(x3411)))+(((IkReal(-1.00000000000000))*(x3412))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x3407)*(x3409)))+(((IkReal(-1.00000000000000))*(x3405)))+(((x3408)*(x3410)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj14)*(x3406)))+(((IkReal(-1.00000000000000))*(r10)*(x3406)*(x3407)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3413=((IkReal(0.0100000000000000))*(cj14));
IkReal x3414=((r10)*(sj9));
IkReal x3415=((cj9)*(r11));
IkReal x3416=((sj13)*(sj14));
IkReal x3417=((cj14)*(r21));
IkReal x3418=((cj9)*(r00));
IkReal x3419=((IkReal(0.374290000000000))*(cj14));
IkReal x3420=((cj9)*(r01));
IkReal x3421=((r01)*(sj9));
IkReal x3422=((IkReal(0.0100000000000000))*(sj14));
IkReal x3423=((IkReal(1.00000000000000))*(sj13));
IkReal x3424=((r00)*(sj9));
IkReal x3425=((IkReal(0.374290000000000))*(sj14));
IkReal x3426=((cj13)*(sj9));
IkReal x3427=((IkReal(1.00000000000000))*(cj13));
IkReal x3428=((IkReal(1.00000000000000))*(py));
IkReal x3429=((r11)*(sj9));
IkReal x3430=((cj9)*(r10));
IkReal x3431=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x3417));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x3431)))+(((IkReal(-1.00000000000000))*(r21)*(x3416)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x3425)))+(((IkReal(-1.00000000000000))*(r20)*(x3413)))+(((IkReal(0.374290000000000))*(x3417)))+(pz)+(((r21)*(x3422))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x3423)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3427))));
evalcond[5]=((((x3424)*(x3431)))+(((IkReal(-1.00000000000000))*(cj14)*(x3423)*(x3430)))+(((IkReal(-1.00000000000000))*(x3416)*(x3421)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x3427)))+(((x3415)*(x3416)))+(((r02)*(x3426))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x3418)*(x3423)))+(((IkReal(-1.00000000000000))*(r12)*(x3426)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x3427)))+(((x3416)*(x3429)))+(((x3416)*(x3420)))+(((IkReal(-1.00000000000000))*(cj14)*(x3414)*(x3423))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x3424)*(x3425)))+(((IkReal(-1.00000000000000))*(x3415)*(x3419)))+(((x3413)*(x3430)))+(((IkReal(-1.00000000000000))*(x3425)*(x3430)))+(((IkReal(-1.00000000000000))*(x3413)*(x3424)))+(((IkReal(-1.00000000000000))*(x3415)*(x3422)))+(((x3421)*(x3422)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x3428)))+(((x3419)*(x3421))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x3428)))+(((IkReal(-1.00000000000000))*(x3420)*(x3422)))+(((IkReal(-1.00000000000000))*(x3419)*(x3429)))+(((IkReal(-1.00000000000000))*(x3419)*(x3420)))+(((x3413)*(x3414)))+(((x3413)*(x3418)))+(((IkReal(-1.00000000000000))*(x3418)*(x3425)))+(((IkReal(-1.00000000000000))*(x3422)*(x3429)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x3414)*(x3425))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3432=((r00)*(sj14));
IkReal x3433=((cj14)*(sj9));
IkReal x3434=((IkReal(1.00000000000000))*(r11));
IkReal x3435=((IkReal(1.00000000000000))*(cj9));
IkReal x3436=((r10)*(sj14));
if( IKabs(((((r01)*(x3433)))+(((sj9)*(x3432)))+(((IkReal(-1.00000000000000))*(x3435)*(x3436)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3434))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x3432)*(x3435)))+(((IkReal(-1.00000000000000))*(x3433)*(x3434)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3435)))+(((IkReal(-1.00000000000000))*(sj9)*(x3436))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(x3433)))+(((sj9)*(x3432)))+(((IkReal(-1.00000000000000))*(x3435)*(x3436)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3434)))))+IKsqr(((((IkReal(-1.00000000000000))*(x3432)*(x3435)))+(((IkReal(-1.00000000000000))*(x3433)*(x3434)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3435)))+(((IkReal(-1.00000000000000))*(sj9)*(x3436)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((r01)*(x3433)))+(((sj9)*(x3432)))+(((IkReal(-1.00000000000000))*(x3435)*(x3436)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x3434)))), ((((IkReal(-1.00000000000000))*(x3432)*(x3435)))+(((IkReal(-1.00000000000000))*(x3433)*(x3434)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3435)))+(((IkReal(-1.00000000000000))*(sj9)*(x3436)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3437=IKcos(j12);
IkReal x3438=((cj9)*(sj14));
IkReal x3439=((IkReal(1.00000000000000))*(r00));
IkReal x3440=((cj14)*(sj9));
IkReal x3441=((IkReal(1.00000000000000))*(r11));
IkReal x3442=((cj13)*(r01));
IkReal x3443=((IkReal(1.00000000000000))*(r10));
IkReal x3444=((cj9)*(sj13));
IkReal x3445=((cj14)*(cj9));
IkReal x3446=((sj14)*(sj9));
IkReal x3447=((sj13)*(sj9));
IkReal x3448=((cj13)*(r11));
IkReal x3449=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3438)*(x3443)))+(((IkReal(-1.00000000000000))*(x3441)*(x3445)))+(((r01)*(x3440)))+(((r00)*(x3446)))+(((IkReal(-1.00000000000000))*(x3449))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x3445)))+(((IkReal(-1.00000000000000))*(x3438)*(x3439)))+(((IkReal(-1.00000000000000))*(x3437)))+(((IkReal(-1.00000000000000))*(x3443)*(x3446)))+(((IkReal(-1.00000000000000))*(x3440)*(x3441))));
evalcond[2]=((((x3438)*(x3448)))+(((r12)*(x3444)))+(((IkReal(-1.00000000000000))*(x3442)*(x3446)))+(x3437)+(((cj13)*(r00)*(x3440)))+(((IkReal(-1.00000000000000))*(cj13)*(x3443)*(x3445)))+(((IkReal(-1.00000000000000))*(r02)*(x3447))));
evalcond[3]=((((x3438)*(x3442)))+(((IkReal(-1.00000000000000))*(cj13)*(x3440)*(x3443)))+(((r12)*(x3447)))+(((r02)*(x3444)))+(((IkReal(-1.00000000000000))*(cj13)*(x3439)*(x3445)))+(((x3446)*(x3448)))+(((IkReal(-1.00000000000000))*(x3449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3450=((IkReal(0.0100000000000000))*(cj14));
IkReal x3451=((r10)*(sj9));
IkReal x3452=((cj9)*(r11));
IkReal x3453=((sj13)*(sj14));
IkReal x3454=((cj14)*(r21));
IkReal x3455=((cj9)*(r00));
IkReal x3456=((IkReal(0.374290000000000))*(cj14));
IkReal x3457=((cj9)*(r01));
IkReal x3458=((r01)*(sj9));
IkReal x3459=((IkReal(0.0100000000000000))*(sj14));
IkReal x3460=((IkReal(1.00000000000000))*(sj13));
IkReal x3461=((r00)*(sj9));
IkReal x3462=((IkReal(0.374290000000000))*(sj14));
IkReal x3463=((cj13)*(sj9));
IkReal x3464=((IkReal(1.00000000000000))*(cj13));
IkReal x3465=((IkReal(1.00000000000000))*(py));
IkReal x3466=((r11)*(sj9));
IkReal x3467=((cj9)*(r10));
IkReal x3468=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x3454));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x3453)))+(((r20)*(x3468)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x3459)))+(((r20)*(x3462)))+(((IkReal(-1.00000000000000))*(r20)*(x3450)))+(pz)+(((IkReal(0.374290000000000))*(x3454))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3464)))+(((IkReal(-1.00000000000000))*(r22)*(x3460))));
evalcond[5]=((((x3461)*(x3468)))+(((IkReal(-1.00000000000000))*(cj14)*(x3460)*(x3467)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x3464)))+(((IkReal(-1.00000000000000))*(x3453)*(x3458)))+(((r02)*(x3463)))+(((x3452)*(x3453))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x3451)*(x3460)))+(((x3453)*(x3457)))+(((IkReal(-1.00000000000000))*(cj14)*(x3455)*(x3460)))+(((x3453)*(x3466)))+(((IkReal(-1.00000000000000))*(r12)*(x3463)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x3464))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x3461)*(x3462)))+(((IkReal(-1.00000000000000))*(x3462)*(x3467)))+(((IkReal(-1.00000000000000))*(cj9)*(x3465)))+(((IkReal(-1.00000000000000))*(x3450)*(x3461)))+(((x3458)*(x3459)))+(((px)*(sj9)))+(((x3450)*(x3467)))+(((IkReal(-1.00000000000000))*(x3452)*(x3459)))+(((IkReal(-1.00000000000000))*(x3452)*(x3456)))+(((x3456)*(x3458))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x3457)*(x3459)))+(((IkReal(-1.00000000000000))*(x3459)*(x3466)))+(((IkReal(-1.00000000000000))*(x3451)*(x3462)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x3456)*(x3466)))+(((IkReal(-1.00000000000000))*(x3455)*(x3462)))+(((IkReal(-1.00000000000000))*(sj9)*(x3465)))+(((x3450)*(x3451)))+(((x3450)*(x3455)))+(((IkReal(-1.00000000000000))*(x3456)*(x3457))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3469=((cj14)*(r11));
IkReal x3470=((IkReal(1.00000000000000))*(sj9));
IkReal x3471=((cj14)*(r01));
IkReal x3472=((r00)*(sj14));
IkReal x3473=((r10)*(sj14));
IkReal x3474=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x3469)))+(((cj9)*(x3473)))+(((IkReal(-1.00000000000000))*(x3470)*(x3472)))+(((IkReal(-1.00000000000000))*(x3470)*(x3471))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x3472)*(x3474)))+(((IkReal(-1.00000000000000))*(x3471)*(x3474)))+(((IkReal(-1.00000000000000))*(x3469)*(x3470)))+(((IkReal(-1.00000000000000))*(x3470)*(x3473))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x3469)))+(((cj9)*(x3473)))+(((IkReal(-1.00000000000000))*(x3470)*(x3472)))+(((IkReal(-1.00000000000000))*(x3470)*(x3471)))))+IKsqr(((((IkReal(-1.00000000000000))*(x3472)*(x3474)))+(((IkReal(-1.00000000000000))*(x3471)*(x3474)))+(((IkReal(-1.00000000000000))*(x3469)*(x3470)))+(((IkReal(-1.00000000000000))*(x3470)*(x3473)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x3469)))+(((cj9)*(x3473)))+(((IkReal(-1.00000000000000))*(x3470)*(x3472)))+(((IkReal(-1.00000000000000))*(x3470)*(x3471)))), ((((IkReal(-1.00000000000000))*(x3472)*(x3474)))+(((IkReal(-1.00000000000000))*(x3471)*(x3474)))+(((IkReal(-1.00000000000000))*(x3469)*(x3470)))+(((IkReal(-1.00000000000000))*(x3470)*(x3473)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3475=IKsin(j12);
IkReal x3476=((cj13)*(r10));
IkReal x3477=((cj9)*(sj14));
IkReal x3478=((cj13)*(r01));
IkReal x3479=((IkReal(1.00000000000000))*(r10));
IkReal x3480=((cj14)*(r01));
IkReal x3481=((cj9)*(sj13));
IkReal x3482=((IkReal(1.00000000000000))*(cj9));
IkReal x3483=((sj14)*(sj9));
IkReal x3484=((sj13)*(sj9));
IkReal x3485=((cj13)*(r11));
IkReal x3486=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x3487=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3488=((cj13)*(cj14)*(r00));
evalcond[0]=((((sj9)*(x3480)))+(((r00)*(x3483)))+(x3475)+(((IkReal(-1.00000000000000))*(x3477)*(x3479)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3482))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3479)*(x3483)))+(((IkReal(-1.00000000000000))*(r11)*(x3487)))+(((IkReal(-1.00000000000000))*(r00)*(x3477)))+(((IkReal(-1.00000000000000))*(x3486)))+(((IkReal(-1.00000000000000))*(x3480)*(x3482))));
evalcond[2]=((((sj9)*(x3488)))+(((IkReal(-1.00000000000000))*(x3478)*(x3483)))+(((IkReal(-1.00000000000000))*(r02)*(x3484)))+(((x3477)*(x3485)))+(((r12)*(x3481)))+(((IkReal(-1.00000000000000))*(cj14)*(x3476)*(x3482)))+(((IkReal(-1.00000000000000))*(x3486))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3482)*(x3488)))+(((x3477)*(x3478)))+(((x3483)*(x3485)))+(((r12)*(x3484)))+(((IkReal(-1.00000000000000))*(x3475)))+(((IkReal(-1.00000000000000))*(x3476)*(x3487)))+(((r02)*(x3481))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3489=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3489)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3489))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3489)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3489)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3489)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3489)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3490=IKsin(j12);
IkReal x3491=IKcos(j12);
IkReal x3492=((IkReal(1.00000000000000))*(sj13));
IkReal x3493=((cj13)*(r10));
IkReal x3494=((cj9)*(sj14));
IkReal x3495=((cj13)*(r01));
IkReal x3496=((IkReal(1.00000000000000))*(r10));
IkReal x3497=((r12)*(sj13));
IkReal x3498=((cj13)*(sj14));
IkReal x3499=((cj14)*(r01));
IkReal x3500=((cj13)*(cj14));
IkReal x3501=((IkReal(1.00000000000000))*(cj9));
IkReal x3502=((sj14)*(sj9));
IkReal x3503=((IkReal(1.00000000000000))*(x3490));
IkReal x3504=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj11)*(x3503)))+(((r20)*(sj14))));
evalcond[1]=((((r20)*(x3500)))+(((IkReal(-1.00000000000000))*(r22)*(x3492)))+(((IkReal(-1.00000000000000))*(r21)*(x3498)))+(((cj11)*(x3491))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3494)*(x3496)))+(((r00)*(x3502)))+(((sj9)*(x3499)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3501)))+(((IkReal(-1.00000000000000))*(sj11)*(x3503))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3494)))+(((IkReal(-1.00000000000000))*(x3496)*(x3502)))+(((IkReal(-1.00000000000000))*(x3499)*(x3501)))+(((IkReal(-1.00000000000000))*(x3491)))+(((IkReal(-1.00000000000000))*(r11)*(x3504))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x3493)*(x3501)))+(((r00)*(sj9)*(x3500)))+(((cj13)*(r11)*(x3494)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3492)))+(((sj11)*(x3491)))+(((cj9)*(x3497)))+(((IkReal(-1.00000000000000))*(x3495)*(x3502))));
evalcond[5]=((((r11)*(sj9)*(x3498)))+(((IkReal(-1.00000000000000))*(x3493)*(x3504)))+(((sj9)*(x3497)))+(((cj9)*(r02)*(sj13)))+(((x3494)*(x3495)))+(((IkReal(-1.00000000000000))*(x3503)))+(((IkReal(-1.00000000000000))*(r00)*(x3500)*(x3501))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3505=((IkReal(1.00000000000000))*(cj14));
IkReal x3506=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3505)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3505)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3506)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3506))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3505)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3505)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3506)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3506)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3505)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3505)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3506)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3506)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3507=IKsin(j12);
IkReal x3508=IKcos(j12);
IkReal x3509=((IkReal(1.00000000000000))*(sj13));
IkReal x3510=((cj13)*(r10));
IkReal x3511=((cj9)*(sj14));
IkReal x3512=((cj13)*(r01));
IkReal x3513=((IkReal(1.00000000000000))*(r10));
IkReal x3514=((r12)*(sj13));
IkReal x3515=((cj13)*(sj14));
IkReal x3516=((cj14)*(r01));
IkReal x3517=((cj13)*(cj14));
IkReal x3518=((IkReal(1.00000000000000))*(cj9));
IkReal x3519=((sj14)*(sj9));
IkReal x3520=((IkReal(1.00000000000000))*(x3507));
IkReal x3521=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj11)*(x3520)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3515)))+(((r20)*(x3517)))+(((IkReal(-1.00000000000000))*(r22)*(x3509)))+(((cj11)*(x3508))));
evalcond[2]=((((r00)*(x3519)))+(((IkReal(-1.00000000000000))*(x3511)*(x3513)))+(((sj9)*(x3516)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3518)))+(((IkReal(-1.00000000000000))*(sj11)*(x3520))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3513)*(x3519)))+(((IkReal(-1.00000000000000))*(r00)*(x3511)))+(((IkReal(-1.00000000000000))*(r11)*(x3521)))+(((IkReal(-1.00000000000000))*(x3508)))+(((IkReal(-1.00000000000000))*(x3516)*(x3518))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3512)*(x3519)))+(((cj13)*(r11)*(x3511)))+(((IkReal(-1.00000000000000))*(cj14)*(x3510)*(x3518)))+(((r00)*(sj9)*(x3517)))+(((cj9)*(x3514)))+(((sj11)*(x3508)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3509))));
evalcond[5]=((((r11)*(sj9)*(x3515)))+(((IkReal(-1.00000000000000))*(x3520)))+(((IkReal(-1.00000000000000))*(x3510)*(x3521)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x3514)))+(((x3511)*(x3512)))+(((IkReal(-1.00000000000000))*(r00)*(x3517)*(x3518))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3522=IKsin(j12);
IkReal x3523=IKcos(j12);
IkReal x3524=((IkReal(1.00000000000000))*(sj13));
IkReal x3525=((cj13)*(r10));
IkReal x3526=((cj9)*(sj14));
IkReal x3527=((cj13)*(r01));
IkReal x3528=((IkReal(1.00000000000000))*(r10));
IkReal x3529=((r12)*(sj13));
IkReal x3530=((cj13)*(sj14));
IkReal x3531=((cj14)*(r01));
IkReal x3532=((cj13)*(cj14));
IkReal x3533=((IkReal(1.00000000000000))*(cj9));
IkReal x3534=((sj14)*(sj9));
IkReal x3535=((IkReal(1.00000000000000))*(x3522));
IkReal x3536=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x3535))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3530)))+(((IkReal(-1.00000000000000))*(r22)*(x3524)))+(((r20)*(x3532)))+(((cj11)*(x3523))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3526)*(x3528)))+(((IkReal(-1.00000000000000))*(sj11)*(x3535)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3533)))+(((sj9)*(x3531)))+(((r00)*(x3534))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3523)))+(((IkReal(-1.00000000000000))*(r11)*(x3536)))+(((IkReal(-1.00000000000000))*(x3531)*(x3533)))+(((IkReal(-1.00000000000000))*(x3528)*(x3534)))+(((IkReal(-1.00000000000000))*(r00)*(x3526))));
evalcond[4]=((((cj13)*(r11)*(x3526)))+(((IkReal(-1.00000000000000))*(cj14)*(x3525)*(x3533)))+(((r00)*(sj9)*(x3532)))+(((cj9)*(x3529)))+(((sj11)*(x3523)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3524)))+(((IkReal(-1.00000000000000))*(x3527)*(x3534))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3525)*(x3536)))+(((x3526)*(x3527)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x3529)))+(((IkReal(-1.00000000000000))*(x3535)))+(((r11)*(sj9)*(x3530)))+(((IkReal(-1.00000000000000))*(r00)*(x3532)*(x3533))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3537=((IkReal(0.0100000000000000))*(cj14));
IkReal x3538=((r10)*(sj9));
IkReal x3539=((cj9)*(r11));
IkReal x3540=((sj13)*(sj14));
IkReal x3541=((cj9)*(r00));
IkReal x3542=((IkReal(0.374290000000000))*(cj14));
IkReal x3543=((cj9)*(r01));
IkReal x3544=((r01)*(sj9));
IkReal x3545=((IkReal(0.0100000000000000))*(sj14));
IkReal x3546=((r00)*(sj9));
IkReal x3547=((IkReal(0.374290000000000))*(sj14));
IkReal x3548=((cj13)*(r02));
IkReal x3549=((IkReal(1.00000000000000))*(sj9));
IkReal x3550=((IkReal(1.00000000000000))*(cj9));
IkReal x3551=((cj13)*(r12));
IkReal x3552=((r11)*(sj9));
IkReal x3553=((cj9)*(r10));
IkReal x3554=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3540)))+(((r20)*(x3554)))+(sj11)+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x3547)))+(((r21)*(x3542)))+(((r21)*(x3545)))+(((IkReal(-1.00000000000000))*(r20)*(x3537)))+(pz)+(((IkReal(-0.0690000000000000))*(cj11))));
evalcond[3]=((((x3539)*(x3540)))+(((IkReal(-1.00000000000000))*(r10)*(x3550)*(x3554)))+(((x3546)*(x3554)))+(cj11)+(((IkReal(-1.00000000000000))*(x3550)*(x3551)))+(((sj9)*(x3548)))+(((IkReal(-1.00000000000000))*(x3540)*(x3544))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3548)*(x3550)))+(((x3540)*(x3543)))+(((x3540)*(x3552)))+(((IkReal(-1.00000000000000))*(x3541)*(x3554)))+(((IkReal(-1.00000000000000))*(x3549)*(x3551)))+(((IkReal(-1.00000000000000))*(x3538)*(x3554))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3539)*(x3545)))+(((IkReal(-1.00000000000000))*(x3539)*(x3542)))+(((x3542)*(x3544)))+(((IkReal(-1.00000000000000))*(py)*(x3550)))+(((x3546)*(x3547)))+(((IkReal(0.0690000000000000))*(sj11)))+(((x3544)*(x3545)))+(((IkReal(-1.00000000000000))*(x3537)*(x3546)))+(((px)*(sj9)))+(((x3537)*(x3553)))+(((IkReal(-1.00000000000000))*(x3547)*(x3553))));
evalcond[6]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x3545)*(x3552)))+(((IkReal(-1.00000000000000))*(x3541)*(x3547)))+(((IkReal(-1.00000000000000))*(x3538)*(x3547)))+(((IkReal(-1.00000000000000))*(py)*(x3549)))+(((IkReal(-1.00000000000000))*(x3542)*(x3543)))+(((IkReal(-1.00000000000000))*(x3543)*(x3545)))+(((IkReal(-1.00000000000000))*(x3542)*(x3552)))+(((IkReal(-1.00000000000000))*(px)*(x3550)))+(((x3537)*(x3541)))+(((x3537)*(x3538))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3555=((IkReal(0.0100000000000000))*(cj14));
IkReal x3556=((r10)*(sj9));
IkReal x3557=((cj9)*(r11));
IkReal x3558=((sj13)*(sj14));
IkReal x3559=((cj9)*(r00));
IkReal x3560=((IkReal(0.374290000000000))*(cj14));
IkReal x3561=((cj9)*(r01));
IkReal x3562=((r01)*(sj9));
IkReal x3563=((IkReal(0.0100000000000000))*(sj14));
IkReal x3564=((r00)*(sj9));
IkReal x3565=((IkReal(0.374290000000000))*(sj14));
IkReal x3566=((cj13)*(r02));
IkReal x3567=((cj9)*(r12));
IkReal x3568=((IkReal(1.00000000000000))*(sj9));
IkReal x3569=((IkReal(1.00000000000000))*(cj9));
IkReal x3570=((r11)*(sj9));
IkReal x3571=((cj9)*(r10));
IkReal x3572=((cj14)*(sj13));
IkReal x3573=((IkReal(1.00000000000000))*(cj13));
IkReal x3574=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3558)))+(((r20)*(x3572)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x3555)))+(((r21)*(x3560)))+(((r21)*(x3563)))+(pz)+(((r20)*(x3565))));
evalcond[3]=((((cj14)*(x3562)))+(((sj14)*(x3564)))+(((IkReal(-1.00000000000000))*(cj14)*(x3557)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3569))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3558)*(x3562)))+(((x3564)*(x3572)))+(((IkReal(-1.00000000000000))*(r10)*(x3569)*(x3572)))+(((IkReal(-1.00000000000000))*(x3567)*(x3573)))+(((x3557)*(x3558)))+(((sj9)*(x3566))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj14)*(x3562)*(x3573)))+(((sj13)*(x3567)))+(((x3564)*(x3574)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3568)))+(((IkReal(-1.00000000000000))*(r10)*(x3569)*(x3574)))+(((cj13)*(sj14)*(x3557))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3556)*(x3572)))+(((IkReal(-1.00000000000000))*(x3566)*(x3569)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3568)))+(((IkReal(-1.00000000000000))*(x3559)*(x3572)))+(((x3558)*(x3570)))+(((x3558)*(x3561))));
evalcond[7]=((((IkReal(-1.00000000000000))*(py)*(x3569)))+(((x3562)*(x3563)))+(((IkReal(-1.00000000000000))*(x3565)*(x3571)))+(((IkReal(-1.00000000000000))*(x3555)*(x3564)))+(((px)*(sj9)))+(((x3564)*(x3565)))+(((IkReal(-1.00000000000000))*(x3557)*(x3563)))+(((IkReal(-1.00000000000000))*(x3557)*(x3560)))+(((x3555)*(x3571)))+(((x3560)*(x3562))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(py)*(x3568)))+(((IkReal(-1.00000000000000))*(x3560)*(x3570)))+(((IkReal(-1.00000000000000))*(x3560)*(x3561)))+(((IkReal(-1.00000000000000))*(x3561)*(x3563)))+(((IkReal(-1.00000000000000))*(px)*(x3569)))+(((IkReal(-1.00000000000000))*(x3559)*(x3565)))+(((IkReal(-1.00000000000000))*(x3556)*(x3565)))+(((x3555)*(x3556)))+(((x3555)*(x3559)))+(((IkReal(-1.00000000000000))*(x3563)*(x3570))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3575=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x3575))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3575))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x3575)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3575)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x3575)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3575)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3576=IKcos(j12);
IkReal x3577=IKsin(j12);
IkReal x3578=((cj13)*(sj9));
IkReal x3579=((IkReal(1.00000000000000))*(cj14));
IkReal x3580=((cj13)*(sj14));
IkReal x3581=((cj9)*(r00));
IkReal x3582=((cj9)*(r01));
IkReal x3583=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x3577));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x3580)))+(((IkReal(-1.00000000000000))*(x3576))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3579)))+(((IkReal(-1.00000000000000))*(x3581)*(x3583)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3583)))+(x3576)+(((IkReal(-1.00000000000000))*(x3579)*(x3582))));
evalcond[3]=((((r11)*(sj14)*(x3578)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r10)*(x3578)*(x3579)))+(x3577)+(((IkReal(-1.00000000000000))*(cj13)*(x3579)*(x3581)))+(((x3580)*(x3582)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3584=((IkReal(0.0100000000000000))*(cj14));
IkReal x3585=((r10)*(sj9));
IkReal x3586=((cj9)*(r11));
IkReal x3587=((sj13)*(sj14));
IkReal x3588=((cj9)*(r00));
IkReal x3589=((IkReal(0.374290000000000))*(cj14));
IkReal x3590=((cj9)*(r01));
IkReal x3591=((r01)*(sj9));
IkReal x3592=((IkReal(0.0100000000000000))*(sj14));
IkReal x3593=((r00)*(sj9));
IkReal x3594=((IkReal(0.374290000000000))*(sj14));
IkReal x3595=((cj13)*(r02));
IkReal x3596=((cj9)*(r12));
IkReal x3597=((IkReal(1.00000000000000))*(sj9));
IkReal x3598=((IkReal(1.00000000000000))*(cj9));
IkReal x3599=((r11)*(sj9));
IkReal x3600=((cj9)*(r10));
IkReal x3601=((cj14)*(sj13));
IkReal x3602=((IkReal(1.00000000000000))*(cj13));
IkReal x3603=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3587)))+(((r20)*(x3601)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((r21)*(x3592)))+(((r20)*(x3594)))+(((IkReal(-1.00000000000000))*(r20)*(x3584)))+(pz)+(((r21)*(x3589))));
evalcond[3]=((((sj14)*(x3593)))+(((IkReal(-1.00000000000000))*(cj14)*(x3586)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3598)))+(((cj14)*(x3591))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3587)*(x3591)))+(((IkReal(-1.00000000000000))*(r10)*(x3598)*(x3601)))+(((x3586)*(x3587)))+(((x3593)*(x3601)))+(((sj9)*(x3595)))+(((IkReal(-1.00000000000000))*(x3596)*(x3602))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x3597)))+(((IkReal(-1.00000000000000))*(r10)*(x3598)*(x3603)))+(((sj13)*(x3596)))+(((x3593)*(x3603)))+(((IkReal(-1.00000000000000))*(sj14)*(x3591)*(x3602)))+(((cj13)*(sj14)*(x3586))));
evalcond[6]=((((x3587)*(x3590)))+(((x3587)*(x3599)))+(((IkReal(-1.00000000000000))*(x3595)*(x3598)))+(((IkReal(-1.00000000000000))*(x3588)*(x3601)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x3597)))+(((IkReal(-1.00000000000000))*(x3585)*(x3601))));
evalcond[7]=((((x3589)*(x3591)))+(((x3591)*(x3592)))+(((IkReal(-1.00000000000000))*(x3594)*(x3600)))+(((x3593)*(x3594)))+(((IkReal(-1.00000000000000))*(x3586)*(x3592)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x3586)*(x3589)))+(((IkReal(-1.00000000000000))*(x3584)*(x3593)))+(((IkReal(-1.00000000000000))*(py)*(x3598)))+(((x3584)*(x3600))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x3589)*(x3590)))+(((IkReal(-1.00000000000000))*(x3589)*(x3599)))+(((x3584)*(x3585)))+(((x3584)*(x3588)))+(((IkReal(-1.00000000000000))*(px)*(x3598)))+(((IkReal(-1.00000000000000))*(x3590)*(x3592)))+(((IkReal(-1.00000000000000))*(x3585)*(x3594)))+(((IkReal(-1.00000000000000))*(x3592)*(x3599)))+(((IkReal(-1.00000000000000))*(py)*(x3597)))+(((IkReal(-1.00000000000000))*(x3588)*(x3594))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3604=IKcos(j12);
IkReal x3605=IKsin(j12);
IkReal x3606=((cj13)*(sj9));
IkReal x3607=((IkReal(1.00000000000000))*(cj14));
IkReal x3608=((cj13)*(sj14));
IkReal x3609=((cj9)*(r00));
IkReal x3610=((cj9)*(r01));
IkReal x3611=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3605))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x3604)+(((IkReal(-1.00000000000000))*(r21)*(x3608))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3611)))+(x3604)+(((IkReal(-1.00000000000000))*(x3607)*(x3610)))+(((IkReal(-1.00000000000000))*(x3609)*(x3611)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3607))));
evalcond[3]=((((x3608)*(x3610)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj14)*(x3606)))+(x3605)+(((IkReal(-1.00000000000000))*(cj13)*(x3607)*(x3609)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(x3606)*(x3607))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3612=((IkReal(0.0100000000000000))*(cj14));
IkReal x3613=((r10)*(sj9));
IkReal x3614=((cj9)*(r11));
IkReal x3615=((sj13)*(sj14));
IkReal x3616=((cj14)*(r21));
IkReal x3617=((cj9)*(r00));
IkReal x3618=((IkReal(0.374290000000000))*(cj14));
IkReal x3619=((cj9)*(r01));
IkReal x3620=((r01)*(sj9));
IkReal x3621=((IkReal(0.0100000000000000))*(sj14));
IkReal x3622=((IkReal(1.00000000000000))*(sj13));
IkReal x3623=((r00)*(sj9));
IkReal x3624=((IkReal(0.374290000000000))*(sj14));
IkReal x3625=((cj13)*(sj9));
IkReal x3626=((IkReal(1.00000000000000))*(cj13));
IkReal x3627=((IkReal(1.00000000000000))*(py));
IkReal x3628=((r11)*(sj9));
IkReal x3629=((cj9)*(r10));
IkReal x3630=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x3616));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x3615)))+(((r20)*(x3630)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(0.374290000000000))*(x3616)))+(((r21)*(x3621)))+(((r20)*(x3624)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x3612))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3626)))+(((IkReal(-1.00000000000000))*(r22)*(x3622))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x3622)*(x3629)))+(((x3623)*(x3630)))+(((IkReal(-1.00000000000000))*(x3615)*(x3620)))+(((r02)*(x3625)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x3626)))+(((x3614)*(x3615))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x3625)))+(((x3615)*(x3628)))+(((IkReal(-1.00000000000000))*(cj14)*(x3613)*(x3622)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x3626)))+(((x3615)*(x3619)))+(((IkReal(-1.00000000000000))*(cj14)*(x3617)*(x3622))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x3614)*(x3621)))+(((IkReal(-1.00000000000000))*(x3624)*(x3629)))+(((x3618)*(x3620)))+(((x3620)*(x3621)))+(((IkReal(-1.00000000000000))*(x3614)*(x3618)))+(((IkReal(-1.00000000000000))*(cj9)*(x3627)))+(((IkReal(-1.00000000000000))*(x3612)*(x3623)))+(((px)*(sj9)))+(((x3623)*(x3624)))+(((x3612)*(x3629))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x3621)*(x3628)))+(((x3612)*(x3613)))+(((x3612)*(x3617)))+(((IkReal(-1.00000000000000))*(sj9)*(x3627)))+(((IkReal(-1.00000000000000))*(x3613)*(x3624)))+(((IkReal(-1.00000000000000))*(x3618)*(x3619)))+(((IkReal(-1.00000000000000))*(x3618)*(x3628)))+(((IkReal(-1.00000000000000))*(x3619)*(x3621)))+(((IkReal(-1.00000000000000))*(x3617)*(x3624)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3631=((r00)*(sj14));
IkReal x3632=((cj14)*(r01));
IkReal x3633=((cj14)*(r11));
IkReal x3634=((r10)*(sj14));
IkReal x3635=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x3634)*(x3635)))+(((sj9)*(x3632)))+(((sj9)*(x3631)))+(((IkReal(-1.00000000000000))*(x3633)*(x3635))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj9)*(x3634)))+(((sj9)*(x3633)))+(((cj9)*(x3632)))+(((cj9)*(x3631))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3634)*(x3635)))+(((sj9)*(x3632)))+(((sj9)*(x3631)))+(((IkReal(-1.00000000000000))*(x3633)*(x3635)))))+IKsqr(((((sj9)*(x3634)))+(((sj9)*(x3633)))+(((cj9)*(x3632)))+(((cj9)*(x3631)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3634)*(x3635)))+(((sj9)*(x3632)))+(((sj9)*(x3631)))+(((IkReal(-1.00000000000000))*(x3633)*(x3635)))), ((((sj9)*(x3634)))+(((sj9)*(x3633)))+(((cj9)*(x3632)))+(((cj9)*(x3631)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3636=IKcos(j12);
IkReal x3637=IKsin(j12);
IkReal x3638=((sj13)*(sj9));
IkReal x3639=((sj14)*(sj9));
IkReal x3640=((cj13)*(r11));
IkReal x3641=((cj9)*(sj14));
IkReal x3642=((cj13)*(r10));
IkReal x3643=((cj13)*(r01));
IkReal x3644=((cj13)*(r00));
IkReal x3645=((cj14)*(sj9));
IkReal x3646=((IkReal(1.00000000000000))*(r10));
IkReal x3647=((cj9)*(sj13));
IkReal x3648=((IkReal(1.00000000000000))*(x3645));
IkReal x3649=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((r01)*(x3645)))+(((IkReal(-1.00000000000000))*(r11)*(x3649)))+(((IkReal(-1.00000000000000))*(x3637)))+(((r00)*(x3639)))+(((IkReal(-1.00000000000000))*(x3641)*(x3646))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3641)))+(((IkReal(-1.00000000000000))*(x3639)*(x3646)))+(x3636)+(((IkReal(-1.00000000000000))*(r11)*(x3648)))+(((IkReal(-1.00000000000000))*(r01)*(x3649))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x3638)))+(((r12)*(x3647)))+(x3636)+(((IkReal(-1.00000000000000))*(x3639)*(x3643)))+(((IkReal(-1.00000000000000))*(x3642)*(x3649)))+(((x3640)*(x3641)))+(((x3644)*(x3645))));
evalcond[3]=((((x3641)*(x3643)))+(((r12)*(x3638)))+(((IkReal(-1.00000000000000))*(x3644)*(x3649)))+(x3637)+(((x3639)*(x3640)))+(((r02)*(x3647)))+(((IkReal(-1.00000000000000))*(x3642)*(x3648))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3650=((IkReal(0.0100000000000000))*(cj14));
IkReal x3651=((r10)*(sj9));
IkReal x3652=((cj9)*(r11));
IkReal x3653=((sj13)*(sj14));
IkReal x3654=((cj14)*(r21));
IkReal x3655=((cj9)*(r00));
IkReal x3656=((IkReal(0.374290000000000))*(cj14));
IkReal x3657=((cj9)*(r01));
IkReal x3658=((r01)*(sj9));
IkReal x3659=((IkReal(0.0100000000000000))*(sj14));
IkReal x3660=((IkReal(1.00000000000000))*(sj13));
IkReal x3661=((r00)*(sj9));
IkReal x3662=((IkReal(0.374290000000000))*(sj14));
IkReal x3663=((cj13)*(sj9));
IkReal x3664=((IkReal(1.00000000000000))*(cj13));
IkReal x3665=((IkReal(1.00000000000000))*(py));
IkReal x3666=((r11)*(sj9));
IkReal x3667=((cj9)*(r10));
IkReal x3668=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x3654));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x3668)))+(((IkReal(-1.00000000000000))*(r21)*(x3653)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x3650)))+(((r21)*(x3659)))+(((IkReal(0.374290000000000))*(x3654)))+(((r20)*(x3662)))+(pz));
evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x3664)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x3660))));
evalcond[5]=((((x3652)*(x3653)))+(((r02)*(x3663)))+(((IkReal(-1.00000000000000))*(cj14)*(x3660)*(x3667)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x3664)))+(((IkReal(-1.00000000000000))*(x3653)*(x3658)))+(((x3661)*(x3668))));
evalcond[6]=((((x3653)*(x3657)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x3664)))+(((IkReal(-1.00000000000000))*(cj14)*(x3655)*(x3660)))+(((IkReal(-1.00000000000000))*(cj14)*(x3651)*(x3660)))+(((x3653)*(x3666)))+(((IkReal(-1.00000000000000))*(r12)*(x3663))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x3662)*(x3667)))+(((IkReal(-1.00000000000000))*(x3650)*(x3661)))+(((x3650)*(x3667)))+(((IkReal(-1.00000000000000))*(cj9)*(x3665)))+(((x3658)*(x3659)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x3652)*(x3659)))+(((IkReal(-1.00000000000000))*(x3652)*(x3656)))+(((x3656)*(x3658)))+(((x3661)*(x3662))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x3665)))+(((IkReal(-1.00000000000000))*(x3651)*(x3662)))+(((x3650)*(x3651)))+(((x3650)*(x3655)))+(((IkReal(-1.00000000000000))*(x3659)*(x3666)))+(((IkReal(-1.00000000000000))*(x3657)*(x3659)))+(((IkReal(-1.00000000000000))*(x3656)*(x3666)))+(((IkReal(-1.00000000000000))*(x3655)*(x3662)))+(((IkReal(-1.00000000000000))*(x3656)*(x3657)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3669=((cj14)*(cj9));
IkReal x3670=((IkReal(1.00000000000000))*(sj9));
IkReal x3671=((r00)*(sj14));
IkReal x3672=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(x3670)*(x3671)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3670)))+(((r11)*(x3669)))+(((cj9)*(x3672))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((sj9)*(x3672)))+(((cj9)*(x3671)))+(((r01)*(x3669))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3670)*(x3671)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3670)))+(((r11)*(x3669)))+(((cj9)*(x3672)))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((sj9)*(x3672)))+(((cj9)*(x3671)))+(((r01)*(x3669)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3670)*(x3671)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3670)))+(((r11)*(x3669)))+(((cj9)*(x3672)))), ((((cj14)*(r11)*(sj9)))+(((sj9)*(x3672)))+(((cj9)*(x3671)))+(((r01)*(x3669)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3673=IKcos(j12);
IkReal x3674=IKsin(j12);
IkReal x3675=((r12)*(sj13));
IkReal x3676=((sj14)*(sj9));
IkReal x3677=((cj13)*(r11));
IkReal x3678=((cj9)*(sj14));
IkReal x3679=((IkReal(1.00000000000000))*(cj14));
IkReal x3680=((cj13)*(cj9));
IkReal x3681=((cj13)*(r01));
IkReal x3682=((cj14)*(sj9));
IkReal x3683=((IkReal(1.00000000000000))*(r10));
IkReal x3684=((r02)*(sj13));
evalcond[0]=((((r00)*(x3676)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x3679)))+(((r01)*(x3682)))+(x3674)+(((IkReal(-1.00000000000000))*(x3678)*(x3683))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3679)))+(((IkReal(-1.00000000000000))*(r00)*(x3678)))+(((IkReal(-1.00000000000000))*(x3676)*(x3683)))+(x3673)+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3679))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3679)*(x3680)))+(((cj13)*(r00)*(x3682)))+(((cj9)*(x3675)))+(((IkReal(-1.00000000000000))*(x3676)*(x3681)))+(((IkReal(-1.00000000000000))*(x3673)))+(((IkReal(-1.00000000000000))*(sj9)*(x3684)))+(((x3677)*(x3678))));
evalcond[3]=((((x3676)*(x3677)))+(((sj9)*(x3675)))+(((x3678)*(x3681)))+(x3674)+(((cj9)*(x3684)))+(((IkReal(-1.00000000000000))*(r00)*(x3679)*(x3680)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x3679))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3685=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x3685)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x3685)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x3685)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x3685)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x3685)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x3685)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3686=IKsin(j12);
IkReal x3687=IKcos(j12);
IkReal x3688=((IkReal(1.00000000000000))*(sj13));
IkReal x3689=((cj13)*(r10));
IkReal x3690=((cj9)*(sj14));
IkReal x3691=((cj13)*(r01));
IkReal x3692=((IkReal(1.00000000000000))*(r10));
IkReal x3693=((r12)*(sj13));
IkReal x3694=((cj13)*(sj14));
IkReal x3695=((cj14)*(r01));
IkReal x3696=((cj13)*(cj14));
IkReal x3697=((IkReal(1.00000000000000))*(cj9));
IkReal x3698=((sj14)*(sj9));
IkReal x3699=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj11)*(x3686)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3688)))+(((r20)*(x3696)))+(((IkReal(-1.00000000000000))*(cj11)*(x3687)))+(((IkReal(-1.00000000000000))*(r21)*(x3694))));
evalcond[2]=((((r00)*(x3698)))+(((IkReal(-1.00000000000000))*(sj11)*(x3686)))+(((sj9)*(x3695)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3697)))+(((IkReal(-1.00000000000000))*(x3690)*(x3692))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3690)))+(((IkReal(-1.00000000000000))*(r11)*(x3699)))+(x3687)+(((IkReal(-1.00000000000000))*(x3695)*(x3697)))+(((IkReal(-1.00000000000000))*(x3692)*(x3698))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3688)))+(((cj13)*(r11)*(x3690)))+(((sj11)*(x3687)))+(((r00)*(sj9)*(x3696)))+(((cj9)*(x3693)))+(((IkReal(-1.00000000000000))*(cj14)*(x3689)*(x3697)))+(((IkReal(-1.00000000000000))*(x3691)*(x3698))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3689)*(x3699)))+(((r11)*(sj9)*(x3694)))+(((sj9)*(x3693)))+(((cj9)*(r02)*(sj13)))+(x3686)+(((IkReal(-1.00000000000000))*(r00)*(x3696)*(x3697)))+(((x3690)*(x3691))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3700=IKsin(j12);
IkReal x3701=IKcos(j12);
IkReal x3702=((IkReal(1.00000000000000))*(sj13));
IkReal x3703=((cj13)*(r10));
IkReal x3704=((cj9)*(sj14));
IkReal x3705=((cj13)*(r01));
IkReal x3706=((IkReal(1.00000000000000))*(r10));
IkReal x3707=((r12)*(sj13));
IkReal x3708=((cj13)*(sj14));
IkReal x3709=((cj14)*(r01));
IkReal x3710=((cj13)*(cj14));
IkReal x3711=((IkReal(1.00000000000000))*(cj9));
IkReal x3712=((sj14)*(sj9));
IkReal x3713=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x3700))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj11)*(x3701)))+(((r20)*(x3710)))+(((IkReal(-1.00000000000000))*(r21)*(x3708)))+(((IkReal(-1.00000000000000))*(r22)*(x3702))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3704)*(x3706)))+(((r00)*(x3712)))+(((sj9)*(x3709)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3711)))+(((IkReal(-1.00000000000000))*(sj11)*(x3700))));
evalcond[3]=((x3701)+(((IkReal(-1.00000000000000))*(r11)*(x3713)))+(((IkReal(-1.00000000000000))*(x3706)*(x3712)))+(((IkReal(-1.00000000000000))*(x3709)*(x3711)))+(((IkReal(-1.00000000000000))*(r00)*(x3704))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x3703)*(x3711)))+(((cj13)*(r11)*(x3704)))+(((sj11)*(x3701)))+(((IkReal(-1.00000000000000))*(x3705)*(x3712)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3702)))+(((cj9)*(x3707)))+(((r00)*(sj9)*(x3710))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3703)*(x3713)))+(((IkReal(-1.00000000000000))*(r00)*(x3710)*(x3711)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x3707)))+(x3700)+(((r11)*(sj9)*(x3708)))+(((x3704)*(x3705))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3714=((IkReal(1.00000000000000))*(r21));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj14)*(x3714)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3714)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(cj14)*(x3714)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x3714)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3715=IKsin(j12);
IkReal x3716=IKcos(j12);
IkReal x3717=((IkReal(1.00000000000000))*(sj13));
IkReal x3718=((cj13)*(r10));
IkReal x3719=((cj9)*(sj14));
IkReal x3720=((cj13)*(r01));
IkReal x3721=((IkReal(1.00000000000000))*(r10));
IkReal x3722=((r12)*(sj13));
IkReal x3723=((cj13)*(sj14));
IkReal x3724=((cj14)*(r01));
IkReal x3725=((cj13)*(cj14));
IkReal x3726=((IkReal(1.00000000000000))*(cj9));
IkReal x3727=((sj14)*(sj9));
IkReal x3728=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x3715))));
evalcond[1]=((((r20)*(x3725)))+(((IkReal(-1.00000000000000))*(r21)*(x3723)))+(((IkReal(-1.00000000000000))*(cj11)*(x3716)))+(((IkReal(-1.00000000000000))*(r22)*(x3717))));
evalcond[2]=((((r00)*(x3727)))+(((IkReal(-1.00000000000000))*(sj11)*(x3715)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3726)))+(((IkReal(-1.00000000000000))*(x3719)*(x3721)))+(((sj9)*(x3724))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3719)))+(((IkReal(-1.00000000000000))*(x3724)*(x3726)))+(((IkReal(-1.00000000000000))*(r11)*(x3728)))+(x3716)+(((IkReal(-1.00000000000000))*(x3721)*(x3727))));
evalcond[4]=((((sj11)*(x3716)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3717)))+(((IkReal(-1.00000000000000))*(cj14)*(x3718)*(x3726)))+(((r00)*(sj9)*(x3725)))+(((cj9)*(x3722)))+(((IkReal(-1.00000000000000))*(x3720)*(x3727)))+(((cj13)*(r11)*(x3719))));
evalcond[5]=((((x3719)*(x3720)))+(((cj9)*(r02)*(sj13)))+(x3715)+(((r11)*(sj9)*(x3723)))+(((IkReal(-1.00000000000000))*(x3718)*(x3728)))+(((IkReal(-1.00000000000000))*(r00)*(x3725)*(x3726)))+(((sj9)*(x3722))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3729=((cj9)*(r11));
IkReal x3730=((sj13)*(sj14));
IkReal x3731=((IkReal(0.0100000000000000))*(cj14));
IkReal x3732=((cj9)*(r00));
IkReal x3733=((IkReal(0.374290000000000))*(cj14));
IkReal x3734=((r10)*(sj9));
IkReal x3735=((r01)*(sj9));
IkReal x3736=((IkReal(0.0100000000000000))*(sj14));
IkReal x3737=((r00)*(sj9));
IkReal x3738=((IkReal(0.374290000000000))*(sj14));
IkReal x3739=((cj13)*(sj9));
IkReal x3740=((cj9)*(r01));
IkReal x3741=((IkReal(1.00000000000000))*(py));
IkReal x3742=((r11)*(sj9));
IkReal x3743=((cj9)*(r10));
IkReal x3744=((cj14)*(sj13));
IkReal x3745=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x3744)))+(((IkReal(-1.00000000000000))*(r21)*(x3730)))+(((IkReal(-1.00000000000000))*(cj10)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x3731)))+(pz)+(((IkReal(0.364420000000000))*(sj10)))+(((r21)*(x3733)))+(((r21)*(x3736)))+(((r20)*(x3738))));
evalcond[3]=((((x3737)*(x3744)))+(((IkReal(-1.00000000000000))*(x3743)*(x3744)))+(((x3729)*(x3730)))+(((r02)*(x3739)))+(((IkReal(-1.00000000000000))*(r12)*(x3745)))+(((IkReal(-1.00000000000000))*(x3730)*(x3735))));
evalcond[4]=((((x3730)*(x3740)))+(((x3730)*(x3742)))+(sj10)+(((IkReal(-1.00000000000000))*(x3734)*(x3744)))+(((IkReal(-1.00000000000000))*(x3732)*(x3744)))+(((IkReal(-1.00000000000000))*(r12)*(x3739)))+(((IkReal(-1.00000000000000))*(r02)*(x3745))));
evalcond[5]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x3741)))+(((x3733)*(x3735)))+(((x3735)*(x3736)))+(((x3731)*(x3743)))+(((IkReal(-1.00000000000000))*(x3731)*(x3737)))+(((IkReal(-1.00000000000000))*(x3729)*(x3736)))+(((IkReal(-1.00000000000000))*(x3729)*(x3733)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x3738)*(x3743)))+(((x3737)*(x3738))));
evalcond[6]=((IkReal(0.0690000000000000))+(((x3731)*(x3734)))+(((x3731)*(x3732)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(sj9)*(x3741)))+(((IkReal(-1.00000000000000))*(x3736)*(x3742)))+(((IkReal(-1.00000000000000))*(x3736)*(x3740)))+(((IkReal(-1.00000000000000))*(x3732)*(x3738)))+(((IkReal(-1.00000000000000))*(x3733)*(x3742)))+(((IkReal(-1.00000000000000))*(x3733)*(x3740)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x3734)*(x3738))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3746=((IkReal(0.0100000000000000))*(cj14));
IkReal x3747=((r10)*(sj9));
IkReal x3748=((cj9)*(sj14));
IkReal x3749=((r11)*(sj13));
IkReal x3750=((cj9)*(r00));
IkReal x3751=((IkReal(1.00000000000000))*(sj9));
IkReal x3752=((cj14)*(r11));
IkReal x3753=((r01)*(sj14));
IkReal x3754=((r21)*(sj14));
IkReal x3755=((IkReal(0.0100000000000000))*(r11));
IkReal x3756=((r00)*(sj9));
IkReal x3757=((IkReal(0.374290000000000))*(sj14));
IkReal x3758=((cj13)*(r02));
IkReal x3759=((IkReal(1.00000000000000))*(cj14));
IkReal x3760=((IkReal(1.00000000000000))*(cj9));
IkReal x3761=((cj13)*(r12));
IkReal x3762=((sj14)*(sj9));
IkReal x3763=((cj9)*(r10));
IkReal x3764=((cj14)*(sj13));
IkReal x3765=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x3754)))+(((r20)*(x3764)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((r20)*(x3757)))+(((IkReal(-1.00000000000000))*(r20)*(x3746)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x3754))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3748)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3759)))+(((IkReal(-1.00000000000000))*(x3751)*(x3752)))+(((IkReal(-1.00000000000000))*(sj14)*(x3747))));
evalcond[4]=((((x3756)*(x3764)))+(((IkReal(-1.00000000000000))*(sj13)*(x3759)*(x3763)))+(((x3748)*(x3749)))+(((IkReal(-1.00000000000000))*(x3760)*(x3761)))+(((sj9)*(x3758)))+(((IkReal(-1.00000000000000))*(sj13)*(x3751)*(x3753))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3751)*(x3761)))+(((x3749)*(x3762)))+(((IkReal(-1.00000000000000))*(sj13)*(x3750)*(x3759)))+(((r01)*(sj13)*(x3748)))+(((IkReal(-1.00000000000000))*(sj13)*(x3747)*(x3759)))+(((IkReal(-1.00000000000000))*(x3758)*(x3760))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x3762)))+(((IkReal(-1.00000000000000))*(cj13)*(x3750)*(x3759)))+(((cj13)*(r01)*(x3748)))+(((IkReal(-1.00000000000000))*(cj13)*(x3747)*(x3759)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x3748)*(x3755)))+(((x3746)*(x3763)))+(((sj9)*(x3765)))+(((IkReal(-0.374290000000000))*(cj9)*(x3752)))+(((IkReal(-1.00000000000000))*(x3746)*(x3756)))+(((x3756)*(x3757)))+(((IkReal(0.0100000000000000))*(sj9)*(x3753)))+(((IkReal(-0.374290000000000))*(r10)*(x3748)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x3760))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(r00)*(x3748)))+(((IkReal(-0.374290000000000))*(sj9)*(x3752)))+(((IkReal(-1.00000000000000))*(x3755)*(x3762)))+(((IkReal(-1.00000000000000))*(x3747)*(x3757)))+(((x3746)*(x3750)))+(((x3746)*(x3747)))+(((IkReal(-0.0100000000000000))*(r01)*(x3748)))+(((IkReal(-1.00000000000000))*(px)*(x3760)))+(((IkReal(-1.00000000000000))*(py)*(x3751)))+(((IkReal(-1.00000000000000))*(cj9)*(x3765))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3766=IKcos(j12);
IkReal x3767=((sj14)*(sj9));
IkReal x3768=((IkReal(1.00000000000000))*(sj13));
IkReal x3769=((cj13)*(sj14));
IkReal x3770=((cj9)*(r11));
IkReal x3771=((IkReal(1.00000000000000))*(cj13));
IkReal x3772=((cj9)*(r10));
IkReal x3773=((cj14)*(sj9));
IkReal x3774=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x3766))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x3768)))+(((IkReal(-1.00000000000000))*(x3774)))+(((IkReal(-1.00000000000000))*(r21)*(x3769))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x3770)))+(((IkReal(-1.00000000000000))*(sj14)*(x3772)))+(((IkReal(-1.00000000000000))*(x3774)))+(((r00)*(x3767)))+(((r01)*(x3773))));
evalcond[3]=((((x3769)*(x3770)))+(((IkReal(-1.00000000000000))*(r01)*(x3767)*(x3771)))+(x3766)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3768)))+(((IkReal(-1.00000000000000))*(cj14)*(x3771)*(x3772)))+(((cj13)*(r00)*(x3773)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3775=((IkReal(0.0100000000000000))*(cj14));
IkReal x3776=((r10)*(sj9));
IkReal x3777=((cj9)*(sj14));
IkReal x3778=((r11)*(sj13));
IkReal x3779=((cj9)*(r00));
IkReal x3780=((IkReal(1.00000000000000))*(sj9));
IkReal x3781=((cj14)*(r11));
IkReal x3782=((r01)*(sj14));
IkReal x3783=((r21)*(sj14));
IkReal x3784=((IkReal(0.0100000000000000))*(r11));
IkReal x3785=((r00)*(sj9));
IkReal x3786=((IkReal(0.374290000000000))*(sj14));
IkReal x3787=((cj13)*(r02));
IkReal x3788=((IkReal(1.00000000000000))*(cj14));
IkReal x3789=((IkReal(1.00000000000000))*(cj9));
IkReal x3790=((cj13)*(r12));
IkReal x3791=((sj14)*(sj9));
IkReal x3792=((cj9)*(r10));
IkReal x3793=((cj14)*(sj13));
IkReal x3794=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x3783)))+(((cj13)*(r22)))+(((r20)*(x3793))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x3775)))+(((r20)*(x3786)))+(((IkReal(0.0100000000000000))*(x3783)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3776)))+(((IkReal(-1.00000000000000))*(x3780)*(x3781)))+(((IkReal(-1.00000000000000))*(r00)*(x3777)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3788))));
evalcond[4]=((((x3777)*(x3778)))+(((IkReal(-1.00000000000000))*(sj13)*(x3780)*(x3782)))+(((sj9)*(x3787)))+(((IkReal(-1.00000000000000))*(sj13)*(x3788)*(x3792)))+(((IkReal(-1.00000000000000))*(x3789)*(x3790)))+(((x3785)*(x3793))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x3776)*(x3788)))+(((IkReal(-1.00000000000000))*(x3780)*(x3790)))+(((IkReal(-1.00000000000000))*(sj13)*(x3779)*(x3788)))+(((r01)*(sj13)*(x3777)))+(((x3778)*(x3791)))+(((IkReal(-1.00000000000000))*(x3787)*(x3789))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x3791)))+(((cj13)*(r01)*(x3777)))+(((IkReal(-1.00000000000000))*(cj13)*(x3776)*(x3788)))+(((IkReal(-1.00000000000000))*(cj13)*(x3779)*(x3788)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x3785)*(x3786)))+(((IkReal(-1.00000000000000))*(x3777)*(x3784)))+(((sj9)*(x3794)))+(((IkReal(-0.374290000000000))*(cj9)*(x3781)))+(((IkReal(-1.00000000000000))*(py)*(x3789)))+(((IkReal(-0.374290000000000))*(r10)*(x3777)))+(((x3775)*(x3792)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x3775)*(x3785)))+(((IkReal(0.0100000000000000))*(sj9)*(x3782))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x3775)*(x3776)))+(((x3775)*(x3779)))+(((IkReal(-1.00000000000000))*(py)*(x3780)))+(((IkReal(-0.374290000000000))*(sj9)*(x3781)))+(((IkReal(-1.00000000000000))*(px)*(x3789)))+(((IkReal(-0.0100000000000000))*(r01)*(x3777)))+(((IkReal(-1.00000000000000))*(x3784)*(x3791)))+(((IkReal(-1.00000000000000))*(cj9)*(x3794)))+(((IkReal(-0.374290000000000))*(r00)*(x3777)))+(((IkReal(-1.00000000000000))*(x3776)*(x3786))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3795=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x3795)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x3795))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x3795)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x3795)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x3795)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x3795)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3796=IKsin(j12);
IkReal x3797=IKcos(j12);
IkReal x3798=((sj14)*(sj9));
IkReal x3799=((IkReal(1.00000000000000))*(sj13));
IkReal x3800=((cj13)*(sj14));
IkReal x3801=((cj9)*(r11));
IkReal x3802=((IkReal(1.00000000000000))*(cj13));
IkReal x3803=((cj9)*(r10));
IkReal x3804=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x3797));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x3799)))+(((IkReal(-1.00000000000000))*(r21)*(x3800)))+(x3796));
evalcond[2]=((((r01)*(x3804)))+(((IkReal(-1.00000000000000))*(x3796)))+(((IkReal(-1.00000000000000))*(sj14)*(x3803)))+(((IkReal(-1.00000000000000))*(cj14)*(x3801)))+(((r00)*(x3798))));
evalcond[3]=((((x3800)*(x3801)))+(((IkReal(-1.00000000000000))*(r01)*(x3798)*(x3802)))+(((IkReal(-1.00000000000000))*(cj14)*(x3802)*(x3803)))+(x3797)+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3799)))+(((cj13)*(r00)*(x3804))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3805=((IkReal(1.00000000000000))*(sj14));
IkReal x3806=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x3805))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3805)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3806)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3806)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3805))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x3805)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3805)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3806)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3806)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3805)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x3805)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x3805)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3806)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x3806)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x3805)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3807=IKsin(j12);
IkReal x3808=IKcos(j12);
IkReal x3809=((IkReal(1.00000000000000))*(sj13));
IkReal x3810=((cj13)*(r10));
IkReal x3811=((IkReal(1.00000000000000))*(cj10));
IkReal x3812=((cj9)*(sj14));
IkReal x3813=((cj13)*(r01));
IkReal x3814=((IkReal(1.00000000000000))*(r10));
IkReal x3815=((cj9)*(sj13));
IkReal x3816=((cj13)*(sj14));
IkReal x3817=((cj14)*(r01));
IkReal x3818=((cj13)*(cj14));
IkReal x3819=((IkReal(1.00000000000000))*(cj9));
IkReal x3820=((sj14)*(sj9));
IkReal x3821=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3822=((IkReal(1.00000000000000))*(x3807));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x3808))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x3822)))+(((IkReal(-1.00000000000000))*(r21)*(x3816)))+(((r20)*(x3818)))+(((IkReal(-1.00000000000000))*(r22)*(x3809))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3819)))+(((sj9)*(x3817)))+(((IkReal(-1.00000000000000))*(x3822)))+(((IkReal(-1.00000000000000))*(x3812)*(x3814)))+(((r00)*(x3820))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3817)*(x3819)))+(((IkReal(-1.00000000000000))*(x3814)*(x3820)))+(((IkReal(-1.00000000000000))*(x3808)*(x3811)))+(((IkReal(-1.00000000000000))*(r00)*(x3812)))+(((IkReal(-1.00000000000000))*(r11)*(x3821))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3813)*(x3820)))+(((r12)*(x3815)))+(((r00)*(sj9)*(x3818)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3809)))+(((cj13)*(r11)*(x3812)))+(x3808)+(((IkReal(-1.00000000000000))*(cj14)*(x3810)*(x3819))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3807)*(x3811)))+(((r11)*(sj9)*(x3816)))+(((IkReal(-1.00000000000000))*(x3810)*(x3821)))+(((IkReal(-1.00000000000000))*(r00)*(x3818)*(x3819)))+(((r02)*(x3815)))+(((x3812)*(x3813)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3823=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3823)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3823))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3823)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3823)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x3823)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3823)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3824=IKsin(j12);
IkReal x3825=IKcos(j12);
IkReal x3826=((IkReal(1.00000000000000))*(sj13));
IkReal x3827=((cj13)*(r10));
IkReal x3828=((IkReal(1.00000000000000))*(cj10));
IkReal x3829=((cj9)*(sj14));
IkReal x3830=((cj13)*(r01));
IkReal x3831=((IkReal(1.00000000000000))*(r10));
IkReal x3832=((cj9)*(sj13));
IkReal x3833=((cj13)*(sj14));
IkReal x3834=((cj14)*(r01));
IkReal x3835=((cj13)*(cj14));
IkReal x3836=((IkReal(1.00000000000000))*(cj9));
IkReal x3837=((sj14)*(sj9));
IkReal x3838=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3839=((IkReal(1.00000000000000))*(x3824));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x3825)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x3826)))+(((IkReal(-1.00000000000000))*(r21)*(x3833)))+(((IkReal(-1.00000000000000))*(sj10)*(x3839)))+(((r20)*(x3835))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3829)*(x3831)))+(((r00)*(x3837)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3836)))+(((sj9)*(x3834)))+(((IkReal(-1.00000000000000))*(x3839))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3831)*(x3837)))+(((IkReal(-1.00000000000000))*(r00)*(x3829)))+(((IkReal(-1.00000000000000))*(x3825)*(x3828)))+(((IkReal(-1.00000000000000))*(r11)*(x3838)))+(((IkReal(-1.00000000000000))*(x3834)*(x3836))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3830)*(x3837)))+(((r00)*(sj9)*(x3835)))+(((r12)*(x3832)))+(((cj13)*(r11)*(x3829)))+(x3825)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3826)))+(((IkReal(-1.00000000000000))*(cj14)*(x3827)*(x3836))));
evalcond[5]=((((r02)*(x3832)))+(((IkReal(-1.00000000000000))*(x3824)*(x3828)))+(((x3829)*(x3830)))+(((r11)*(sj9)*(x3833)))+(((IkReal(-1.00000000000000))*(x3827)*(x3838)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r00)*(x3835)*(x3836))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3840=IKsin(j12);
IkReal x3841=IKcos(j12);
IkReal x3842=((IkReal(1.00000000000000))*(sj13));
IkReal x3843=((cj13)*(r10));
IkReal x3844=((IkReal(1.00000000000000))*(cj10));
IkReal x3845=((cj9)*(sj14));
IkReal x3846=((cj13)*(r01));
IkReal x3847=((IkReal(1.00000000000000))*(r10));
IkReal x3848=((cj9)*(sj13));
IkReal x3849=((cj13)*(sj14));
IkReal x3850=((cj14)*(r01));
IkReal x3851=((cj13)*(cj14));
IkReal x3852=((IkReal(1.00000000000000))*(cj9));
IkReal x3853=((sj14)*(sj9));
IkReal x3854=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3855=((IkReal(1.00000000000000))*(x3840));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x3841)))+(((r20)*(sj14))));
evalcond[1]=((((r20)*(x3851)))+(((IkReal(-1.00000000000000))*(r21)*(x3849)))+(((IkReal(-1.00000000000000))*(sj10)*(x3855)))+(((IkReal(-1.00000000000000))*(r22)*(x3842))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3855)))+(((IkReal(-1.00000000000000))*(x3845)*(x3847)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3852)))+(((sj9)*(x3850)))+(((r00)*(x3853))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3845)))+(((IkReal(-1.00000000000000))*(x3850)*(x3852)))+(((IkReal(-1.00000000000000))*(x3841)*(x3844)))+(((IkReal(-1.00000000000000))*(r11)*(x3854)))+(((IkReal(-1.00000000000000))*(x3847)*(x3853))));
evalcond[4]=((((r12)*(x3848)))+(((IkReal(-1.00000000000000))*(cj14)*(x3843)*(x3852)))+(((cj13)*(r11)*(x3845)))+(((r00)*(sj9)*(x3851)))+(((IkReal(-1.00000000000000))*(x3846)*(x3853)))+(x3841)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3842))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3840)*(x3844)))+(((IkReal(-1.00000000000000))*(x3843)*(x3854)))+(((x3845)*(x3846)))+(((r11)*(sj9)*(x3849)))+(((r12)*(sj13)*(sj9)))+(((r02)*(x3848)))+(((IkReal(-1.00000000000000))*(r00)*(x3851)*(x3852))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3856=((IkReal(0.0100000000000000))*(cj14));
IkReal x3857=((r10)*(sj9));
IkReal x3858=((cj9)*(r11));
IkReal x3859=((sj13)*(sj14));
IkReal x3860=((cj9)*(r00));
IkReal x3861=((IkReal(0.374290000000000))*(cj14));
IkReal x3862=((cj9)*(r01));
IkReal x3863=((r01)*(sj9));
IkReal x3864=((IkReal(0.0100000000000000))*(sj14));
IkReal x3865=((r00)*(sj9));
IkReal x3866=((IkReal(0.374290000000000))*(sj14));
IkReal x3867=((cj13)*(sj9));
IkReal x3868=((IkReal(1.00000000000000))*(py));
IkReal x3869=((r11)*(sj9));
IkReal x3870=((cj9)*(r10));
IkReal x3871=((cj14)*(sj13));
IkReal x3872=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x3871)))+(cj10)+(((IkReal(-1.00000000000000))*(r21)*(x3859)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x3856)))+(((r21)*(x3861)))+(((r21)*(x3864)))+(((r20)*(x3866)))+(pz)+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3870)*(x3871)))+(((r02)*(x3867)))+(((IkReal(-1.00000000000000))*(r12)*(x3872)))+(((x3865)*(x3871)))+(((x3858)*(x3859)))+(((IkReal(-1.00000000000000))*(x3859)*(x3863))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(x3872)))+(((IkReal(-1.00000000000000))*(x3860)*(x3871)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x3857)*(x3871)))+(((x3859)*(x3862)))+(((x3859)*(x3869)))+(((IkReal(-1.00000000000000))*(r12)*(x3867))));
evalcond[5]=((IkReal(-0.0690000000000000))+(((x3856)*(x3870)))+(((IkReal(-1.00000000000000))*(x3866)*(x3870)))+(((x3865)*(x3866)))+(((IkReal(-1.00000000000000))*(x3858)*(x3861)))+(((IkReal(-1.00000000000000))*(x3858)*(x3864)))+(((IkReal(-1.00000000000000))*(x3856)*(x3865)))+(((x3863)*(x3864)))+(((IkReal(-1.00000000000000))*(cj9)*(x3868)))+(((px)*(sj9)))+(((x3861)*(x3863))));
evalcond[6]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x3860)*(x3866)))+(((IkReal(-1.00000000000000))*(x3861)*(x3862)))+(((IkReal(-1.00000000000000))*(x3861)*(x3869)))+(((IkReal(-1.00000000000000))*(sj9)*(x3868)))+(((IkReal(-1.00000000000000))*(x3864)*(x3869)))+(((IkReal(-1.00000000000000))*(x3857)*(x3866)))+(((x3856)*(x3860)))+(((IkReal(0.364420000000000))*(cj10)))+(((x3856)*(x3857)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x3862)*(x3864))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3873=((IkReal(0.0100000000000000))*(cj14));
IkReal x3874=((r10)*(sj9));
IkReal x3875=((cj9)*(sj14));
IkReal x3876=((r11)*(sj13));
IkReal x3877=((cj9)*(r00));
IkReal x3878=((IkReal(1.00000000000000))*(sj9));
IkReal x3879=((cj14)*(r11));
IkReal x3880=((r01)*(sj14));
IkReal x3881=((r21)*(sj14));
IkReal x3882=((IkReal(0.0100000000000000))*(r11));
IkReal x3883=((r00)*(sj9));
IkReal x3884=((IkReal(0.374290000000000))*(sj14));
IkReal x3885=((cj13)*(r02));
IkReal x3886=((IkReal(1.00000000000000))*(cj14));
IkReal x3887=((IkReal(1.00000000000000))*(cj9));
IkReal x3888=((cj13)*(r12));
IkReal x3889=((sj14)*(sj9));
IkReal x3890=((cj9)*(r10));
IkReal x3891=((cj14)*(sj13));
IkReal x3892=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x3891)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(sj13)*(x3881))));
evalcond[2]=((IkReal(0.364420000000000))+(pz)+(((r20)*(x3884)))+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x3881)))+(((IkReal(-1.00000000000000))*(r20)*(x3873))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3886)))+(((IkReal(-1.00000000000000))*(x3878)*(x3879)))+(((IkReal(-1.00000000000000))*(r00)*(x3875)))+(((IkReal(-1.00000000000000))*(sj14)*(x3874))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x3886)*(x3890)))+(((sj9)*(x3885)))+(((x3883)*(x3891)))+(((x3875)*(x3876)))+(((IkReal(-1.00000000000000))*(sj13)*(x3878)*(x3880)))+(((IkReal(-1.00000000000000))*(x3887)*(x3888))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x3877)*(x3886)))+(((x3876)*(x3889)))+(((IkReal(-1.00000000000000))*(x3885)*(x3887)))+(((IkReal(-1.00000000000000))*(x3878)*(x3888)))+(((r01)*(sj13)*(x3875)))+(((IkReal(-1.00000000000000))*(sj13)*(x3874)*(x3886))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x3874)*(x3886)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x3889)))+(((IkReal(-1.00000000000000))*(cj13)*(x3877)*(x3886)))+(((cj13)*(r01)*(x3875)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x3873)*(x3890)))+(((x3883)*(x3884)))+(((IkReal(-0.374290000000000))*(cj9)*(x3879)))+(((IkReal(0.0100000000000000))*(sj9)*(x3880)))+(((IkReal(-1.00000000000000))*(x3873)*(x3883)))+(((IkReal(-0.374290000000000))*(r10)*(x3875)))+(((IkReal(-1.00000000000000))*(py)*(x3887)))+(((px)*(sj9)))+(((sj9)*(x3892)))+(((IkReal(-1.00000000000000))*(x3875)*(x3882))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(r00)*(x3875)))+(((IkReal(-1.00000000000000))*(py)*(x3878)))+(((IkReal(-0.0100000000000000))*(r01)*(x3875)))+(((IkReal(-0.374290000000000))*(sj9)*(x3879)))+(((x3873)*(x3874)))+(((x3873)*(x3877)))+(((IkReal(-1.00000000000000))*(x3874)*(x3884)))+(((IkReal(-1.00000000000000))*(cj9)*(x3892)))+(((IkReal(-1.00000000000000))*(px)*(x3887)))+(((IkReal(-1.00000000000000))*(x3882)*(x3889))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3893=IKsin(j12);
IkReal x3894=((sj14)*(sj9));
IkReal x3895=((IkReal(1.00000000000000))*(sj13));
IkReal x3896=((cj13)*(sj14));
IkReal x3897=((cj9)*(r11));
IkReal x3898=((IkReal(1.00000000000000))*(cj13));
IkReal x3899=((cj9)*(r10));
IkReal x3900=((cj14)*(sj9));
IkReal x3901=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3901)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x3896)))+(((IkReal(-1.00000000000000))*(x3893)))+(((IkReal(-1.00000000000000))*(r22)*(x3895))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x3897)))+(((r01)*(x3900)))+(((r00)*(x3894)))+(x3893)+(((IkReal(-1.00000000000000))*(sj14)*(x3899))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3901)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3895)))+(((x3896)*(x3897)))+(((cj13)*(r00)*(x3900)))+(((IkReal(-1.00000000000000))*(r01)*(x3894)*(x3898)))+(((IkReal(-1.00000000000000))*(cj14)*(x3898)*(x3899)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3902=((IkReal(0.0100000000000000))*(cj14));
IkReal x3903=((r10)*(sj9));
IkReal x3904=((cj9)*(sj14));
IkReal x3905=((r11)*(sj13));
IkReal x3906=((cj9)*(r00));
IkReal x3907=((IkReal(1.00000000000000))*(sj9));
IkReal x3908=((cj14)*(r11));
IkReal x3909=((r01)*(sj14));
IkReal x3910=((r21)*(sj14));
IkReal x3911=((IkReal(0.0100000000000000))*(r11));
IkReal x3912=((r00)*(sj9));
IkReal x3913=((IkReal(0.374290000000000))*(sj14));
IkReal x3914=((cj13)*(r02));
IkReal x3915=((IkReal(1.00000000000000))*(cj14));
IkReal x3916=((IkReal(1.00000000000000))*(cj9));
IkReal x3917=((cj13)*(r12));
IkReal x3918=((sj14)*(sj9));
IkReal x3919=((cj9)*(r10));
IkReal x3920=((cj14)*(sj13));
IkReal x3921=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x3910)))+(((cj13)*(r22)))+(((r20)*(x3920))));
evalcond[2]=((IkReal(-0.364420000000000))+(pz)+(((r20)*(x3913)))+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x3910)))+(((IkReal(-1.00000000000000))*(r20)*(x3902))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x3903)))+(((IkReal(-1.00000000000000))*(r00)*(x3904)))+(((IkReal(-1.00000000000000))*(x3907)*(x3908)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x3915))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x3915)*(x3919)))+(((IkReal(-1.00000000000000))*(sj13)*(x3907)*(x3909)))+(((IkReal(-1.00000000000000))*(x3916)*(x3917)))+(((x3904)*(x3905)))+(((x3912)*(x3920)))+(((sj9)*(x3914))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3914)*(x3916)))+(((x3905)*(x3918)))+(((IkReal(-1.00000000000000))*(sj13)*(x3906)*(x3915)))+(((IkReal(-1.00000000000000))*(x3907)*(x3917)))+(((IkReal(-1.00000000000000))*(sj13)*(x3903)*(x3915)))+(((r01)*(sj13)*(x3904))));
evalcond[6]=((((cj13)*(r11)*(x3918)))+(((IkReal(-1.00000000000000))*(cj13)*(x3903)*(x3915)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x3904)))+(((IkReal(-1.00000000000000))*(cj13)*(x3906)*(x3915)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-0.374290000000000))*(cj9)*(x3908)))+(((IkReal(-1.00000000000000))*(x3902)*(x3912)))+(((IkReal(-1.00000000000000))*(x3904)*(x3911)))+(((sj9)*(x3921)))+(((IkReal(-0.374290000000000))*(r10)*(x3904)))+(((x3902)*(x3919)))+(((IkReal(-1.00000000000000))*(py)*(x3916)))+(((px)*(sj9)))+(((x3912)*(x3913)))+(((IkReal(0.0100000000000000))*(sj9)*(x3909))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x3921)))+(((IkReal(-1.00000000000000))*(x3911)*(x3918)))+(((IkReal(-1.00000000000000))*(px)*(x3916)))+(((IkReal(-1.00000000000000))*(x3903)*(x3913)))+(((IkReal(-0.374290000000000))*(sj9)*(x3908)))+(((x3902)*(x3903)))+(((x3902)*(x3906)))+(((IkReal(-1.00000000000000))*(py)*(x3907)))+(((IkReal(-0.0100000000000000))*(r01)*(x3904)))+(((IkReal(-0.374290000000000))*(r00)*(x3904))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3922=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x3922)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x3922)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x3922)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x3922)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x3922)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x3922)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x3923=IKsin(j12);
IkReal x3924=IKcos(j12);
IkReal x3925=((sj14)*(sj9));
IkReal x3926=((IkReal(1.00000000000000))*(sj13));
IkReal x3927=((cj13)*(sj14));
IkReal x3928=((cj9)*(r11));
IkReal x3929=((IkReal(1.00000000000000))*(cj13));
IkReal x3930=((cj9)*(r10));
IkReal x3931=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x3924));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x3927)))+(x3923)+(((IkReal(-1.00000000000000))*(r22)*(x3926))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x3930)))+(((r01)*(x3931)))+(x3923)+(((IkReal(-1.00000000000000))*(cj14)*(x3928)))+(((r00)*(x3925))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3924)))+(((cj13)*(r00)*(x3931)))+(((IkReal(-1.00000000000000))*(r01)*(x3925)*(x3929)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3926)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(x3929)*(x3930)))+(((x3927)*(x3928))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3932=((cj14)*(r11));
IkReal x3933=((IkReal(1.00000000000000))*(sj9));
IkReal x3934=((cj14)*(r01));
IkReal x3935=((r00)*(sj14));
IkReal x3936=((r10)*(sj14));
IkReal x3937=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x3933)*(x3935)))+(((IkReal(-1.00000000000000))*(x3933)*(x3934)))+(((cj9)*(x3936)))+(((cj9)*(x3932))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3932)*(x3933)))+(((IkReal(-1.00000000000000))*(x3933)*(x3936)))+(((IkReal(-1.00000000000000))*(x3934)*(x3937)))+(((IkReal(-1.00000000000000))*(x3935)*(x3937))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3933)*(x3935)))+(((IkReal(-1.00000000000000))*(x3933)*(x3934)))+(((cj9)*(x3936)))+(((cj9)*(x3932)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3932)*(x3933)))+(((IkReal(-1.00000000000000))*(x3933)*(x3936)))+(((IkReal(-1.00000000000000))*(x3934)*(x3937)))+(((IkReal(-1.00000000000000))*(x3935)*(x3937)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3933)*(x3935)))+(((IkReal(-1.00000000000000))*(x3933)*(x3934)))+(((cj9)*(x3936)))+(((cj9)*(x3932)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3932)*(x3933)))+(((IkReal(-1.00000000000000))*(x3933)*(x3936)))+(((IkReal(-1.00000000000000))*(x3934)*(x3937)))+(((IkReal(-1.00000000000000))*(x3935)*(x3937)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3938=IKsin(j12);
IkReal x3939=IKcos(j12);
IkReal x3940=((IkReal(1.00000000000000))*(sj13));
IkReal x3941=((cj13)*(r10));
IkReal x3942=((cj9)*(sj14));
IkReal x3943=((cj13)*(r01));
IkReal x3944=((IkReal(1.00000000000000))*(r10));
IkReal x3945=((r12)*(sj13));
IkReal x3946=((cj13)*(sj14));
IkReal x3947=((cj14)*(r01));
IkReal x3948=((cj13)*(cj14));
IkReal x3949=((IkReal(1.00000000000000))*(cj9));
IkReal x3950=((sj14)*(sj9));
IkReal x3951=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3952=((IkReal(1.00000000000000))*(x3939));
IkReal x3953=((IkReal(1.00000000000000))*(x3938));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x3952))));
evalcond[1]=((((r20)*(x3948)))+(((IkReal(-1.00000000000000))*(r22)*(x3940)))+(((IkReal(-1.00000000000000))*(sj10)*(x3953)))+(((IkReal(-1.00000000000000))*(r21)*(x3946))));
evalcond[2]=((((r00)*(x3950)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3949)))+(((IkReal(-1.00000000000000))*(x3942)*(x3944)))+(x3938)+(((sj9)*(x3947))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x3952)))+(((IkReal(-1.00000000000000))*(r11)*(x3951)))+(((IkReal(-1.00000000000000))*(r00)*(x3942)))+(((IkReal(-1.00000000000000))*(x3944)*(x3950)))+(((IkReal(-1.00000000000000))*(x3947)*(x3949))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3940)))+(((r00)*(sj9)*(x3948)))+(((cj13)*(r11)*(x3942)))+(((IkReal(-1.00000000000000))*(x3952)))+(((IkReal(-1.00000000000000))*(cj14)*(x3941)*(x3949)))+(((IkReal(-1.00000000000000))*(x3943)*(x3950)))+(((cj9)*(x3945))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x3948)*(x3949)))+(((x3942)*(x3943)))+(((IkReal(-1.00000000000000))*(x3941)*(x3951)))+(((IkReal(-1.00000000000000))*(cj10)*(x3953)))+(((sj9)*(x3945)))+(((r11)*(sj9)*(x3946))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3954=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3954)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3954))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3954)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3954)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x3954)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x3954)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3955=IKsin(j12);
IkReal x3956=IKcos(j12);
IkReal x3957=((IkReal(1.00000000000000))*(sj13));
IkReal x3958=((cj13)*(r10));
IkReal x3959=((cj9)*(sj14));
IkReal x3960=((cj13)*(r01));
IkReal x3961=((IkReal(1.00000000000000))*(r10));
IkReal x3962=((r12)*(sj13));
IkReal x3963=((cj13)*(sj14));
IkReal x3964=((cj14)*(r01));
IkReal x3965=((cj13)*(cj14));
IkReal x3966=((IkReal(1.00000000000000))*(cj9));
IkReal x3967=((sj14)*(sj9));
IkReal x3968=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3969=((IkReal(1.00000000000000))*(x3956));
IkReal x3970=((IkReal(1.00000000000000))*(x3955));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x3969)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3963)))+(((IkReal(-1.00000000000000))*(sj10)*(x3970)))+(((IkReal(-1.00000000000000))*(r22)*(x3957)))+(((r20)*(x3965))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3959)*(x3961)))+(((sj9)*(x3964)))+(x3955)+(((r00)*(x3967)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3966))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3961)*(x3967)))+(((IkReal(-1.00000000000000))*(cj10)*(x3969)))+(((IkReal(-1.00000000000000))*(x3964)*(x3966)))+(((IkReal(-1.00000000000000))*(r00)*(x3959)))+(((IkReal(-1.00000000000000))*(r11)*(x3968))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3969)))+(((cj13)*(r11)*(x3959)))+(((r00)*(sj9)*(x3965)))+(((cj9)*(x3962)))+(((IkReal(-1.00000000000000))*(x3960)*(x3967)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3957)))+(((IkReal(-1.00000000000000))*(cj14)*(x3958)*(x3966))));
evalcond[5]=((((r11)*(sj9)*(x3963)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x3965)*(x3966)))+(((IkReal(-1.00000000000000))*(x3958)*(x3968)))+(((sj9)*(x3962)))+(((IkReal(-1.00000000000000))*(cj10)*(x3970)))+(((x3959)*(x3960))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3971=IKsin(j12);
IkReal x3972=IKcos(j12);
IkReal x3973=((IkReal(1.00000000000000))*(sj13));
IkReal x3974=((cj13)*(r10));
IkReal x3975=((cj9)*(sj14));
IkReal x3976=((cj13)*(r01));
IkReal x3977=((IkReal(1.00000000000000))*(r10));
IkReal x3978=((r12)*(sj13));
IkReal x3979=((cj13)*(sj14));
IkReal x3980=((cj14)*(r01));
IkReal x3981=((cj13)*(cj14));
IkReal x3982=((IkReal(1.00000000000000))*(cj9));
IkReal x3983=((sj14)*(sj9));
IkReal x3984=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x3985=((IkReal(1.00000000000000))*(x3972));
IkReal x3986=((IkReal(1.00000000000000))*(x3971));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x3985))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x3979)))+(((r20)*(x3981)))+(((IkReal(-1.00000000000000))*(sj10)*(x3986)))+(((IkReal(-1.00000000000000))*(r22)*(x3973))));
evalcond[2]=((((r00)*(x3983)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x3982)))+(x3971)+(((IkReal(-1.00000000000000))*(x3975)*(x3977)))+(((sj9)*(x3980))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x3985)))+(((IkReal(-1.00000000000000))*(r11)*(x3984)))+(((IkReal(-1.00000000000000))*(x3977)*(x3983)))+(((IkReal(-1.00000000000000))*(r00)*(x3975)))+(((IkReal(-1.00000000000000))*(x3980)*(x3982))));
evalcond[4]=((((r00)*(sj9)*(x3981)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3973)))+(((cj9)*(x3978)))+(((cj13)*(r11)*(x3975)))+(((IkReal(-1.00000000000000))*(x3976)*(x3983)))+(((IkReal(-1.00000000000000))*(x3985)))+(((IkReal(-1.00000000000000))*(cj14)*(x3974)*(x3982))));
evalcond[5]=((((r11)*(sj9)*(x3979)))+(((IkReal(-1.00000000000000))*(cj10)*(x3986)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x3978)))+(((IkReal(-1.00000000000000))*(r00)*(x3981)*(x3982)))+(((x3975)*(x3976)))+(((IkReal(-1.00000000000000))*(x3974)*(x3984))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x3987=((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30);
IkReal x3988=((cj14)*(r11));
IkReal x3989=((r10)*(sj14));
IkReal x3990=((IkReal(1.00000000000000))*(cj9));
IkReal x3991=((cj10)*(cj11)*(cj9));
IkReal x3992=((r00)*(sj14)*(sj9));
IkReal x3993=((cj14)*(r01)*(sj9));
IkReal x3994=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((x3987)*(((((IkReal(-1.00000000000000))*(x3989)*(x3990)))+(((IkReal(-1.00000000000000))*(x3988)*(x3990)))+(x3993)+(x3992))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x3987)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3993)*(x3994)))+(((x3989)*(x3991)))+(((IkReal(-1.00000000000000))*(x3992)*(x3994)))+(((x3988)*(x3991)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3987)*(((((IkReal(-1.00000000000000))*(x3989)*(x3990)))+(((IkReal(-1.00000000000000))*(x3988)*(x3990)))+(x3993)+(x3992)))))+IKsqr(((x3987)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3993)*(x3994)))+(((x3989)*(x3991)))+(((IkReal(-1.00000000000000))*(x3992)*(x3994)))+(((x3988)*(x3991)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((x3987)*(((((IkReal(-1.00000000000000))*(x3989)*(x3990)))+(((IkReal(-1.00000000000000))*(x3988)*(x3990)))+(x3993)+(x3992)))), ((x3987)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3993)*(x3994)))+(((x3989)*(x3991)))+(((IkReal(-1.00000000000000))*(x3992)*(x3994)))+(((x3988)*(x3991)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x3995=IKcos(j12);
IkReal x3996=IKsin(j12);
IkReal x3997=((IkReal(1.00000000000000))*(sj13));
IkReal x3998=((cj13)*(r10));
IkReal x3999=((cj9)*(sj14));
IkReal x4000=((cj13)*(r01));
IkReal x4001=((IkReal(1.00000000000000))*(r10));
IkReal x4002=((r12)*(sj13));
IkReal x4003=((cj13)*(sj14));
IkReal x4004=((cj11)*(sj10));
IkReal x4005=((cj14)*(r01));
IkReal x4006=((IkReal(1.00000000000000))*(cj9));
IkReal x4007=((sj14)*(sj9));
IkReal x4008=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4009=((cj10)*(x3995));
IkReal x4010=((IkReal(1.00000000000000))*(x3996));
IkReal x4011=((IkReal(1.00000000000000))*(x3995));
IkReal x4012=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x4010)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4011))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(sj10)*(x4010)))+(((IkReal(-1.00000000000000))*(r21)*(x4003)))+(((cj11)*(x4009)))+(((IkReal(-1.00000000000000))*(r22)*(x3997))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3999)*(x4001)))+(((r00)*(x4007)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4006)))+(((IkReal(-1.00000000000000))*(sj11)*(x4010)))+(((sj9)*(x4005))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3999)))+(((IkReal(-1.00000000000000))*(x4009)))+(((x3996)*(x4004)))+(((IkReal(-1.00000000000000))*(x4001)*(x4007)))+(((IkReal(-1.00000000000000))*(r11)*(x4008)))+(((IkReal(-1.00000000000000))*(x4005)*(x4006))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x3997)))+(((cj9)*(x4002)))+(((IkReal(-1.00000000000000))*(cj14)*(x3998)*(x4006)))+(((IkReal(-1.00000000000000))*(x4000)*(x4007)))+(((cj13)*(r11)*(x3999)))+(((sj9)*(x4012)))+(((sj11)*(x3995))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj10)*(x4010)))+(((IkReal(-1.00000000000000))*(x3998)*(x4008)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x4003)))+(((IkReal(-1.00000000000000))*(x4006)*(x4012)))+(((IkReal(-1.00000000000000))*(x4004)*(x4011)))+(((x3999)*(x4000)))+(((sj9)*(x4002))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4013=(cj10)*(cj10);
IkReal x4014=(sj10)*(sj10);
IkReal x4015=((cj14)*(sj10));
IkReal x4016=((r11)*(sj9));
IkReal x4017=((sj10)*(sj14));
IkReal x4018=((r10)*(sj9));
IkReal x4019=((cj10)*(cj14));
IkReal x4020=((cj9)*(r00));
IkReal x4021=((cj9)*(r01));
IkReal x4022=((IkReal(1.00000000000000))*(cj10)*(sj14));
if( IKabs(((((IKabs(((((cj11)*(x4013)))+(((cj11)*(x4014))))) != 0)?((IkReal)1/(((((cj11)*(x4013)))+(((cj11)*(x4014)))))):(IkReal)1.0e30))*(((((x4017)*(x4020)))+(((x4017)*(x4018)))+(((r21)*(x4019)))+(((cj10)*(r20)*(sj14)))+(((x4015)*(x4016)))+(((x4015)*(x4021))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x4013)+(x4014))) != 0)?((IkReal)1/(((x4013)+(x4014)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4018)*(x4022)))+(((r20)*(x4017)))+(((IkReal(-1.00000000000000))*(x4019)*(x4021)))+(((r21)*(x4015)))+(((IkReal(-1.00000000000000))*(x4016)*(x4019)))+(((IkReal(-1.00000000000000))*(x4020)*(x4022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj11)*(x4013)))+(((cj11)*(x4014))))) != 0)?((IkReal)1/(((((cj11)*(x4013)))+(((cj11)*(x4014)))))):(IkReal)1.0e30))*(((((x4017)*(x4020)))+(((x4017)*(x4018)))+(((r21)*(x4019)))+(((cj10)*(r20)*(sj14)))+(((x4015)*(x4016)))+(((x4015)*(x4021)))))))+IKsqr(((((IKabs(((x4013)+(x4014))) != 0)?((IkReal)1/(((x4013)+(x4014)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4018)*(x4022)))+(((r20)*(x4017)))+(((IkReal(-1.00000000000000))*(x4019)*(x4021)))+(((r21)*(x4015)))+(((IkReal(-1.00000000000000))*(x4016)*(x4019)))+(((IkReal(-1.00000000000000))*(x4020)*(x4022)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(((((cj11)*(x4013)))+(((cj11)*(x4014))))) != 0)?((IkReal)1/(((((cj11)*(x4013)))+(((cj11)*(x4014)))))):(IkReal)1.0e30))*(((((x4017)*(x4020)))+(((x4017)*(x4018)))+(((r21)*(x4019)))+(((cj10)*(r20)*(sj14)))+(((x4015)*(x4016)))+(((x4015)*(x4021)))))), ((((IKabs(((x4013)+(x4014))) != 0)?((IkReal)1/(((x4013)+(x4014)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4018)*(x4022)))+(((r20)*(x4017)))+(((IkReal(-1.00000000000000))*(x4019)*(x4021)))+(((r21)*(x4015)))+(((IkReal(-1.00000000000000))*(x4016)*(x4019)))+(((IkReal(-1.00000000000000))*(x4020)*(x4022)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4023=IKcos(j12);
IkReal x4024=IKsin(j12);
IkReal x4025=((IkReal(1.00000000000000))*(sj13));
IkReal x4026=((cj13)*(r10));
IkReal x4027=((cj9)*(sj14));
IkReal x4028=((cj13)*(r01));
IkReal x4029=((IkReal(1.00000000000000))*(r10));
IkReal x4030=((r12)*(sj13));
IkReal x4031=((cj13)*(sj14));
IkReal x4032=((cj11)*(sj10));
IkReal x4033=((cj14)*(r01));
IkReal x4034=((IkReal(1.00000000000000))*(cj9));
IkReal x4035=((sj14)*(sj9));
IkReal x4036=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4037=((cj10)*(x4023));
IkReal x4038=((IkReal(1.00000000000000))*(x4024));
IkReal x4039=((IkReal(1.00000000000000))*(x4023));
IkReal x4040=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x4039)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x4038))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x4025)))+(((IkReal(-1.00000000000000))*(sj10)*(x4038)))+(((cj11)*(x4037)))+(((IkReal(-1.00000000000000))*(r21)*(x4031))));
evalcond[2]=((((sj9)*(x4033)))+(((r00)*(x4035)))+(((IkReal(-1.00000000000000))*(x4027)*(x4029)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4034)))+(((IkReal(-1.00000000000000))*(sj11)*(x4038))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4036)))+(((IkReal(-1.00000000000000))*(x4037)))+(((IkReal(-1.00000000000000))*(x4029)*(x4035)))+(((IkReal(-1.00000000000000))*(r00)*(x4027)))+(((IkReal(-1.00000000000000))*(x4033)*(x4034)))+(((x4024)*(x4032))));
evalcond[4]=((((cj9)*(x4030)))+(((sj9)*(x4040)))+(((cj13)*(r11)*(x4027)))+(((IkReal(-1.00000000000000))*(cj14)*(x4026)*(x4034)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4025)))+(((sj11)*(x4023)))+(((IkReal(-1.00000000000000))*(x4028)*(x4035))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj10)*(x4038)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x4031)))+(((sj9)*(x4030)))+(((IkReal(-1.00000000000000))*(x4026)*(x4036)))+(((IkReal(-1.00000000000000))*(x4034)*(x4040)))+(((x4027)*(x4028)))+(((IkReal(-1.00000000000000))*(x4032)*(x4039))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4041=((cj14)*(r21));
IkReal x4042=((cj10)*(cj11));
IkReal x4043=((sj10)*(sj14));
IkReal x4044=((r22)*(sj13));
IkReal x4045=((IkReal(1.00000000000000))*(cj13));
IkReal x4046=((cj14)*(r20));
if( IKabs(((gconst4)*(((((x4041)*(x4042)))+(((IkReal(-1.00000000000000))*(sj10)*(x4044)))+(((cj13)*(sj10)*(x4046)))+(((r20)*(sj14)*(x4042)))+(((IkReal(-1.00000000000000))*(r21)*(x4043)*(x4045))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x4042)*(x4045)*(x4046)))+(((cj13)*(r21)*(sj14)*(x4042)))+(((x4042)*(x4044)))+(((sj10)*(x4041)))+(((r20)*(x4043))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst4)*(((((x4041)*(x4042)))+(((IkReal(-1.00000000000000))*(sj10)*(x4044)))+(((cj13)*(sj10)*(x4046)))+(((r20)*(sj14)*(x4042)))+(((IkReal(-1.00000000000000))*(r21)*(x4043)*(x4045)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x4042)*(x4045)*(x4046)))+(((cj13)*(r21)*(sj14)*(x4042)))+(((x4042)*(x4044)))+(((sj10)*(x4041)))+(((r20)*(x4043)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4047=IKcos(j12);
IkReal x4048=IKsin(j12);
IkReal x4049=((IkReal(1.00000000000000))*(sj13));
IkReal x4050=((cj13)*(r10));
IkReal x4051=((cj9)*(sj14));
IkReal x4052=((cj13)*(r01));
IkReal x4053=((IkReal(1.00000000000000))*(r10));
IkReal x4054=((r12)*(sj13));
IkReal x4055=((cj13)*(sj14));
IkReal x4056=((cj11)*(sj10));
IkReal x4057=((cj14)*(r01));
IkReal x4058=((IkReal(1.00000000000000))*(cj9));
IkReal x4059=((sj14)*(sj9));
IkReal x4060=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4061=((cj10)*(x4047));
IkReal x4062=((IkReal(1.00000000000000))*(x4048));
IkReal x4063=((IkReal(1.00000000000000))*(x4047));
IkReal x4064=((cj13)*(cj14)*(r00));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x4062)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4063))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((cj11)*(x4061)))+(((IkReal(-1.00000000000000))*(r22)*(x4049)))+(((IkReal(-1.00000000000000))*(sj10)*(x4062)))+(((IkReal(-1.00000000000000))*(r21)*(x4055))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4058)))+(((IkReal(-1.00000000000000))*(x4051)*(x4053)))+(((IkReal(-1.00000000000000))*(sj11)*(x4062)))+(((sj9)*(x4057)))+(((r00)*(x4059))));
evalcond[3]=((((x4048)*(x4056)))+(((IkReal(-1.00000000000000))*(r00)*(x4051)))+(((IkReal(-1.00000000000000))*(x4053)*(x4059)))+(((IkReal(-1.00000000000000))*(r11)*(x4060)))+(((IkReal(-1.00000000000000))*(x4061)))+(((IkReal(-1.00000000000000))*(x4057)*(x4058))));
evalcond[4]=((((cj9)*(x4054)))+(((sj9)*(x4064)))+(((cj13)*(r11)*(x4051)))+(((IkReal(-1.00000000000000))*(x4052)*(x4059)))+(((sj11)*(x4047)))+(((IkReal(-1.00000000000000))*(cj14)*(x4050)*(x4058)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4049))));
evalcond[5]=((((r11)*(sj9)*(x4055)))+(((IkReal(-1.00000000000000))*(x4050)*(x4060)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x4054)))+(((IkReal(-1.00000000000000))*(cj10)*(x4062)))+(((IkReal(-1.00000000000000))*(x4058)*(x4064)))+(((x4051)*(x4052)))+(((IkReal(-1.00000000000000))*(x4056)*(x4063))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x4065=((IkReal(1.00000000000000))*(sj9));
IkReal x4066=((cj10)*(sj11));
IkReal x4067=((IkReal(1.00000000000000))*(cj11));
IkReal x4068=((sj14)*(x4066));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r02)*(x4065)*(x4066)))+(((cj9)*(r12)*(x4066)))+(((IkReal(-1.00000000000000))*(r22)*(x4067))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r01)*(x4065)*(x4068)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4067)))+(((cj9)*(r11)*(x4068)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r10)*(x4066)))+(((cj14)*(r00)*(sj9)*(x4066))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(r02)*(x4065)*(x4066)))+(((cj9)*(r12)*(x4066)))+(((IkReal(-1.00000000000000))*(r22)*(x4067)))))), ((gconst0)*(((((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r01)*(x4065)*(x4068)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4067)))+(((cj9)*(r11)*(x4068)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r10)*(x4066)))+(((cj14)*(r00)*(sj9)*(x4066)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x4069=IKsin(j13);
IkReal x4070=IKcos(j13);
IkReal x4071=((r11)*(sj14));
IkReal x4072=((r01)*(sj14));
IkReal x4073=((cj14)*(r00));
IkReal x4074=((cj9)*(x4069));
IkReal x4075=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x4076=((sj9)*(x4069));
IkReal x4077=((sj9)*(x4070));
IkReal x4078=((IkReal(1.00000000000000))*(cj9)*(x4070));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((r22)*(x4070)))+(((cj14)*(r20)*(x4069)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4069))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4074)*(x4075)))+(((x4071)*(x4074)))+(cj11)+(((x4073)*(x4076)))+(((r02)*(x4077)))+(((IkReal(-1.00000000000000))*(r12)*(x4078)))+(((IkReal(-1.00000000000000))*(x4072)*(x4076))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4075)*(x4076)))+(((IkReal(-1.00000000000000))*(r02)*(x4078)))+(((x4072)*(x4074)))+(((x4071)*(x4076)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r12)*(x4077)))+(((IkReal(-1.00000000000000))*(x4073)*(x4074))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10))));
dummyeval[0]=(((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x4079=(cj10)*(cj10);
IkReal x4080=(sj10)*(sj10);
dummyeval[0]=((((cj11)*(x4080)))+(((cj11)*(x4079))));
dummyeval[1]=((x4079)+(x4080));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4081=((IkReal(0.0100000000000000))*(cj14));
IkReal x4082=((r10)*(sj9));
IkReal x4083=((IkReal(1.00000000000000))*(sj9));
IkReal x4084=((IkReal(0.0100000000000000))*(sj14));
IkReal x4085=((cj9)*(r11));
IkReal x4086=((r00)*(sj9));
IkReal x4087=((IkReal(0.374290000000000))*(sj14));
IkReal x4088=((cj13)*(r02));
IkReal x4089=((cj9)*(r12));
IkReal x4090=((cj9)*(r00));
IkReal x4091=((r01)*(sj9));
IkReal x4092=((IkReal(0.374290000000000))*(cj14));
IkReal x4093=((IkReal(1.00000000000000))*(cj9));
IkReal x4094=((cj9)*(r10));
IkReal x4095=((r11)*(sj9));
IkReal x4096=((IkReal(1.00000000000000))*(sj13));
IkReal x4097=((cj14)*(sj13));
IkReal x4098=((cj13)*(sj14));
IkReal x4099=((cj13)*(cj14));
IkReal x4100=((r11)*(sj13)*(sj14));
IkReal x4101=((cj9)*(x4092));
IkReal x4102=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4097)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4096)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x4081)))+(((r20)*(x4087)))+(((r21)*(x4084)))+(((IkReal(0.0690000000000000))*(cj10)))+(((r21)*(x4092)))+(pz)+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((cj14)*(x4091)))+(((IkReal(-1.00000000000000))*(cj14)*(x4085)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4093)))+(((sj14)*(x4086))));
evalcond[4]=((IkReal(1.00000000000000))+(((x4086)*(x4097)))+(((IkReal(-1.00000000000000))*(x4083)*(x4102)))+(((sj9)*(x4088)))+(((IkReal(-1.00000000000000))*(cj13)*(x4089)))+(((sj13)*(sj14)*(x4085)))+(((IkReal(-1.00000000000000))*(r10)*(x4093)*(x4097))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x4083)))+(((x4086)*(x4099)))+(((x4085)*(x4098)))+(((sj13)*(x4089)))+(((IkReal(-1.00000000000000))*(r10)*(x4093)*(x4099)))+(((IkReal(-1.00000000000000))*(r01)*(x4083)*(x4098))));
evalcond[6]=((((cj9)*(x4102)))+(((IkReal(-1.00000000000000))*(cj14)*(x4090)*(x4096)))+(((IkReal(-1.00000000000000))*(cj14)*(x4082)*(x4096)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x4083)))+(((sj13)*(sj14)*(x4095)))+(((IkReal(-1.00000000000000))*(x4088)*(x4093))));
evalcond[7]=((((x4086)*(x4087)))+(((IkReal(-1.00000000000000))*(py)*(x4093)))+(((x4084)*(x4091)))+(((IkReal(-1.00000000000000))*(x4085)*(x4092)))+(((IkReal(-1.00000000000000))*(x4084)*(x4085)))+(((x4081)*(x4094)))+(((px)*(sj9)))+(((x4091)*(x4092)))+(((IkReal(-1.00000000000000))*(x4087)*(x4094)))+(((IkReal(-1.00000000000000))*(x4081)*(x4086))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x4083)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x4092)*(x4095)))+(((IkReal(-1.00000000000000))*(x4084)*(x4095)))+(((x4081)*(x4082)))+(((IkReal(-1.00000000000000))*(x4082)*(x4087)))+(((IkReal(-1.00000000000000))*(px)*(x4093)))+(((IkReal(-0.0690000000000000))*(sj10)))+(((x4081)*(x4090)))+(((IkReal(-1.00000000000000))*(x4087)*(x4090)))+(((IkReal(-1.00000000000000))*(r01)*(x4101)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4084))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4103=((cj14)*(sj10));
IkReal x4104=((r11)*(sj9));
IkReal x4105=((r20)*(sj14));
IkReal x4106=((IkReal(1.00000000000000))*(cj10));
IkReal x4107=((cj9)*(r01));
IkReal x4108=((r10)*(sj14)*(sj9));
IkReal x4109=((cj9)*(r00)*(sj14));
if( IKabs(((gconst6)*(((((x4103)*(x4107)))+(((x4103)*(x4104)))+(((sj10)*(x4108)))+(((sj10)*(x4109)))+(((cj10)*(cj14)*(r21)))+(((cj10)*(x4105))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj14)*(x4106)*(x4107)))+(((IkReal(-1.00000000000000))*(x4106)*(x4108)))+(((IkReal(-1.00000000000000))*(x4106)*(x4109)))+(((r21)*(x4103)))+(((sj10)*(x4105)))+(((IkReal(-1.00000000000000))*(cj14)*(x4104)*(x4106))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst6)*(((((x4103)*(x4107)))+(((x4103)*(x4104)))+(((sj10)*(x4108)))+(((sj10)*(x4109)))+(((cj10)*(cj14)*(r21)))+(((cj10)*(x4105)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(cj14)*(x4106)*(x4107)))+(((IkReal(-1.00000000000000))*(x4106)*(x4108)))+(((IkReal(-1.00000000000000))*(x4106)*(x4109)))+(((r21)*(x4103)))+(((sj10)*(x4105)))+(((IkReal(-1.00000000000000))*(cj14)*(x4104)*(x4106)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4110=IKcos(j12);
IkReal x4111=IKsin(j12);
IkReal x4112=((cj13)*(sj14));
IkReal x4113=((r11)*(sj9));
IkReal x4114=((IkReal(1.00000000000000))*(cj10));
IkReal x4115=((cj9)*(r01));
IkReal x4116=((IkReal(1.00000000000000))*(cj14));
IkReal x4117=((cj9)*(r00));
IkReal x4118=((IkReal(1.00000000000000))*(sj14));
IkReal x4119=((r10)*(sj9));
IkReal x4120=((sj10)*(x4111));
IkReal x4121=((IkReal(1.00000000000000))*(sj10)*(x4110));
IkReal x4122=((x4111)*(x4114));
IkReal x4123=((x4122)+(x4121));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x4123)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4112)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((cj10)*(x4110)))+(((IkReal(-1.00000000000000))*(x4120))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4117)*(x4118)))+(((IkReal(-1.00000000000000))*(x4113)*(x4116)))+(((IkReal(-1.00000000000000))*(x4110)*(x4114)))+(x4120)+(((IkReal(-1.00000000000000))*(x4115)*(x4116)))+(((IkReal(-1.00000000000000))*(x4118)*(x4119))));
evalcond[3]=((((x4112)*(x4113)))+(((x4112)*(x4115)))+(((IkReal(-1.00000000000000))*(x4123)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4116)*(x4117)))+(((IkReal(-1.00000000000000))*(cj13)*(x4116)*(x4119)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4124=((cj10)*(cj13));
IkReal x4125=((r21)*(sj14));
IkReal x4126=((r22)*(sj13));
IkReal x4127=((IkReal(1.00000000000000))*(sj10));
IkReal x4128=((cj14)*(r20));
IkReal x4129=((cj14)*(r21));
IkReal x4130=((r20)*(sj14));
if( IKabs(((gconst5)*(((((cj13)*(sj10)*(x4128)))+(((cj10)*(x4130)))+(((IkReal(-1.00000000000000))*(cj13)*(x4125)*(x4127)))+(((cj10)*(x4129)))+(((IkReal(-1.00000000000000))*(x4126)*(x4127))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((sj10)*(x4130)))+(((x4124)*(x4125)))+(((sj10)*(x4129)))+(((cj10)*(x4126)))+(((IkReal(-1.00000000000000))*(x4124)*(x4128))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst5)*(((((cj13)*(sj10)*(x4128)))+(((cj10)*(x4130)))+(((IkReal(-1.00000000000000))*(cj13)*(x4125)*(x4127)))+(((cj10)*(x4129)))+(((IkReal(-1.00000000000000))*(x4126)*(x4127)))))), ((gconst5)*(((((sj10)*(x4130)))+(((x4124)*(x4125)))+(((sj10)*(x4129)))+(((cj10)*(x4126)))+(((IkReal(-1.00000000000000))*(x4124)*(x4128)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4131=IKcos(j12);
IkReal x4132=IKsin(j12);
IkReal x4133=((cj13)*(sj14));
IkReal x4134=((r11)*(sj9));
IkReal x4135=((IkReal(1.00000000000000))*(cj10));
IkReal x4136=((cj9)*(r01));
IkReal x4137=((IkReal(1.00000000000000))*(cj14));
IkReal x4138=((cj9)*(r00));
IkReal x4139=((IkReal(1.00000000000000))*(sj14));
IkReal x4140=((r10)*(sj9));
IkReal x4141=((sj10)*(x4132));
IkReal x4142=((IkReal(1.00000000000000))*(sj10)*(x4131));
IkReal x4143=((x4132)*(x4135));
IkReal x4144=((x4143)+(x4142));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x4144))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((cj10)*(x4131)))+(((IkReal(-1.00000000000000))*(x4141)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x4133))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4131)*(x4135)))+(((IkReal(-1.00000000000000))*(x4134)*(x4137)))+(((IkReal(-1.00000000000000))*(x4139)*(x4140)))+(x4141)+(((IkReal(-1.00000000000000))*(x4138)*(x4139)))+(((IkReal(-1.00000000000000))*(x4136)*(x4137))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4137)*(x4138)))+(((IkReal(-1.00000000000000))*(cj13)*(x4137)*(x4140)))+(((IkReal(-1.00000000000000))*(x4144)))+(((x4133)*(x4134)))+(((x4133)*(x4136)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4145=((IkReal(0.0100000000000000))*(cj14));
IkReal x4146=((r10)*(sj9));
IkReal x4147=((IkReal(1.00000000000000))*(sj9));
IkReal x4148=((IkReal(0.0100000000000000))*(sj14));
IkReal x4149=((cj9)*(r11));
IkReal x4150=((r00)*(sj9));
IkReal x4151=((IkReal(0.374290000000000))*(sj14));
IkReal x4152=((cj13)*(r02));
IkReal x4153=((cj9)*(r12));
IkReal x4154=((cj9)*(r00));
IkReal x4155=((r01)*(sj9));
IkReal x4156=((IkReal(0.374290000000000))*(cj14));
IkReal x4157=((IkReal(1.00000000000000))*(cj9));
IkReal x4158=((cj9)*(r10));
IkReal x4159=((r11)*(sj9));
IkReal x4160=((IkReal(1.00000000000000))*(sj13));
IkReal x4161=((cj14)*(sj13));
IkReal x4162=((cj13)*(sj14));
IkReal x4163=((cj13)*(cj14));
IkReal x4164=((r11)*(sj13)*(sj14));
IkReal x4165=((cj9)*(x4156));
IkReal x4166=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4160)))+(((r20)*(x4161)))+(((cj13)*(r22))));
evalcond[2]=((((r21)*(x4148)))+(((r21)*(x4156)))+(pz)+(((IkReal(-0.0690000000000000))*(cj10)))+(((IkReal(0.364420000000000))*(sj10)))+(((r20)*(x4151)))+(((IkReal(-1.00000000000000))*(r20)*(x4145))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x4149)))+(((sj14)*(x4150)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4157)))+(((cj14)*(x4155))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x4147)*(x4166)))+(((x4150)*(x4161)))+(((sj9)*(x4152)))+(((IkReal(-1.00000000000000))*(cj13)*(x4153)))+(((sj13)*(sj14)*(x4149)))+(((IkReal(-1.00000000000000))*(r10)*(x4157)*(x4161))));
evalcond[5]=((((sj13)*(x4153)))+(((x4149)*(x4162)))+(((x4150)*(x4163)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x4147)))+(((IkReal(-1.00000000000000))*(r01)*(x4147)*(x4162)))+(((IkReal(-1.00000000000000))*(r10)*(x4157)*(x4163))));
evalcond[6]=((((sj13)*(sj14)*(x4159)))+(((IkReal(-1.00000000000000))*(cj14)*(x4146)*(x4160)))+(((cj9)*(x4166)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x4147)))+(((IkReal(-1.00000000000000))*(x4152)*(x4157)))+(((IkReal(-1.00000000000000))*(cj14)*(x4154)*(x4160))));
evalcond[7]=((((x4145)*(x4158)))+(((x4155)*(x4156)))+(((x4150)*(x4151)))+(((IkReal(-1.00000000000000))*(x4148)*(x4149)))+(((IkReal(-1.00000000000000))*(x4151)*(x4158)))+(((IkReal(-1.00000000000000))*(x4145)*(x4150)))+(((px)*(sj9)))+(((x4148)*(x4155)))+(((IkReal(-1.00000000000000))*(x4149)*(x4156)))+(((IkReal(-1.00000000000000))*(py)*(x4157))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4148)))+(((x4145)*(x4146)))+(((x4145)*(x4154)))+(((IkReal(-1.00000000000000))*(px)*(x4157)))+(((IkReal(-1.00000000000000))*(x4146)*(x4151)))+(((IkReal(-1.00000000000000))*(x4148)*(x4159)))+(((IkReal(-1.00000000000000))*(x4156)*(x4159)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(0.0690000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x4151)*(x4154)))+(((IkReal(-1.00000000000000))*(py)*(x4147)))+(((IkReal(-1.00000000000000))*(r01)*(x4165))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4167=((sj10)*(sj14));
IkReal x4168=((cj14)*(r21));
IkReal x4169=((cj10)*(sj14));
IkReal x4170=((IkReal(1.00000000000000))*(cj10));
IkReal x4171=((IkReal(1.00000000000000))*(sj10));
IkReal x4172=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x4173=((cj14)*(r11)*(sj9));
IkReal x4174=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x4175=((cj14)*(cj9)*(r01));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x4171)*(x4173)))+(((IkReal(-1.00000000000000))*(x4171)*(x4175)))+(((IkReal(-1.00000000000000))*(x4168)*(x4170)))+(((IkReal(-1.00000000000000))*(x4167)*(x4174)))+(((IkReal(-1.00000000000000))*(x4167)*(x4172)))+(((IkReal(-1.00000000000000))*(r20)*(x4169))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x4170)*(x4175)))+(((IkReal(-1.00000000000000))*(x4170)*(x4173)))+(((r20)*(x4167)))+(((IkReal(-1.00000000000000))*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(x4169)*(x4174)))+(((sj10)*(x4168))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x4171)*(x4173)))+(((IkReal(-1.00000000000000))*(x4171)*(x4175)))+(((IkReal(-1.00000000000000))*(x4168)*(x4170)))+(((IkReal(-1.00000000000000))*(x4167)*(x4174)))+(((IkReal(-1.00000000000000))*(x4167)*(x4172)))+(((IkReal(-1.00000000000000))*(r20)*(x4169)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(x4170)*(x4175)))+(((IkReal(-1.00000000000000))*(x4170)*(x4173)))+(((r20)*(x4167)))+(((IkReal(-1.00000000000000))*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(x4169)*(x4174)))+(((sj10)*(x4168)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4176=IKsin(j12);
IkReal x4177=IKcos(j12);
IkReal x4178=((cj13)*(sj14));
IkReal x4179=((r11)*(sj9));
IkReal x4180=((cj13)*(cj14));
IkReal x4181=((IkReal(1.00000000000000))*(cj14));
IkReal x4182=((IkReal(1.00000000000000))*(cj10));
IkReal x4183=((cj9)*(r01));
IkReal x4184=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x4185=((sj10)*(x4177));
IkReal x4186=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x4187=((IkReal(1.00000000000000))*(sj10)*(x4176));
IkReal x4188=((x4177)*(x4182));
IkReal x4189=((x4188)+(x4187));
evalcond[0]=((((cj14)*(r21)))+(((cj10)*(x4176)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x4185))));
evalcond[1]=((((r20)*(x4180)))+(((IkReal(-1.00000000000000))*(x4189)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x4178))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4181)*(x4183)))+(((IkReal(-1.00000000000000))*(x4189)))+(((IkReal(-1.00000000000000))*(sj14)*(x4184)))+(((IkReal(-1.00000000000000))*(sj14)*(x4186)))+(((IkReal(-1.00000000000000))*(x4179)*(x4181))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4180)*(x4184)))+(((IkReal(-1.00000000000000))*(x4180)*(x4186)))+(((x4178)*(x4183)))+(((x4178)*(x4179)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x4176)*(x4182)))+(x4185)+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4190=((r21)*(sj10));
IkReal x4191=((r20)*(sj14));
IkReal x4192=((IkReal(1.00000000000000))*(cj10));
IkReal x4193=((IkReal(1.00000000000000))*(r22)*(sj13));
IkReal x4194=((IkReal(1.00000000000000))*(cj13)*(sj14));
IkReal x4195=((cj13)*(cj14)*(r20));
if( IKabs(((gconst7)*(((((sj10)*(x4195)))+(((IkReal(-1.00000000000000))*(cj14)*(r21)*(x4192)))+(((IkReal(-1.00000000000000))*(x4191)*(x4192)))+(((IkReal(-1.00000000000000))*(x4190)*(x4194)))+(((IkReal(-1.00000000000000))*(sj10)*(x4193))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((sj10)*(x4191)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x4192)))+(((cj10)*(x4195)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x4192)))+(((cj14)*(x4190))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst7)*(((((sj10)*(x4195)))+(((IkReal(-1.00000000000000))*(cj14)*(r21)*(x4192)))+(((IkReal(-1.00000000000000))*(x4191)*(x4192)))+(((IkReal(-1.00000000000000))*(x4190)*(x4194)))+(((IkReal(-1.00000000000000))*(sj10)*(x4193)))))), ((gconst7)*(((((sj10)*(x4191)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x4192)))+(((cj10)*(x4195)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x4192)))+(((cj14)*(x4190)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4196=IKsin(j12);
IkReal x4197=IKcos(j12);
IkReal x4198=((cj13)*(sj14));
IkReal x4199=((r11)*(sj9));
IkReal x4200=((cj13)*(cj14));
IkReal x4201=((IkReal(1.00000000000000))*(cj14));
IkReal x4202=((IkReal(1.00000000000000))*(cj10));
IkReal x4203=((cj9)*(r01));
IkReal x4204=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x4205=((sj10)*(x4197));
IkReal x4206=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x4207=((IkReal(1.00000000000000))*(sj10)*(x4196));
IkReal x4208=((x4197)*(x4202));
IkReal x4209=((x4208)+(x4207));
evalcond[0]=((((cj14)*(r21)))+(((cj10)*(x4196)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x4205))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4198)))+(((IkReal(-1.00000000000000))*(x4209)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r20)*(x4200))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4201)*(x4203)))+(((IkReal(-1.00000000000000))*(x4209)))+(((IkReal(-1.00000000000000))*(x4199)*(x4201)))+(((IkReal(-1.00000000000000))*(sj14)*(x4204)))+(((IkReal(-1.00000000000000))*(sj14)*(x4206))));
evalcond[3]=((((x4198)*(x4203)))+(((cj9)*(r02)*(sj13)))+(x4205)+(((IkReal(-1.00000000000000))*(x4196)*(x4202)))+(((x4198)*(x4199)))+(((IkReal(-1.00000000000000))*(x4200)*(x4206)))+(((IkReal(-1.00000000000000))*(x4200)*(x4204)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4210=((IkReal(0.0100000000000000))*(cj14));
IkReal x4211=((r10)*(sj9));
IkReal x4212=((cj9)*(r11));
IkReal x4213=((sj13)*(sj14));
IkReal x4214=((cj9)*(r00));
IkReal x4215=((IkReal(0.374290000000000))*(cj14));
IkReal x4216=((cj9)*(r01));
IkReal x4217=((r01)*(sj9));
IkReal x4218=((IkReal(0.0100000000000000))*(sj14));
IkReal x4219=((IkReal(0.374290000000000))*(sj14));
IkReal x4220=((r00)*(sj9));
IkReal x4221=((cj13)*(r02));
IkReal x4222=((cj9)*(r10));
IkReal x4223=((IkReal(1.00000000000000))*(sj9));
IkReal x4224=((IkReal(1.00000000000000))*(cj9));
IkReal x4225=((cj13)*(r12));
IkReal x4226=((r11)*(sj9));
IkReal x4227=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4213)))+(((IkReal(-1.00000000000000))*(sj11)))+(((cj13)*(r22)))+(((r20)*(x4227))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x4210)))+(((IkReal(0.0690000000000000))*(cj11)))+(pz)+(((r20)*(x4219)))+(((r21)*(x4215)))+(((r21)*(x4218))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4224)*(x4225)))+(((x4220)*(x4227)))+(cj11)+(((x4212)*(x4213)))+(((IkReal(-1.00000000000000))*(x4222)*(x4227)))+(((sj9)*(x4221)))+(((IkReal(-1.00000000000000))*(x4213)*(x4217))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4214)*(x4227)))+(((IkReal(-1.00000000000000))*(x4223)*(x4225)))+(((x4213)*(x4226)))+(((x4213)*(x4216)))+(((IkReal(-1.00000000000000))*(x4221)*(x4224)))+(((IkReal(-1.00000000000000))*(x4211)*(x4227))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4212)*(x4218)))+(((IkReal(-1.00000000000000))*(x4212)*(x4215)))+(((x4215)*(x4217)))+(((x4210)*(x4222)))+(((IkReal(-1.00000000000000))*(py)*(x4224)))+(((x4217)*(x4218)))+(((IkReal(0.0690000000000000))*(sj11)))+(((x4219)*(x4220)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4219)*(x4222)))+(((IkReal(-1.00000000000000))*(x4210)*(x4220))));
evalcond[6]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(px)*(x4224)))+(((IkReal(-1.00000000000000))*(x4218)*(x4226)))+(((IkReal(-1.00000000000000))*(x4215)*(x4226)))+(((IkReal(-1.00000000000000))*(x4216)*(x4218)))+(((x4210)*(x4211)))+(((x4210)*(x4214)))+(((IkReal(-1.00000000000000))*(py)*(x4223)))+(((IkReal(-1.00000000000000))*(x4215)*(x4216)))+(((IkReal(-1.00000000000000))*(x4211)*(x4219)))+(((IkReal(-1.00000000000000))*(x4214)*(x4219))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4228=((IkReal(0.0100000000000000))*(cj14));
IkReal x4229=((r10)*(sj9));
IkReal x4230=((cj9)*(r11));
IkReal x4231=((sj13)*(sj14));
IkReal x4232=((cj9)*(r00));
IkReal x4233=((IkReal(0.374290000000000))*(cj14));
IkReal x4234=((cj9)*(r01));
IkReal x4235=((r01)*(sj9));
IkReal x4236=((IkReal(0.0100000000000000))*(sj14));
IkReal x4237=((r00)*(sj9));
IkReal x4238=((IkReal(0.374290000000000))*(sj14));
IkReal x4239=((cj13)*(r02));
IkReal x4240=((cj9)*(r12));
IkReal x4241=((IkReal(1.00000000000000))*(sj9));
IkReal x4242=((IkReal(1.00000000000000))*(cj9));
IkReal x4243=((r11)*(sj9));
IkReal x4244=((cj9)*(r10));
IkReal x4245=((cj14)*(sj13));
IkReal x4246=((IkReal(1.00000000000000))*(cj13));
IkReal x4247=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4245)))+(((IkReal(-1.00000000000000))*(r21)*(x4231)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(pz)+(((r21)*(x4233)))+(((r21)*(x4236)))+(((r20)*(x4238)))+(((IkReal(-1.00000000000000))*(r20)*(x4228))));
evalcond[3]=((((cj14)*(x4235)))+(((sj14)*(x4237)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4242)))+(((IkReal(-1.00000000000000))*(cj14)*(x4230))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x4240)*(x4246)))+(((x4230)*(x4231)))+(((x4237)*(x4245)))+(((IkReal(-1.00000000000000))*(r10)*(x4242)*(x4245)))+(((IkReal(-1.00000000000000))*(x4231)*(x4235)))+(((sj9)*(x4239))));
evalcond[5]=((((x4237)*(x4247)))+(((sj13)*(x4240)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x4241)))+(((IkReal(-1.00000000000000))*(r10)*(x4242)*(x4247)))+(((IkReal(-1.00000000000000))*(sj14)*(x4235)*(x4246)))+(((cj13)*(sj14)*(x4230))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x4232)*(x4245)))+(((x4231)*(x4243)))+(((x4231)*(x4234)))+(((IkReal(-1.00000000000000))*(x4229)*(x4245)))+(((IkReal(-1.00000000000000))*(x4239)*(x4242)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x4241))));
evalcond[7]=((((x4235)*(x4236)))+(((x4237)*(x4238)))+(((IkReal(-1.00000000000000))*(py)*(x4242)))+(((IkReal(-1.00000000000000))*(x4238)*(x4244)))+(((IkReal(-1.00000000000000))*(x4228)*(x4237)))+(((x4228)*(x4244)))+(((px)*(sj9)))+(((x4233)*(x4235)))+(((IkReal(-1.00000000000000))*(x4230)*(x4236)))+(((IkReal(-1.00000000000000))*(x4230)*(x4233))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x4233)*(x4243)))+(((IkReal(-1.00000000000000))*(x4232)*(x4238)))+(((IkReal(-1.00000000000000))*(px)*(x4242)))+(((IkReal(-1.00000000000000))*(py)*(x4241)))+(((IkReal(-1.00000000000000))*(x4233)*(x4234)))+(((IkReal(-1.00000000000000))*(x4229)*(x4238)))+(((x4228)*(x4229)))+(((x4228)*(x4232)))+(((IkReal(-1.00000000000000))*(x4236)*(x4243)))+(((IkReal(-1.00000000000000))*(x4234)*(x4236))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4248=IKcos(j12);
IkReal x4249=((cj13)*(sj9));
IkReal x4250=((IkReal(1.00000000000000))*(cj14));
IkReal x4251=((cj13)*(sj14));
IkReal x4252=((cj9)*(r00));
IkReal x4253=((cj9)*(r01));
IkReal x4254=((IkReal(1.00000000000000))*(sj14));
IkReal x4255=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x4255))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4251)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x4248));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4250)))+(((IkReal(-1.00000000000000))*(x4252)*(x4254)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4254)))+(((IkReal(-1.00000000000000))*(x4250)*(x4253)))+(((IkReal(-1.00000000000000))*(x4248))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x4250)*(x4252)))+(((IkReal(-1.00000000000000))*(r10)*(x4249)*(x4250)))+(((r11)*(sj14)*(x4249)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x4255)))+(((x4251)*(x4253)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4256=((IkReal(0.0100000000000000))*(cj14));
IkReal x4257=((r10)*(sj9));
IkReal x4258=((cj9)*(r11));
IkReal x4259=((sj13)*(sj14));
IkReal x4260=((cj9)*(r00));
IkReal x4261=((IkReal(0.374290000000000))*(cj14));
IkReal x4262=((cj9)*(r01));
IkReal x4263=((r01)*(sj9));
IkReal x4264=((IkReal(0.0100000000000000))*(sj14));
IkReal x4265=((r00)*(sj9));
IkReal x4266=((IkReal(0.374290000000000))*(sj14));
IkReal x4267=((cj13)*(r02));
IkReal x4268=((cj9)*(r12));
IkReal x4269=((IkReal(1.00000000000000))*(sj9));
IkReal x4270=((IkReal(1.00000000000000))*(cj9));
IkReal x4271=((r11)*(sj9));
IkReal x4272=((cj9)*(r10));
IkReal x4273=((cj14)*(sj13));
IkReal x4274=((IkReal(1.00000000000000))*(cj13));
IkReal x4275=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4259)))+(((r20)*(x4273)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((r21)*(x4264)))+(((r21)*(x4261)))+(pz)+(((r20)*(x4266)))+(((IkReal(-1.00000000000000))*(r20)*(x4256))));
evalcond[3]=((((cj14)*(x4263)))+(((sj14)*(x4265)))+(((IkReal(-1.00000000000000))*(cj14)*(x4258)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4270))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x4270)*(x4273)))+(((x4265)*(x4273)))+(((sj9)*(x4267)))+(((x4258)*(x4259)))+(((IkReal(-1.00000000000000))*(x4259)*(x4263)))+(((IkReal(-1.00000000000000))*(x4268)*(x4274))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x4270)*(x4275)))+(((cj13)*(sj14)*(x4258)))+(((IkReal(-1.00000000000000))*(sj14)*(x4263)*(x4274)))+(((x4265)*(x4275)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x4269)))+(((sj13)*(x4268))));
evalcond[6]=((((x4259)*(x4262)))+(((x4259)*(x4271)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x4269)))+(((IkReal(-1.00000000000000))*(x4260)*(x4273)))+(((IkReal(-1.00000000000000))*(x4267)*(x4270)))+(((IkReal(-1.00000000000000))*(x4257)*(x4273))));
evalcond[7]=((((x4256)*(x4272)))+(((IkReal(-1.00000000000000))*(x4256)*(x4265)))+(((x4265)*(x4266)))+(((x4263)*(x4264)))+(((IkReal(-1.00000000000000))*(x4258)*(x4261)))+(((IkReal(-1.00000000000000))*(x4258)*(x4264)))+(((IkReal(-1.00000000000000))*(py)*(x4270)))+(((px)*(sj9)))+(((x4261)*(x4263)))+(((IkReal(-1.00000000000000))*(x4266)*(x4272))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x4264)*(x4271)))+(((x4256)*(x4260)))+(((IkReal(-1.00000000000000))*(px)*(x4270)))+(((IkReal(-1.00000000000000))*(py)*(x4269)))+(((IkReal(-1.00000000000000))*(x4261)*(x4271)))+(((IkReal(-1.00000000000000))*(x4261)*(x4262)))+(((x4256)*(x4257)))+(((IkReal(-1.00000000000000))*(x4260)*(x4266)))+(((IkReal(-1.00000000000000))*(x4257)*(x4266)))+(((IkReal(-1.00000000000000))*(x4262)*(x4264))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4276=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(x4276)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4276))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(x4276)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4276)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(x4276)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4276)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4277=IKsin(j12);
IkReal x4278=((cj13)*(sj9));
IkReal x4279=((IkReal(1.00000000000000))*(cj14));
IkReal x4280=((cj13)*(sj14));
IkReal x4281=((cj9)*(r00));
IkReal x4282=((cj9)*(r01));
IkReal x4283=((IkReal(1.00000000000000))*(sj14));
IkReal x4284=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x4277));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4284)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x4280))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4284)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4283)))+(((IkReal(-1.00000000000000))*(x4279)*(x4282)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4279)))+(((IkReal(-1.00000000000000))*(x4281)*(x4283))));
evalcond[3]=((((x4280)*(x4282)))+(((r11)*(sj14)*(x4278)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4279)*(x4281)))+(((IkReal(-1.00000000000000))*(r10)*(x4278)*(x4279)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x4277))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4285=((IkReal(0.0100000000000000))*(cj14));
IkReal x4286=((r10)*(sj9));
IkReal x4287=((cj9)*(r11));
IkReal x4288=((sj13)*(sj14));
IkReal x4289=((cj14)*(r21));
IkReal x4290=((cj9)*(r00));
IkReal x4291=((IkReal(0.374290000000000))*(cj14));
IkReal x4292=((cj9)*(r01));
IkReal x4293=((r01)*(sj9));
IkReal x4294=((IkReal(0.0100000000000000))*(sj14));
IkReal x4295=((IkReal(1.00000000000000))*(sj13));
IkReal x4296=((r00)*(sj9));
IkReal x4297=((IkReal(0.374290000000000))*(sj14));
IkReal x4298=((cj13)*(sj9));
IkReal x4299=((IkReal(1.00000000000000))*(cj13));
IkReal x4300=((IkReal(1.00000000000000))*(py));
IkReal x4301=((r11)*(sj9));
IkReal x4302=((cj9)*(r10));
IkReal x4303=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x4289));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x4303)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x4288))));
evalcond[3]=((((IkReal(0.374290000000000))*(x4289)))+(((r20)*(x4297)))+(((IkReal(-1.00000000000000))*(r20)*(x4285)))+(((r21)*(x4294)))+(pz));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x4295)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4299))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4288)*(x4293)))+(((x4287)*(x4288)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x4299)))+(((x4296)*(x4303)))+(((IkReal(-1.00000000000000))*(cj14)*(x4295)*(x4302)))+(((r02)*(x4298))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x4298)))+(((x4288)*(x4292)))+(((IkReal(-1.00000000000000))*(cj14)*(x4286)*(x4295)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x4299)))+(((x4288)*(x4301)))+(((IkReal(-1.00000000000000))*(cj14)*(x4290)*(x4295))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x4293)*(x4294)))+(((IkReal(-1.00000000000000))*(x4297)*(x4302)))+(((IkReal(-1.00000000000000))*(x4285)*(x4296)))+(((IkReal(-1.00000000000000))*(cj9)*(x4300)))+(((x4291)*(x4293)))+(((x4296)*(x4297)))+(((IkReal(-1.00000000000000))*(x4287)*(x4291)))+(((IkReal(-1.00000000000000))*(x4287)*(x4294)))+(((px)*(sj9)))+(((x4285)*(x4302))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x4300)))+(((x4285)*(x4286)))+(((IkReal(-1.00000000000000))*(x4291)*(x4301)))+(((IkReal(-1.00000000000000))*(x4291)*(x4292)))+(((IkReal(-1.00000000000000))*(x4290)*(x4297)))+(((x4285)*(x4290)))+(((IkReal(-1.00000000000000))*(x4294)*(x4301)))+(((IkReal(-1.00000000000000))*(x4286)*(x4297)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x4292)*(x4294))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4304=((r00)*(sj14));
IkReal x4305=((cj14)*(sj9));
IkReal x4306=((IkReal(1.00000000000000))*(r11));
IkReal x4307=((IkReal(1.00000000000000))*(cj9));
IkReal x4308=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x4306)))+(((sj9)*(x4304)))+(((IkReal(-1.00000000000000))*(x4307)*(x4308)))+(((r01)*(x4305))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4307)))+(((IkReal(-1.00000000000000))*(x4305)*(x4306)))+(((IkReal(-1.00000000000000))*(sj9)*(x4308)))+(((IkReal(-1.00000000000000))*(x4304)*(x4307))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x4306)))+(((sj9)*(x4304)))+(((IkReal(-1.00000000000000))*(x4307)*(x4308)))+(((r01)*(x4305)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4307)))+(((IkReal(-1.00000000000000))*(x4305)*(x4306)))+(((IkReal(-1.00000000000000))*(sj9)*(x4308)))+(((IkReal(-1.00000000000000))*(x4304)*(x4307)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x4306)))+(((sj9)*(x4304)))+(((IkReal(-1.00000000000000))*(x4307)*(x4308)))+(((r01)*(x4305)))), ((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4307)))+(((IkReal(-1.00000000000000))*(x4305)*(x4306)))+(((IkReal(-1.00000000000000))*(sj9)*(x4308)))+(((IkReal(-1.00000000000000))*(x4304)*(x4307)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4309=IKcos(j12);
IkReal x4310=((cj9)*(sj14));
IkReal x4311=((IkReal(1.00000000000000))*(r00));
IkReal x4312=((cj14)*(sj9));
IkReal x4313=((IkReal(1.00000000000000))*(r11));
IkReal x4314=((cj13)*(r01));
IkReal x4315=((IkReal(1.00000000000000))*(r10));
IkReal x4316=((cj9)*(sj13));
IkReal x4317=((cj14)*(cj9));
IkReal x4318=((sj14)*(sj9));
IkReal x4319=((sj13)*(sj9));
IkReal x4320=((cj13)*(r11));
IkReal x4321=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4321)))+(((IkReal(-1.00000000000000))*(x4310)*(x4315)))+(((r01)*(x4312)))+(((r00)*(x4318)))+(((IkReal(-1.00000000000000))*(x4313)*(x4317))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4312)*(x4313)))+(((IkReal(-1.00000000000000))*(x4310)*(x4311)))+(((IkReal(-1.00000000000000))*(x4315)*(x4318)))+(((IkReal(-1.00000000000000))*(x4309)))+(((IkReal(-1.00000000000000))*(r01)*(x4317))));
evalcond[2]=((((x4310)*(x4320)))+(((r12)*(x4316)))+(((IkReal(-1.00000000000000))*(x4314)*(x4318)))+(((cj13)*(r00)*(x4312)))+(((IkReal(-1.00000000000000))*(r02)*(x4319)))+(((IkReal(-1.00000000000000))*(cj13)*(x4315)*(x4317)))+(x4309));
evalcond[3]=((((x4310)*(x4314)))+(((IkReal(-1.00000000000000))*(x4321)))+(((x4318)*(x4320)))+(((r12)*(x4319)))+(((IkReal(-1.00000000000000))*(cj13)*(x4311)*(x4317)))+(((IkReal(-1.00000000000000))*(cj13)*(x4312)*(x4315)))+(((r02)*(x4316))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4322=((IkReal(0.0100000000000000))*(cj14));
IkReal x4323=((r10)*(sj9));
IkReal x4324=((cj9)*(r11));
IkReal x4325=((sj13)*(sj14));
IkReal x4326=((cj14)*(r21));
IkReal x4327=((cj9)*(r00));
IkReal x4328=((IkReal(0.374290000000000))*(cj14));
IkReal x4329=((cj9)*(r01));
IkReal x4330=((r01)*(sj9));
IkReal x4331=((IkReal(0.0100000000000000))*(sj14));
IkReal x4332=((IkReal(1.00000000000000))*(sj13));
IkReal x4333=((r00)*(sj9));
IkReal x4334=((IkReal(0.374290000000000))*(sj14));
IkReal x4335=((cj13)*(sj9));
IkReal x4336=((IkReal(1.00000000000000))*(cj13));
IkReal x4337=((IkReal(1.00000000000000))*(py));
IkReal x4338=((r11)*(sj9));
IkReal x4339=((cj9)*(r10));
IkReal x4340=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x4326));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x4325)))+(((cj13)*(r22)))+(((r20)*(x4340))));
evalcond[3]=((((r20)*(x4334)))+(((IkReal(-1.00000000000000))*(r20)*(x4322)))+(((r21)*(x4331)))+(((IkReal(0.374290000000000))*(x4326)))+(pz));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4336)))+(((IkReal(-1.00000000000000))*(r22)*(x4332))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4325)*(x4330)))+(((x4324)*(x4325)))+(((IkReal(-1.00000000000000))*(cj14)*(x4332)*(x4339)))+(((r02)*(x4335)))+(((x4333)*(x4340)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x4336))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x4323)*(x4332)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x4336)))+(((IkReal(-1.00000000000000))*(cj14)*(x4327)*(x4332)))+(((x4325)*(x4329)))+(((x4325)*(x4338)))+(((IkReal(-1.00000000000000))*(r12)*(x4335))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x4334)*(x4339)))+(((IkReal(-1.00000000000000))*(x4324)*(x4328)))+(((IkReal(-1.00000000000000))*(x4324)*(x4331)))+(((x4322)*(x4339)))+(((IkReal(-1.00000000000000))*(cj9)*(x4337)))+(((x4333)*(x4334)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4322)*(x4333)))+(((x4328)*(x4330)))+(((x4330)*(x4331))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x4331)*(x4338)))+(((IkReal(-1.00000000000000))*(x4327)*(x4334)))+(((IkReal(-1.00000000000000))*(sj9)*(x4337)))+(((IkReal(-1.00000000000000))*(x4323)*(x4334)))+(((x4322)*(x4323)))+(((x4322)*(x4327)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x4328)*(x4329)))+(((IkReal(-1.00000000000000))*(x4329)*(x4331)))+(((IkReal(-1.00000000000000))*(x4328)*(x4338))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4341=((cj14)*(r11));
IkReal x4342=((IkReal(1.00000000000000))*(sj9));
IkReal x4343=((cj14)*(r01));
IkReal x4344=((r00)*(sj14));
IkReal x4345=((r10)*(sj14));
IkReal x4346=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x4342)*(x4343)))+(((IkReal(-1.00000000000000))*(x4342)*(x4344)))+(((cj9)*(x4345)))+(((cj9)*(x4341))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x4344)*(x4346)))+(((IkReal(-1.00000000000000))*(x4342)*(x4345)))+(((IkReal(-1.00000000000000))*(x4341)*(x4342)))+(((IkReal(-1.00000000000000))*(x4343)*(x4346))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x4342)*(x4343)))+(((IkReal(-1.00000000000000))*(x4342)*(x4344)))+(((cj9)*(x4345)))+(((cj9)*(x4341)))))+IKsqr(((((IkReal(-1.00000000000000))*(x4344)*(x4346)))+(((IkReal(-1.00000000000000))*(x4342)*(x4345)))+(((IkReal(-1.00000000000000))*(x4341)*(x4342)))+(((IkReal(-1.00000000000000))*(x4343)*(x4346)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x4342)*(x4343)))+(((IkReal(-1.00000000000000))*(x4342)*(x4344)))+(((cj9)*(x4345)))+(((cj9)*(x4341)))), ((((IkReal(-1.00000000000000))*(x4344)*(x4346)))+(((IkReal(-1.00000000000000))*(x4342)*(x4345)))+(((IkReal(-1.00000000000000))*(x4341)*(x4342)))+(((IkReal(-1.00000000000000))*(x4343)*(x4346)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4347=IKsin(j12);
IkReal x4348=((cj13)*(r10));
IkReal x4349=((cj9)*(sj14));
IkReal x4350=((cj13)*(r01));
IkReal x4351=((IkReal(1.00000000000000))*(r10));
IkReal x4352=((cj14)*(r01));
IkReal x4353=((cj9)*(sj13));
IkReal x4354=((IkReal(1.00000000000000))*(cj9));
IkReal x4355=((sj14)*(sj9));
IkReal x4356=((sj13)*(sj9));
IkReal x4357=((cj13)*(r11));
IkReal x4358=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x4359=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4360=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4354)))+(((IkReal(-1.00000000000000))*(x4349)*(x4351)))+(((sj9)*(x4352)))+(x4347)+(((r00)*(x4355))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4358)))+(((IkReal(-1.00000000000000))*(r11)*(x4359)))+(((IkReal(-1.00000000000000))*(x4351)*(x4355)))+(((IkReal(-1.00000000000000))*(r00)*(x4349)))+(((IkReal(-1.00000000000000))*(x4352)*(x4354))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x4348)*(x4354)))+(((IkReal(-1.00000000000000))*(x4358)))+(((x4349)*(x4357)))+(((r12)*(x4353)))+(((sj9)*(x4360)))+(((IkReal(-1.00000000000000))*(x4350)*(x4355)))+(((IkReal(-1.00000000000000))*(r02)*(x4356))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4354)*(x4360)))+(((r02)*(x4353)))+(((x4349)*(x4350)))+(((r12)*(x4356)))+(((IkReal(-1.00000000000000))*(x4348)*(x4359)))+(((x4355)*(x4357)))+(((IkReal(-1.00000000000000))*(x4347))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4361=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4361)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4361)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4361)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4361)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4361)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4361)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4362=IKsin(j12);
IkReal x4363=IKcos(j12);
IkReal x4364=((IkReal(1.00000000000000))*(sj13));
IkReal x4365=((cj13)*(r10));
IkReal x4366=((cj9)*(sj14));
IkReal x4367=((cj13)*(r01));
IkReal x4368=((IkReal(1.00000000000000))*(r10));
IkReal x4369=((r12)*(sj13));
IkReal x4370=((cj13)*(sj14));
IkReal x4371=((cj14)*(r01));
IkReal x4372=((cj13)*(cj14));
IkReal x4373=((IkReal(1.00000000000000))*(cj9));
IkReal x4374=((sj14)*(sj9));
IkReal x4375=((IkReal(1.00000000000000))*(x4362));
IkReal x4376=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x4375))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x4364)))+(((IkReal(-1.00000000000000))*(r21)*(x4370)))+(((r20)*(x4372)))+(((cj11)*(x4363))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4373)))+(((IkReal(-1.00000000000000))*(sj11)*(x4375)))+(((r00)*(x4374)))+(((sj9)*(x4371)))+(((IkReal(-1.00000000000000))*(x4366)*(x4368))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4371)*(x4373)))+(((IkReal(-1.00000000000000))*(x4363)))+(((IkReal(-1.00000000000000))*(r11)*(x4376)))+(((IkReal(-1.00000000000000))*(x4368)*(x4374)))+(((IkReal(-1.00000000000000))*(r00)*(x4366))));
evalcond[4]=((((cj9)*(x4369)))+(((cj13)*(r11)*(x4366)))+(((IkReal(-1.00000000000000))*(x4367)*(x4374)))+(((IkReal(-1.00000000000000))*(cj14)*(x4365)*(x4373)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4364)))+(((sj11)*(x4363)))+(((r00)*(sj9)*(x4372))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x4375)))+(((IkReal(-1.00000000000000))*(x4365)*(x4376)))+(((x4366)*(x4367)))+(((r11)*(sj9)*(x4370)))+(((sj9)*(x4369)))+(((IkReal(-1.00000000000000))*(r00)*(x4372)*(x4373))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4377=((IkReal(1.00000000000000))*(cj14));
IkReal x4378=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4377)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x4378)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4378)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4377))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4377)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x4378)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4378)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4377)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4377)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x4378)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4378)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4377)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4379=IKsin(j12);
IkReal x4380=IKcos(j12);
IkReal x4381=((IkReal(1.00000000000000))*(sj13));
IkReal x4382=((cj13)*(r10));
IkReal x4383=((cj9)*(sj14));
IkReal x4384=((cj13)*(r01));
IkReal x4385=((IkReal(1.00000000000000))*(r10));
IkReal x4386=((r12)*(sj13));
IkReal x4387=((cj13)*(sj14));
IkReal x4388=((cj14)*(r01));
IkReal x4389=((cj13)*(cj14));
IkReal x4390=((IkReal(1.00000000000000))*(cj9));
IkReal x4391=((sj14)*(sj9));
IkReal x4392=((IkReal(1.00000000000000))*(x4379));
IkReal x4393=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x4392))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4387)))+(((IkReal(-1.00000000000000))*(r22)*(x4381)))+(((r20)*(x4389)))+(((cj11)*(x4380))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x4392)))+(((sj9)*(x4388)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4390)))+(((IkReal(-1.00000000000000))*(x4383)*(x4385)))+(((r00)*(x4391))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4393)))+(((IkReal(-1.00000000000000))*(x4380)))+(((IkReal(-1.00000000000000))*(x4388)*(x4390)))+(((IkReal(-1.00000000000000))*(r00)*(x4383)))+(((IkReal(-1.00000000000000))*(x4385)*(x4391))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4381)))+(((sj11)*(x4380)))+(((r00)*(sj9)*(x4389)))+(((cj9)*(x4386)))+(((cj13)*(r11)*(x4383)))+(((IkReal(-1.00000000000000))*(cj14)*(x4382)*(x4390)))+(((IkReal(-1.00000000000000))*(x4384)*(x4391))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4392)))+(((r11)*(sj9)*(x4387)))+(((IkReal(-1.00000000000000))*(r00)*(x4389)*(x4390)))+(((x4383)*(x4384)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x4386)))+(((IkReal(-1.00000000000000))*(x4382)*(x4393))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4394=IKsin(j12);
IkReal x4395=IKcos(j12);
IkReal x4396=((IkReal(1.00000000000000))*(sj13));
IkReal x4397=((cj13)*(r10));
IkReal x4398=((cj9)*(sj14));
IkReal x4399=((cj13)*(r01));
IkReal x4400=((IkReal(1.00000000000000))*(r10));
IkReal x4401=((r12)*(sj13));
IkReal x4402=((cj13)*(sj14));
IkReal x4403=((cj14)*(r01));
IkReal x4404=((cj13)*(cj14));
IkReal x4405=((IkReal(1.00000000000000))*(cj9));
IkReal x4406=((sj14)*(sj9));
IkReal x4407=((IkReal(1.00000000000000))*(x4394));
IkReal x4408=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x4407))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4402)))+(((IkReal(-1.00000000000000))*(r22)*(x4396)))+(((r20)*(x4404)))+(((cj11)*(x4395))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4405)))+(((sj9)*(x4403)))+(((r00)*(x4406)))+(((IkReal(-1.00000000000000))*(sj11)*(x4407)))+(((IkReal(-1.00000000000000))*(x4398)*(x4400))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4395)))+(((IkReal(-1.00000000000000))*(x4403)*(x4405)))+(((IkReal(-1.00000000000000))*(x4400)*(x4406)))+(((IkReal(-1.00000000000000))*(r11)*(x4408)))+(((IkReal(-1.00000000000000))*(r00)*(x4398))));
evalcond[4]=((((r00)*(sj9)*(x4404)))+(((cj9)*(x4401)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4396)))+(((IkReal(-1.00000000000000))*(x4399)*(x4406)))+(((sj11)*(x4395)))+(((IkReal(-1.00000000000000))*(cj14)*(x4397)*(x4405)))+(((cj13)*(r11)*(x4398))));
evalcond[5]=((((r11)*(sj9)*(x4402)))+(((x4398)*(x4399)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x4401)))+(((IkReal(-1.00000000000000))*(r00)*(x4404)*(x4405)))+(((IkReal(-1.00000000000000))*(x4407)))+(((IkReal(-1.00000000000000))*(x4397)*(x4408))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4409=((IkReal(0.0100000000000000))*(cj14));
IkReal x4410=((r10)*(sj9));
IkReal x4411=((cj9)*(r11));
IkReal x4412=((sj13)*(sj14));
IkReal x4413=((cj9)*(r00));
IkReal x4414=((IkReal(0.374290000000000))*(cj14));
IkReal x4415=((cj9)*(r01));
IkReal x4416=((r01)*(sj9));
IkReal x4417=((IkReal(0.0100000000000000))*(sj14));
IkReal x4418=((r00)*(sj9));
IkReal x4419=((IkReal(0.374290000000000))*(sj14));
IkReal x4420=((cj13)*(r02));
IkReal x4421=((IkReal(1.00000000000000))*(sj9));
IkReal x4422=((IkReal(1.00000000000000))*(cj9));
IkReal x4423=((cj13)*(r12));
IkReal x4424=((r11)*(sj9));
IkReal x4425=((cj9)*(r10));
IkReal x4426=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4426)))+(((IkReal(-1.00000000000000))*(r21)*(x4412)))+(sj11)+(((cj13)*(r22))));
evalcond[2]=((((r21)*(x4414)))+(((r21)*(x4417)))+(((IkReal(-1.00000000000000))*(r20)*(x4409)))+(((r20)*(x4419)))+(pz)+(((IkReal(-0.0690000000000000))*(cj11))));
evalcond[3]=((((sj9)*(x4420)))+(((IkReal(-1.00000000000000))*(x4422)*(x4423)))+(((x4418)*(x4426)))+(cj11)+(((IkReal(-1.00000000000000))*(r10)*(x4422)*(x4426)))+(((x4411)*(x4412)))+(((IkReal(-1.00000000000000))*(x4412)*(x4416))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4410)*(x4426)))+(((IkReal(-1.00000000000000))*(x4420)*(x4422)))+(((x4412)*(x4424)))+(((x4412)*(x4415)))+(((IkReal(-1.00000000000000))*(x4421)*(x4423)))+(((IkReal(-1.00000000000000))*(x4413)*(x4426))));
evalcond[5]=((((x4414)*(x4416)))+(((x4418)*(x4419)))+(((IkReal(-1.00000000000000))*(x4409)*(x4418)))+(((IkReal(-1.00000000000000))*(py)*(x4422)))+(((IkReal(-1.00000000000000))*(x4411)*(x4417)))+(((IkReal(-1.00000000000000))*(x4411)*(x4414)))+(((IkReal(0.0690000000000000))*(sj11)))+(((x4409)*(x4425)))+(((x4416)*(x4417)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4419)*(x4425))));
evalcond[6]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x4414)*(x4424)))+(((IkReal(-1.00000000000000))*(x4410)*(x4419)))+(((IkReal(-1.00000000000000))*(py)*(x4421)))+(((IkReal(-1.00000000000000))*(x4417)*(x4424)))+(((IkReal(-1.00000000000000))*(x4414)*(x4415)))+(((IkReal(-1.00000000000000))*(x4413)*(x4419)))+(((IkReal(-1.00000000000000))*(x4415)*(x4417)))+(((IkReal(-1.00000000000000))*(px)*(x4422)))+(((x4409)*(x4413)))+(((x4409)*(x4410))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4427=((IkReal(0.0100000000000000))*(cj14));
IkReal x4428=((r10)*(sj9));
IkReal x4429=((cj9)*(r11));
IkReal x4430=((sj13)*(sj14));
IkReal x4431=((cj9)*(r00));
IkReal x4432=((IkReal(0.374290000000000))*(cj14));
IkReal x4433=((cj9)*(r01));
IkReal x4434=((r01)*(sj9));
IkReal x4435=((IkReal(0.0100000000000000))*(sj14));
IkReal x4436=((r00)*(sj9));
IkReal x4437=((IkReal(0.374290000000000))*(sj14));
IkReal x4438=((cj13)*(r02));
IkReal x4439=((cj9)*(r12));
IkReal x4440=((IkReal(1.00000000000000))*(sj9));
IkReal x4441=((IkReal(1.00000000000000))*(cj9));
IkReal x4442=((r11)*(sj9));
IkReal x4443=((cj9)*(r10));
IkReal x4444=((cj14)*(sj13));
IkReal x4445=((IkReal(1.00000000000000))*(cj13));
IkReal x4446=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4444)))+(((IkReal(-1.00000000000000))*(r21)*(x4430)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((r20)*(x4437)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x4427)))+(((r21)*(x4435)))+(((r21)*(x4432))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4441)))+(((sj14)*(x4436)))+(((IkReal(-1.00000000000000))*(cj14)*(x4429)))+(((cj14)*(x4434))));
evalcond[4]=((IkReal(1.00000000000000))+(((x4429)*(x4430)))+(((sj9)*(x4438)))+(((IkReal(-1.00000000000000))*(x4430)*(x4434)))+(((x4436)*(x4444)))+(((IkReal(-1.00000000000000))*(x4439)*(x4445)))+(((IkReal(-1.00000000000000))*(r10)*(x4441)*(x4444))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x4440)))+(((cj13)*(sj14)*(x4429)))+(((IkReal(-1.00000000000000))*(sj14)*(x4434)*(x4445)))+(((x4436)*(x4446)))+(((IkReal(-1.00000000000000))*(r10)*(x4441)*(x4446)))+(((sj13)*(x4439))));
evalcond[6]=((((x4430)*(x4442)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x4440)))+(((x4430)*(x4433)))+(((IkReal(-1.00000000000000))*(x4431)*(x4444)))+(((IkReal(-1.00000000000000))*(x4438)*(x4441)))+(((IkReal(-1.00000000000000))*(x4428)*(x4444))));
evalcond[7]=((((x4432)*(x4434)))+(((IkReal(-1.00000000000000))*(x4427)*(x4436)))+(((IkReal(-1.00000000000000))*(x4429)*(x4435)))+(((IkReal(-1.00000000000000))*(x4429)*(x4432)))+(((IkReal(-1.00000000000000))*(py)*(x4441)))+(((x4436)*(x4437)))+(((x4434)*(x4435)))+(((x4427)*(x4443)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4437)*(x4443))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x4428)*(x4437)))+(((IkReal(-1.00000000000000))*(x4433)*(x4435)))+(((IkReal(-1.00000000000000))*(x4432)*(x4442)))+(((IkReal(-1.00000000000000))*(x4432)*(x4433)))+(((IkReal(-1.00000000000000))*(x4435)*(x4442)))+(((x4427)*(x4428)))+(((IkReal(-1.00000000000000))*(py)*(x4440)))+(((IkReal(-1.00000000000000))*(x4431)*(x4437)))+(((IkReal(-1.00000000000000))*(px)*(x4441)))+(((x4427)*(x4431))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4447=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(x4447)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4447))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(x4447)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4447)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(x4447)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4447)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4448=IKcos(j12);
IkReal x4449=IKsin(j12);
IkReal x4450=((cj13)*(sj9));
IkReal x4451=((IkReal(1.00000000000000))*(cj14));
IkReal x4452=((cj13)*(sj14));
IkReal x4453=((cj9)*(r00));
IkReal x4454=((cj9)*(r01));
IkReal x4455=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(x4449)+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4452)))+(((IkReal(-1.00000000000000))*(x4448)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4451)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4455)))+(x4448)+(((IkReal(-1.00000000000000))*(x4451)*(x4454)))+(((IkReal(-1.00000000000000))*(x4453)*(x4455))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x4451)*(x4453)))+(x4449)+(((cj9)*(r02)*(sj13)))+(((x4452)*(x4454)))+(((IkReal(-1.00000000000000))*(r10)*(x4450)*(x4451)))+(((r11)*(sj14)*(x4450)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4456=((IkReal(0.0100000000000000))*(cj14));
IkReal x4457=((r10)*(sj9));
IkReal x4458=((cj9)*(r11));
IkReal x4459=((sj13)*(sj14));
IkReal x4460=((cj9)*(r00));
IkReal x4461=((IkReal(0.374290000000000))*(cj14));
IkReal x4462=((cj9)*(r01));
IkReal x4463=((r01)*(sj9));
IkReal x4464=((IkReal(0.0100000000000000))*(sj14));
IkReal x4465=((r00)*(sj9));
IkReal x4466=((IkReal(0.374290000000000))*(sj14));
IkReal x4467=((cj13)*(r02));
IkReal x4468=((cj9)*(r12));
IkReal x4469=((IkReal(1.00000000000000))*(sj9));
IkReal x4470=((IkReal(1.00000000000000))*(cj9));
IkReal x4471=((r11)*(sj9));
IkReal x4472=((cj9)*(r10));
IkReal x4473=((cj14)*(sj13));
IkReal x4474=((IkReal(1.00000000000000))*(cj13));
IkReal x4475=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4473)))+(((IkReal(-1.00000000000000))*(r21)*(x4459)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(pz)+(((r20)*(x4466)))+(((IkReal(-1.00000000000000))*(r20)*(x4456)))+(((r21)*(x4461)))+(((r21)*(x4464))));
evalcond[3]=((((sj14)*(x4465)))+(((cj14)*(x4463)))+(((IkReal(-1.00000000000000))*(cj14)*(x4458)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4470))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x4459)*(x4463)))+(((sj9)*(x4467)))+(((x4458)*(x4459)))+(((x4465)*(x4473)))+(((IkReal(-1.00000000000000))*(r10)*(x4470)*(x4473)))+(((IkReal(-1.00000000000000))*(x4468)*(x4474))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x4469)))+(((IkReal(-1.00000000000000))*(sj14)*(x4463)*(x4474)))+(((x4465)*(x4475)))+(((cj13)*(sj14)*(x4458)))+(((IkReal(-1.00000000000000))*(r10)*(x4470)*(x4475)))+(((sj13)*(x4468))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x4460)*(x4473)))+(((x4459)*(x4471)))+(((IkReal(-1.00000000000000))*(x4457)*(x4473)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x4469)))+(((x4459)*(x4462)))+(((IkReal(-1.00000000000000))*(x4467)*(x4470))));
evalcond[7]=((((x4456)*(x4472)))+(((IkReal(-1.00000000000000))*(x4458)*(x4464)))+(((IkReal(-1.00000000000000))*(x4458)*(x4461)))+(((px)*(sj9)))+(((x4463)*(x4464)))+(((IkReal(-1.00000000000000))*(x4466)*(x4472)))+(((IkReal(-1.00000000000000))*(x4456)*(x4465)))+(((x4465)*(x4466)))+(((x4461)*(x4463)))+(((IkReal(-1.00000000000000))*(py)*(x4470))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(px)*(x4470)))+(((IkReal(-1.00000000000000))*(py)*(x4469)))+(((IkReal(-1.00000000000000))*(x4462)*(x4464)))+(((x4456)*(x4457)))+(((IkReal(-1.00000000000000))*(x4457)*(x4466)))+(((IkReal(-1.00000000000000))*(x4461)*(x4471)))+(((IkReal(-1.00000000000000))*(x4464)*(x4471)))+(((IkReal(-1.00000000000000))*(x4460)*(x4466)))+(((x4456)*(x4460)))+(((IkReal(-1.00000000000000))*(x4461)*(x4462))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4476=IKcos(j12);
IkReal x4477=IKsin(j12);
IkReal x4478=((cj13)*(sj9));
IkReal x4479=((IkReal(1.00000000000000))*(cj14));
IkReal x4480=((cj13)*(sj14));
IkReal x4481=((cj9)*(r00));
IkReal x4482=((cj9)*(r01));
IkReal x4483=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x4477))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4480)))+(x4476)+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4481)*(x4483)))+(x4476)+(((IkReal(-1.00000000000000))*(x4479)*(x4482)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4483)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4479))));
evalcond[3]=((x4477)+(((r11)*(sj14)*(x4478)))+(((x4480)*(x4482)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4479)*(x4481)))+(((IkReal(-1.00000000000000))*(r10)*(x4478)*(x4479)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4484=((IkReal(0.0100000000000000))*(cj14));
IkReal x4485=((r10)*(sj9));
IkReal x4486=((cj9)*(r11));
IkReal x4487=((sj13)*(sj14));
IkReal x4488=((cj14)*(r21));
IkReal x4489=((cj9)*(r00));
IkReal x4490=((IkReal(0.374290000000000))*(cj14));
IkReal x4491=((cj9)*(r01));
IkReal x4492=((r01)*(sj9));
IkReal x4493=((IkReal(0.0100000000000000))*(sj14));
IkReal x4494=((IkReal(1.00000000000000))*(sj13));
IkReal x4495=((r00)*(sj9));
IkReal x4496=((IkReal(0.374290000000000))*(sj14));
IkReal x4497=((cj13)*(sj9));
IkReal x4498=((IkReal(1.00000000000000))*(cj13));
IkReal x4499=((IkReal(1.00000000000000))*(py));
IkReal x4500=((r11)*(sj9));
IkReal x4501=((cj9)*(r10));
IkReal x4502=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x4488)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x4487)))+(((r20)*(x4502)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x4493)))+(((IkReal(-1.00000000000000))*(r20)*(x4484)))+(pz)+(((IkReal(0.374290000000000))*(x4488)))+(((r20)*(x4496))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4498)))+(((IkReal(-1.00000000000000))*(r22)*(x4494))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x4494)*(x4501)))+(((x4495)*(x4502)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x4498)))+(((r02)*(x4497)))+(((IkReal(-1.00000000000000))*(x4487)*(x4492)))+(((x4486)*(x4487))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x4485)*(x4494)))+(((x4487)*(x4491)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x4498)))+(((IkReal(-1.00000000000000))*(r12)*(x4497)))+(((x4487)*(x4500)))+(((IkReal(-1.00000000000000))*(cj14)*(x4489)*(x4494))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x4484)*(x4495)))+(((x4484)*(x4501)))+(((x4490)*(x4492)))+(((IkReal(-1.00000000000000))*(cj9)*(x4499)))+(((x4492)*(x4493)))+(((IkReal(-1.00000000000000))*(x4496)*(x4501)))+(((px)*(sj9)))+(((x4495)*(x4496)))+(((IkReal(-1.00000000000000))*(x4486)*(x4493)))+(((IkReal(-1.00000000000000))*(x4486)*(x4490))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x4489)*(x4496)))+(((IkReal(-1.00000000000000))*(x4490)*(x4500)))+(((x4484)*(x4489)))+(((x4484)*(x4485)))+(((IkReal(-1.00000000000000))*(sj9)*(x4499)))+(((IkReal(-1.00000000000000))*(x4490)*(x4491)))+(((IkReal(-1.00000000000000))*(x4485)*(x4496)))+(((IkReal(-1.00000000000000))*(x4493)*(x4500)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x4491)*(x4493))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4503=((r00)*(sj14));
IkReal x4504=((cj14)*(r01));
IkReal x4505=((cj14)*(r11));
IkReal x4506=((r10)*(sj14));
IkReal x4507=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x4506)*(x4507)))+(((IkReal(-1.00000000000000))*(x4505)*(x4507)))+(((sj9)*(x4504)))+(((sj9)*(x4503))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x4504)))+(((cj9)*(x4503)))+(((sj9)*(x4505)))+(((sj9)*(x4506))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x4506)*(x4507)))+(((IkReal(-1.00000000000000))*(x4505)*(x4507)))+(((sj9)*(x4504)))+(((sj9)*(x4503)))))+IKsqr(((((cj9)*(x4504)))+(((cj9)*(x4503)))+(((sj9)*(x4505)))+(((sj9)*(x4506)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x4506)*(x4507)))+(((IkReal(-1.00000000000000))*(x4505)*(x4507)))+(((sj9)*(x4504)))+(((sj9)*(x4503)))), ((((cj9)*(x4504)))+(((cj9)*(x4503)))+(((sj9)*(x4505)))+(((sj9)*(x4506)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4508=IKcos(j12);
IkReal x4509=IKsin(j12);
IkReal x4510=((sj13)*(sj9));
IkReal x4511=((sj14)*(sj9));
IkReal x4512=((cj13)*(r11));
IkReal x4513=((cj9)*(sj14));
IkReal x4514=((cj13)*(r10));
IkReal x4515=((cj13)*(r01));
IkReal x4516=((cj13)*(r00));
IkReal x4517=((cj14)*(sj9));
IkReal x4518=((IkReal(1.00000000000000))*(r10));
IkReal x4519=((cj9)*(sj13));
IkReal x4520=((IkReal(1.00000000000000))*(x4517));
IkReal x4521=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4513)*(x4518)))+(((r01)*(x4517)))+(((r00)*(x4511)))+(((IkReal(-1.00000000000000))*(x4509)))+(((IkReal(-1.00000000000000))*(r11)*(x4521))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x4521)))+(x4508)+(((IkReal(-1.00000000000000))*(r00)*(x4513)))+(((IkReal(-1.00000000000000))*(x4511)*(x4518)))+(((IkReal(-1.00000000000000))*(r11)*(x4520))));
evalcond[2]=((((x4516)*(x4517)))+(x4508)+(((x4512)*(x4513)))+(((IkReal(-1.00000000000000))*(x4511)*(x4515)))+(((IkReal(-1.00000000000000))*(x4514)*(x4521)))+(((r12)*(x4519)))+(((IkReal(-1.00000000000000))*(r02)*(x4510))));
evalcond[3]=((((r02)*(x4519)))+(((x4511)*(x4512)))+(x4509)+(((x4513)*(x4515)))+(((IkReal(-1.00000000000000))*(x4514)*(x4520)))+(((IkReal(-1.00000000000000))*(x4516)*(x4521)))+(((r12)*(x4510))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4522=((IkReal(0.0100000000000000))*(cj14));
IkReal x4523=((r10)*(sj9));
IkReal x4524=((cj9)*(r11));
IkReal x4525=((sj13)*(sj14));
IkReal x4526=((cj14)*(r21));
IkReal x4527=((cj9)*(r00));
IkReal x4528=((IkReal(0.374290000000000))*(cj14));
IkReal x4529=((cj9)*(r01));
IkReal x4530=((r01)*(sj9));
IkReal x4531=((IkReal(0.0100000000000000))*(sj14));
IkReal x4532=((IkReal(1.00000000000000))*(sj13));
IkReal x4533=((r00)*(sj9));
IkReal x4534=((IkReal(0.374290000000000))*(sj14));
IkReal x4535=((cj13)*(sj9));
IkReal x4536=((IkReal(1.00000000000000))*(cj13));
IkReal x4537=((IkReal(1.00000000000000))*(py));
IkReal x4538=((r11)*(sj9));
IkReal x4539=((cj9)*(r10));
IkReal x4540=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x4526)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x4540)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x4525))));
evalcond[3]=((((r21)*(x4531)))+(((IkReal(-1.00000000000000))*(r20)*(x4522)))+(((IkReal(0.374290000000000))*(x4526)))+(pz)+(((r20)*(x4534))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x4536)))+(((IkReal(-1.00000000000000))*(r22)*(x4532))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x4532)*(x4539)))+(((IkReal(-1.00000000000000))*(x4525)*(x4530)))+(((x4533)*(x4540)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x4536)))+(((x4524)*(x4525)))+(((r02)*(x4535))));
evalcond[6]=((((x4525)*(x4538)))+(((x4525)*(x4529)))+(((IkReal(-1.00000000000000))*(r12)*(x4535)))+(((IkReal(-1.00000000000000))*(cj14)*(x4523)*(x4532)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x4536)))+(((IkReal(-1.00000000000000))*(cj14)*(x4527)*(x4532))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x4528)*(x4530)))+(((x4530)*(x4531)))+(((IkReal(-1.00000000000000))*(cj9)*(x4537)))+(((x4533)*(x4534)))+(((IkReal(-1.00000000000000))*(x4524)*(x4531)))+(((IkReal(-1.00000000000000))*(x4524)*(x4528)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4522)*(x4533)))+(((IkReal(-1.00000000000000))*(x4534)*(x4539)))+(((x4522)*(x4539))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x4531)*(x4538)))+(((IkReal(-1.00000000000000))*(x4527)*(x4534)))+(((IkReal(-1.00000000000000))*(x4528)*(x4538)))+(((IkReal(-1.00000000000000))*(x4528)*(x4529)))+(((IkReal(-1.00000000000000))*(sj9)*(x4537)))+(((IkReal(-1.00000000000000))*(x4523)*(x4534)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x4529)*(x4531)))+(((x4522)*(x4527)))+(((x4522)*(x4523))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4541=((cj14)*(cj9));
IkReal x4542=((IkReal(1.00000000000000))*(sj9));
IkReal x4543=((r00)*(sj14));
IkReal x4544=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4542)))+(((IkReal(-1.00000000000000))*(x4542)*(x4543)))+(((cj9)*(x4544)))+(((r11)*(x4541))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((sj9)*(x4544)))+(((cj9)*(x4543)))+(((r01)*(x4541))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4542)))+(((IkReal(-1.00000000000000))*(x4542)*(x4543)))+(((cj9)*(x4544)))+(((r11)*(x4541)))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((sj9)*(x4544)))+(((cj9)*(x4543)))+(((r01)*(x4541)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4542)))+(((IkReal(-1.00000000000000))*(x4542)*(x4543)))+(((cj9)*(x4544)))+(((r11)*(x4541)))), ((((cj14)*(r11)*(sj9)))+(((sj9)*(x4544)))+(((cj9)*(x4543)))+(((r01)*(x4541)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4545=IKcos(j12);
IkReal x4546=IKsin(j12);
IkReal x4547=((r12)*(sj13));
IkReal x4548=((sj14)*(sj9));
IkReal x4549=((cj13)*(r11));
IkReal x4550=((cj9)*(sj14));
IkReal x4551=((IkReal(1.00000000000000))*(cj14));
IkReal x4552=((cj13)*(cj9));
IkReal x4553=((cj13)*(r01));
IkReal x4554=((cj14)*(sj9));
IkReal x4555=((IkReal(1.00000000000000))*(r10));
IkReal x4556=((r02)*(sj13));
evalcond[0]=((((r01)*(x4554)))+(((IkReal(-1.00000000000000))*(x4550)*(x4555)))+(x4546)+(((r00)*(x4548)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x4551))));
evalcond[1]=((x4545)+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4551)))+(((IkReal(-1.00000000000000))*(x4548)*(x4555)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4551)))+(((IkReal(-1.00000000000000))*(r00)*(x4550))));
evalcond[2]=((((cj9)*(x4547)))+(((IkReal(-1.00000000000000))*(x4545)))+(((IkReal(-1.00000000000000))*(x4548)*(x4553)))+(((IkReal(-1.00000000000000))*(sj9)*(x4556)))+(((IkReal(-1.00000000000000))*(r10)*(x4551)*(x4552)))+(((cj13)*(r00)*(x4554)))+(((x4549)*(x4550))));
evalcond[3]=((((sj9)*(x4547)))+(((x4550)*(x4553)))+(x4546)+(((cj9)*(x4556)))+(((x4548)*(x4549)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x4551)))+(((IkReal(-1.00000000000000))*(r00)*(x4551)*(x4552))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4557=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x4557)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x4557))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x4557)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x4557)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj9)*(r10)*(x4557)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x4557)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4558=IKsin(j12);
IkReal x4559=IKcos(j12);
IkReal x4560=((IkReal(1.00000000000000))*(sj13));
IkReal x4561=((cj13)*(r10));
IkReal x4562=((cj9)*(sj14));
IkReal x4563=((cj13)*(r01));
IkReal x4564=((IkReal(1.00000000000000))*(r10));
IkReal x4565=((r12)*(sj13));
IkReal x4566=((cj13)*(sj14));
IkReal x4567=((cj14)*(r01));
IkReal x4568=((cj13)*(cj14));
IkReal x4569=((IkReal(1.00000000000000))*(cj9));
IkReal x4570=((sj14)*(sj9));
IkReal x4571=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x4558))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj11)*(x4559)))+(((IkReal(-1.00000000000000))*(r22)*(x4560)))+(((r20)*(x4568)))+(((IkReal(-1.00000000000000))*(r21)*(x4566))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4569)))+(((r00)*(x4570)))+(((IkReal(-1.00000000000000))*(sj11)*(x4558)))+(((IkReal(-1.00000000000000))*(x4562)*(x4564)))+(((sj9)*(x4567))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4567)*(x4569)))+(x4559)+(((IkReal(-1.00000000000000))*(x4564)*(x4570)))+(((IkReal(-1.00000000000000))*(r00)*(x4562)))+(((IkReal(-1.00000000000000))*(r11)*(x4571))));
evalcond[4]=((((r00)*(sj9)*(x4568)))+(((IkReal(-1.00000000000000))*(cj14)*(x4561)*(x4569)))+(((sj11)*(x4559)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4560)))+(((cj13)*(r11)*(x4562)))+(((IkReal(-1.00000000000000))*(x4563)*(x4570)))+(((cj9)*(x4565))));
evalcond[5]=((x4558)+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x4568)*(x4569)))+(((x4562)*(x4563)))+(((IkReal(-1.00000000000000))*(x4561)*(x4571)))+(((sj9)*(x4565)))+(((r11)*(sj9)*(x4566))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4572=IKsin(j12);
IkReal x4573=IKcos(j12);
IkReal x4574=((IkReal(1.00000000000000))*(sj13));
IkReal x4575=((cj13)*(r10));
IkReal x4576=((cj9)*(sj14));
IkReal x4577=((cj13)*(r01));
IkReal x4578=((IkReal(1.00000000000000))*(r10));
IkReal x4579=((r12)*(sj13));
IkReal x4580=((cj13)*(sj14));
IkReal x4581=((cj14)*(r01));
IkReal x4582=((cj13)*(cj14));
IkReal x4583=((IkReal(1.00000000000000))*(cj9));
IkReal x4584=((sj14)*(sj9));
IkReal x4585=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x4572))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4580)))+(((r20)*(x4582)))+(((IkReal(-1.00000000000000))*(r22)*(x4574)))+(((IkReal(-1.00000000000000))*(cj11)*(x4573))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x4572)))+(((IkReal(-1.00000000000000))*(x4576)*(x4578)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4583)))+(((sj9)*(x4581)))+(((r00)*(x4584))));
evalcond[3]=((x4573)+(((IkReal(-1.00000000000000))*(r00)*(x4576)))+(((IkReal(-1.00000000000000))*(x4581)*(x4583)))+(((IkReal(-1.00000000000000))*(r11)*(x4585)))+(((IkReal(-1.00000000000000))*(x4578)*(x4584))));
evalcond[4]=((((sj11)*(x4573)))+(((IkReal(-1.00000000000000))*(cj14)*(x4575)*(x4583)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4574)))+(((cj13)*(r11)*(x4576)))+(((cj9)*(x4579)))+(((r00)*(sj9)*(x4582)))+(((IkReal(-1.00000000000000))*(x4577)*(x4584))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4575)*(x4585)))+(x4572)+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x4580)))+(((IkReal(-1.00000000000000))*(r00)*(x4582)*(x4583)))+(((sj9)*(x4579)))+(((x4576)*(x4577))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4586=((IkReal(1.00000000000000))*(r21));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj14)*(x4586)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4586))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(cj14)*(x4586)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((gconst10)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x4586)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4587=IKsin(j12);
IkReal x4588=IKcos(j12);
IkReal x4589=((IkReal(1.00000000000000))*(sj13));
IkReal x4590=((cj13)*(r10));
IkReal x4591=((cj9)*(sj14));
IkReal x4592=((cj13)*(r01));
IkReal x4593=((IkReal(1.00000000000000))*(r10));
IkReal x4594=((r12)*(sj13));
IkReal x4595=((cj13)*(sj14));
IkReal x4596=((cj14)*(r01));
IkReal x4597=((cj13)*(cj14));
IkReal x4598=((IkReal(1.00000000000000))*(cj9));
IkReal x4599=((sj14)*(sj9));
IkReal x4600=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x4587))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x4589)))+(((IkReal(-1.00000000000000))*(r21)*(x4595)))+(((IkReal(-1.00000000000000))*(cj11)*(x4588)))+(((r20)*(x4597))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4598)))+(((IkReal(-1.00000000000000))*(x4591)*(x4593)))+(((IkReal(-1.00000000000000))*(sj11)*(x4587)))+(((sj9)*(x4596)))+(((r00)*(x4599))));
evalcond[3]=((x4588)+(((IkReal(-1.00000000000000))*(x4596)*(x4598)))+(((IkReal(-1.00000000000000))*(x4593)*(x4599)))+(((IkReal(-1.00000000000000))*(r00)*(x4591)))+(((IkReal(-1.00000000000000))*(r11)*(x4600))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x4590)*(x4598)))+(((cj9)*(x4594)))+(((IkReal(-1.00000000000000))*(x4592)*(x4599)))+(((sj11)*(x4588)))+(((cj13)*(r11)*(x4591)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4589)))+(((r00)*(sj9)*(x4597))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4590)*(x4600)))+(((IkReal(-1.00000000000000))*(r00)*(x4597)*(x4598)))+(x4587)+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x4595)))+(((sj9)*(x4594)))+(((x4591)*(x4592))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4601=((cj9)*(r11));
IkReal x4602=((sj13)*(sj14));
IkReal x4603=((IkReal(0.0100000000000000))*(cj14));
IkReal x4604=((cj9)*(r00));
IkReal x4605=((IkReal(0.374290000000000))*(cj14));
IkReal x4606=((r10)*(sj9));
IkReal x4607=((r01)*(sj9));
IkReal x4608=((IkReal(0.0100000000000000))*(sj14));
IkReal x4609=((r00)*(sj9));
IkReal x4610=((IkReal(0.374290000000000))*(sj14));
IkReal x4611=((cj13)*(sj9));
IkReal x4612=((cj9)*(r01));
IkReal x4613=((IkReal(1.00000000000000))*(py));
IkReal x4614=((r11)*(sj9));
IkReal x4615=((cj9)*(r10));
IkReal x4616=((cj14)*(sj13));
IkReal x4617=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4616)))+(((IkReal(-1.00000000000000))*(r21)*(x4602)))+(((IkReal(-1.00000000000000))*(cj10)))+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x4610)))+(((r21)*(x4605)))+(((r21)*(x4608)))+(((IkReal(-1.00000000000000))*(r20)*(x4603)))+(pz)+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((x4601)*(x4602)))+(((x4609)*(x4616)))+(((r02)*(x4611)))+(((IkReal(-1.00000000000000))*(r12)*(x4617)))+(((IkReal(-1.00000000000000))*(x4615)*(x4616)))+(((IkReal(-1.00000000000000))*(x4602)*(x4607))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(x4617)))+(sj10)+(((x4602)*(x4614)))+(((x4602)*(x4612)))+(((IkReal(-1.00000000000000))*(x4604)*(x4616)))+(((IkReal(-1.00000000000000))*(x4606)*(x4616)))+(((IkReal(-1.00000000000000))*(r12)*(x4611))));
evalcond[5]=((IkReal(0.0690000000000000))+(((x4605)*(x4607)))+(((IkReal(-1.00000000000000))*(x4603)*(x4609)))+(((x4609)*(x4610)))+(((x4607)*(x4608)))+(((IkReal(-1.00000000000000))*(x4601)*(x4608)))+(((IkReal(-1.00000000000000))*(x4601)*(x4605)))+(((x4603)*(x4615)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4610)*(x4615)))+(((IkReal(-1.00000000000000))*(cj9)*(x4613))));
evalcond[6]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x4606)*(x4610)))+(((IkReal(0.364420000000000))*(cj10)))+(((x4603)*(x4606)))+(((x4603)*(x4604)))+(((IkReal(-1.00000000000000))*(x4604)*(x4610)))+(((IkReal(-1.00000000000000))*(x4608)*(x4612)))+(((IkReal(-1.00000000000000))*(x4608)*(x4614)))+(((IkReal(-1.00000000000000))*(x4605)*(x4614)))+(((IkReal(-1.00000000000000))*(x4605)*(x4612)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x4613))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4618=((IkReal(0.0100000000000000))*(cj14));
IkReal x4619=((r10)*(sj9));
IkReal x4620=((cj9)*(sj14));
IkReal x4621=((r11)*(sj13));
IkReal x4622=((cj9)*(r00));
IkReal x4623=((IkReal(1.00000000000000))*(sj9));
IkReal x4624=((cj14)*(r11));
IkReal x4625=((r01)*(sj14));
IkReal x4626=((r21)*(sj14));
IkReal x4627=((IkReal(0.0100000000000000))*(r11));
IkReal x4628=((r00)*(sj9));
IkReal x4629=((IkReal(0.374290000000000))*(sj14));
IkReal x4630=((cj13)*(r02));
IkReal x4631=((IkReal(1.00000000000000))*(cj14));
IkReal x4632=((IkReal(1.00000000000000))*(cj9));
IkReal x4633=((cj13)*(r12));
IkReal x4634=((sj14)*(sj9));
IkReal x4635=((cj9)*(r10));
IkReal x4636=((cj14)*(sj13));
IkReal x4637=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4636)))+(((IkReal(-1.00000000000000))*(sj13)*(x4626)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x4618)))+(((r20)*(x4629)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x4626))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x4620)))+(((IkReal(-1.00000000000000))*(x4623)*(x4624)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4631)))+(((IkReal(-1.00000000000000))*(sj14)*(x4619))));
evalcond[4]=((((x4620)*(x4621)))+(((IkReal(-1.00000000000000))*(sj13)*(x4631)*(x4635)))+(((IkReal(-1.00000000000000))*(sj13)*(x4623)*(x4625)))+(((sj9)*(x4630)))+(((IkReal(-1.00000000000000))*(x4632)*(x4633)))+(((x4628)*(x4636))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x4623)*(x4633)))+(((IkReal(-1.00000000000000))*(sj13)*(x4622)*(x4631)))+(((x4621)*(x4634)))+(((IkReal(-1.00000000000000))*(x4630)*(x4632)))+(((IkReal(-1.00000000000000))*(sj13)*(x4619)*(x4631)))+(((r01)*(sj13)*(x4620))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x4622)*(x4631)))+(((cj13)*(r01)*(x4620)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4619)*(x4631)))+(((cj13)*(r11)*(x4634)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x4618)*(x4635)))+(((IkReal(-1.00000000000000))*(x4618)*(x4628)))+(((x4628)*(x4629)))+(((IkReal(-1.00000000000000))*(x4620)*(x4627)))+(((sj9)*(x4637)))+(((px)*(sj9)))+(((IkReal(-0.374290000000000))*(r10)*(x4620)))+(((IkReal(-0.374290000000000))*(cj9)*(x4624)))+(((IkReal(0.0100000000000000))*(sj9)*(x4625)))+(((IkReal(-1.00000000000000))*(py)*(x4632))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x4637)))+(((IkReal(-0.374290000000000))*(r00)*(x4620)))+(((IkReal(-1.00000000000000))*(x4619)*(x4629)))+(((IkReal(-1.00000000000000))*(px)*(x4632)))+(((x4618)*(x4622)))+(((IkReal(-0.0100000000000000))*(r01)*(x4620)))+(((IkReal(-1.00000000000000))*(x4627)*(x4634)))+(((x4618)*(x4619)))+(((IkReal(-0.374290000000000))*(sj9)*(x4624)))+(((IkReal(-1.00000000000000))*(py)*(x4623))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4638=IKcos(j12);
IkReal x4639=((sj14)*(sj9));
IkReal x4640=((IkReal(1.00000000000000))*(sj13));
IkReal x4641=((cj13)*(sj14));
IkReal x4642=((cj9)*(r11));
IkReal x4643=((IkReal(1.00000000000000))*(cj13));
IkReal x4644=((cj9)*(r10));
IkReal x4645=((cj14)*(sj9));
IkReal x4646=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x4638)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4641)))+(((IkReal(-1.00000000000000))*(r22)*(x4640)))+(((IkReal(-1.00000000000000))*(x4646))));
evalcond[2]=((((r00)*(x4639)))+(((IkReal(-1.00000000000000))*(cj14)*(x4642)))+(((IkReal(-1.00000000000000))*(x4646)))+(((r01)*(x4645)))+(((IkReal(-1.00000000000000))*(sj14)*(x4644))));
evalcond[3]=((((x4641)*(x4642)))+(x4638)+(((cj13)*(r00)*(x4645)))+(((IkReal(-1.00000000000000))*(cj14)*(x4643)*(x4644)))+(((IkReal(-1.00000000000000))*(r01)*(x4639)*(x4643)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4640)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4647=((IkReal(0.0100000000000000))*(cj14));
IkReal x4648=((r10)*(sj9));
IkReal x4649=((cj9)*(sj14));
IkReal x4650=((r11)*(sj13));
IkReal x4651=((cj9)*(r00));
IkReal x4652=((IkReal(1.00000000000000))*(sj9));
IkReal x4653=((cj14)*(r11));
IkReal x4654=((r01)*(sj14));
IkReal x4655=((r21)*(sj14));
IkReal x4656=((IkReal(0.0100000000000000))*(r11));
IkReal x4657=((r00)*(sj9));
IkReal x4658=((IkReal(0.374290000000000))*(sj14));
IkReal x4659=((cj13)*(r02));
IkReal x4660=((IkReal(1.00000000000000))*(cj14));
IkReal x4661=((IkReal(1.00000000000000))*(cj9));
IkReal x4662=((cj13)*(r12));
IkReal x4663=((sj14)*(sj9));
IkReal x4664=((cj9)*(r10));
IkReal x4665=((cj14)*(sj13));
IkReal x4666=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x4655)))+(((cj13)*(r22)))+(((r20)*(x4665))));
evalcond[2]=((IkReal(-0.364420000000000))+(((r20)*(x4658)))+(((IkReal(-1.00000000000000))*(r20)*(x4647)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x4655))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x4649)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4660)))+(((IkReal(-1.00000000000000))*(x4652)*(x4653)))+(((IkReal(-1.00000000000000))*(sj14)*(x4648))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4661)*(x4662)))+(((IkReal(-1.00000000000000))*(sj13)*(x4660)*(x4664)))+(((IkReal(-1.00000000000000))*(sj13)*(x4652)*(x4654)))+(((x4649)*(x4650)))+(((sj9)*(x4659)))+(((x4657)*(x4665))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x4659)*(x4661)))+(((IkReal(-1.00000000000000))*(x4652)*(x4662)))+(((IkReal(-1.00000000000000))*(sj13)*(x4648)*(x4660)))+(((x4650)*(x4663)))+(((r01)*(sj13)*(x4649)))+(((IkReal(-1.00000000000000))*(sj13)*(x4651)*(x4660))));
evalcond[6]=((((cj13)*(r11)*(x4663)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x4649)))+(((IkReal(-1.00000000000000))*(cj13)*(x4648)*(x4660)))+(((IkReal(-1.00000000000000))*(cj13)*(x4651)*(x4660)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x4647)*(x4657)))+(((IkReal(-1.00000000000000))*(x4649)*(x4656)))+(((IkReal(-1.00000000000000))*(py)*(x4661)))+(((x4647)*(x4664)))+(((x4657)*(x4658)))+(((IkReal(-0.374290000000000))*(r10)*(x4649)))+(((px)*(sj9)))+(((sj9)*(x4666)))+(((IkReal(-0.374290000000000))*(cj9)*(x4653)))+(((IkReal(0.0100000000000000))*(sj9)*(x4654))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(sj9)*(x4653)))+(((IkReal(-1.00000000000000))*(py)*(x4652)))+(((IkReal(-1.00000000000000))*(x4656)*(x4663)))+(((x4647)*(x4651)))+(((IkReal(-0.374290000000000))*(r00)*(x4649)))+(((x4647)*(x4648)))+(((IkReal(-1.00000000000000))*(px)*(x4661)))+(((IkReal(-0.0100000000000000))*(r01)*(x4649)))+(((IkReal(-1.00000000000000))*(x4648)*(x4658)))+(((IkReal(-1.00000000000000))*(cj9)*(x4666))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4667=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x4667))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x4667)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x4667)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x4667)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x4667)))), ((((IkReal(-1.00000000000000))*(r21)*(x4667)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4668=IKsin(j12);
IkReal x4669=IKcos(j12);
IkReal x4670=((sj14)*(sj9));
IkReal x4671=((IkReal(1.00000000000000))*(sj13));
IkReal x4672=((cj13)*(sj14));
IkReal x4673=((cj9)*(r11));
IkReal x4674=((IkReal(1.00000000000000))*(cj13));
IkReal x4675=((cj9)*(r10));
IkReal x4676=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(x4669)+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4672)))+(x4668)+(((IkReal(-1.00000000000000))*(r22)*(x4671))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4668)))+(((IkReal(-1.00000000000000))*(cj14)*(x4673)))+(((r01)*(x4676)))+(((r00)*(x4670)))+(((IkReal(-1.00000000000000))*(sj14)*(x4675))));
evalcond[3]=((((x4672)*(x4673)))+(x4669)+(((IkReal(-1.00000000000000))*(r01)*(x4670)*(x4674)))+(((cj13)*(r00)*(x4676)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4671)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(x4674)*(x4675))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4677=((IkReal(1.00000000000000))*(sj14));
IkReal x4678=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x4677)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4678)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4678)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x4677)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4677))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x4677)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4678)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4678)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x4677)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4677)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x4677)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x4678)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4678)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x4677)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x4677)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4679=IKsin(j12);
IkReal x4680=IKcos(j12);
IkReal x4681=((IkReal(1.00000000000000))*(sj13));
IkReal x4682=((cj13)*(r10));
IkReal x4683=((IkReal(1.00000000000000))*(cj10));
IkReal x4684=((cj9)*(sj14));
IkReal x4685=((cj13)*(r01));
IkReal x4686=((IkReal(1.00000000000000))*(r10));
IkReal x4687=((cj9)*(sj13));
IkReal x4688=((cj13)*(sj14));
IkReal x4689=((cj14)*(r01));
IkReal x4690=((cj13)*(cj14));
IkReal x4691=((IkReal(1.00000000000000))*(cj9));
IkReal x4692=((sj14)*(sj9));
IkReal x4693=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4694=((IkReal(1.00000000000000))*(x4679));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4680))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x4694)))+(((IkReal(-1.00000000000000))*(r21)*(x4688)))+(((IkReal(-1.00000000000000))*(r22)*(x4681)))+(((r20)*(x4690))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4691)))+(((IkReal(-1.00000000000000))*(x4684)*(x4686)))+(((sj9)*(x4689)))+(((r00)*(x4692)))+(((IkReal(-1.00000000000000))*(x4694))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4686)*(x4692)))+(((IkReal(-1.00000000000000))*(x4680)*(x4683)))+(((IkReal(-1.00000000000000))*(r00)*(x4684)))+(((IkReal(-1.00000000000000))*(x4689)*(x4691)))+(((IkReal(-1.00000000000000))*(r11)*(x4693))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4681)))+(((IkReal(-1.00000000000000))*(x4685)*(x4692)))+(((cj13)*(r11)*(x4684)))+(x4680)+(((r12)*(x4687)))+(((IkReal(-1.00000000000000))*(cj14)*(x4682)*(x4691)))+(((r00)*(sj9)*(x4690))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4679)*(x4683)))+(((IkReal(-1.00000000000000))*(r00)*(x4690)*(x4691)))+(((r02)*(x4687)))+(((IkReal(-1.00000000000000))*(x4682)*(x4693)))+(((r11)*(sj9)*(x4688)))+(((x4684)*(x4685)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4695=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4695)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4695))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4695)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4695)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4695)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x4695)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4696=IKsin(j12);
IkReal x4697=IKcos(j12);
IkReal x4698=((IkReal(1.00000000000000))*(sj13));
IkReal x4699=((cj13)*(r10));
IkReal x4700=((IkReal(1.00000000000000))*(cj10));
IkReal x4701=((cj9)*(sj14));
IkReal x4702=((cj13)*(r01));
IkReal x4703=((IkReal(1.00000000000000))*(r10));
IkReal x4704=((cj9)*(sj13));
IkReal x4705=((cj13)*(sj14));
IkReal x4706=((cj14)*(r01));
IkReal x4707=((cj13)*(cj14));
IkReal x4708=((IkReal(1.00000000000000))*(cj9));
IkReal x4709=((sj14)*(sj9));
IkReal x4710=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4711=((IkReal(1.00000000000000))*(x4696));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4697))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x4705)))+(((r20)*(x4707)))+(((IkReal(-1.00000000000000))*(r22)*(x4698)))+(((IkReal(-1.00000000000000))*(sj10)*(x4711))));
evalcond[2]=((((sj9)*(x4706)))+(((r00)*(x4709)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4708)))+(((IkReal(-1.00000000000000))*(x4711)))+(((IkReal(-1.00000000000000))*(x4701)*(x4703))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4697)*(x4700)))+(((IkReal(-1.00000000000000))*(x4703)*(x4709)))+(((IkReal(-1.00000000000000))*(r11)*(x4710)))+(((IkReal(-1.00000000000000))*(x4706)*(x4708)))+(((IkReal(-1.00000000000000))*(r00)*(x4701))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4698)))+(((IkReal(-1.00000000000000))*(cj14)*(x4699)*(x4708)))+(((r00)*(sj9)*(x4707)))+(x4697)+(((cj13)*(r11)*(x4701)))+(((IkReal(-1.00000000000000))*(x4702)*(x4709)))+(((r12)*(x4704))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4696)*(x4700)))+(((IkReal(-1.00000000000000))*(r00)*(x4707)*(x4708)))+(((IkReal(-1.00000000000000))*(x4699)*(x4710)))+(((r11)*(sj9)*(x4705)))+(((x4701)*(x4702)))+(((r02)*(x4704)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4712=IKsin(j12);
IkReal x4713=IKcos(j12);
IkReal x4714=((IkReal(1.00000000000000))*(sj13));
IkReal x4715=((cj13)*(r10));
IkReal x4716=((IkReal(1.00000000000000))*(cj10));
IkReal x4717=((cj9)*(sj14));
IkReal x4718=((cj13)*(r01));
IkReal x4719=((IkReal(1.00000000000000))*(r10));
IkReal x4720=((cj9)*(sj13));
IkReal x4721=((cj13)*(sj14));
IkReal x4722=((cj14)*(r01));
IkReal x4723=((cj13)*(cj14));
IkReal x4724=((IkReal(1.00000000000000))*(cj9));
IkReal x4725=((sj14)*(sj9));
IkReal x4726=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4727=((IkReal(1.00000000000000))*(x4712));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4713))));
evalcond[1]=((((r20)*(x4723)))+(((IkReal(-1.00000000000000))*(r22)*(x4714)))+(((IkReal(-1.00000000000000))*(r21)*(x4721)))+(((IkReal(-1.00000000000000))*(sj10)*(x4727))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4724)))+(((IkReal(-1.00000000000000))*(x4727)))+(((r00)*(x4725)))+(((IkReal(-1.00000000000000))*(x4717)*(x4719)))+(((sj9)*(x4722))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4722)*(x4724)))+(((IkReal(-1.00000000000000))*(r11)*(x4726)))+(((IkReal(-1.00000000000000))*(r00)*(x4717)))+(((IkReal(-1.00000000000000))*(x4719)*(x4725)))+(((IkReal(-1.00000000000000))*(x4713)*(x4716))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x4715)*(x4724)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4714)))+(((IkReal(-1.00000000000000))*(x4718)*(x4725)))+(x4713)+(((r12)*(x4720)))+(((cj13)*(r11)*(x4717)))+(((r00)*(sj9)*(x4723))));
evalcond[5]=((((x4717)*(x4718)))+(((IkReal(-1.00000000000000))*(x4712)*(x4716)))+(((IkReal(-1.00000000000000))*(r00)*(x4723)*(x4724)))+(((IkReal(-1.00000000000000))*(x4715)*(x4726)))+(((r02)*(x4720)))+(((r11)*(sj9)*(x4721)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4728=((IkReal(0.0100000000000000))*(cj14));
IkReal x4729=((r10)*(sj9));
IkReal x4730=((cj9)*(r11));
IkReal x4731=((sj13)*(sj14));
IkReal x4732=((cj9)*(r00));
IkReal x4733=((IkReal(0.374290000000000))*(cj14));
IkReal x4734=((cj9)*(r01));
IkReal x4735=((r01)*(sj9));
IkReal x4736=((IkReal(0.0100000000000000))*(sj14));
IkReal x4737=((r00)*(sj9));
IkReal x4738=((IkReal(0.374290000000000))*(sj14));
IkReal x4739=((cj13)*(sj9));
IkReal x4740=((IkReal(1.00000000000000))*(py));
IkReal x4741=((r11)*(sj9));
IkReal x4742=((cj9)*(r10));
IkReal x4743=((cj14)*(sj13));
IkReal x4744=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4743)))+(((IkReal(-1.00000000000000))*(r21)*(x4731)))+(cj10)+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x4738)))+(((r21)*(x4736)))+(((r21)*(x4733)))+(((IkReal(-1.00000000000000))*(r20)*(x4728)))+(pz)+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((x4737)*(x4743)))+(((IkReal(-1.00000000000000))*(r12)*(x4744)))+(((x4730)*(x4731)))+(((IkReal(-1.00000000000000))*(x4742)*(x4743)))+(((r02)*(x4739)))+(((IkReal(-1.00000000000000))*(x4731)*(x4735))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r12)*(x4739)))+(((x4731)*(x4734)))+(((IkReal(-1.00000000000000))*(x4732)*(x4743)))+(((x4731)*(x4741)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x4729)*(x4743)))+(((IkReal(-1.00000000000000))*(r02)*(x4744))));
evalcond[5]=((IkReal(-0.0690000000000000))+(((x4735)*(x4736)))+(((IkReal(-1.00000000000000))*(x4730)*(x4736)))+(((IkReal(-1.00000000000000))*(x4730)*(x4733)))+(((IkReal(-1.00000000000000))*(x4728)*(x4737)))+(((IkReal(-1.00000000000000))*(cj9)*(x4740)))+(((x4737)*(x4738)))+(((x4733)*(x4735)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x4738)*(x4742)))+(((x4728)*(x4742))));
evalcond[6]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x4740)))+(((IkReal(-1.00000000000000))*(x4734)*(x4736)))+(((IkReal(-1.00000000000000))*(x4736)*(x4741)))+(((IkReal(-1.00000000000000))*(x4733)*(x4741)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x4732)*(x4738)))+(((IkReal(-1.00000000000000))*(x4733)*(x4734)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x4729)*(x4738)))+(((x4728)*(x4729)))+(((x4728)*(x4732))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4745=((IkReal(0.0100000000000000))*(cj14));
IkReal x4746=((r10)*(sj9));
IkReal x4747=((cj9)*(sj14));
IkReal x4748=((r11)*(sj13));
IkReal x4749=((cj9)*(r00));
IkReal x4750=((IkReal(1.00000000000000))*(sj9));
IkReal x4751=((cj14)*(r11));
IkReal x4752=((r01)*(sj14));
IkReal x4753=((r21)*(sj14));
IkReal x4754=((IkReal(0.0100000000000000))*(r11));
IkReal x4755=((r00)*(sj9));
IkReal x4756=((IkReal(0.374290000000000))*(sj14));
IkReal x4757=((cj13)*(r02));
IkReal x4758=((IkReal(1.00000000000000))*(cj14));
IkReal x4759=((IkReal(1.00000000000000))*(cj9));
IkReal x4760=((cj13)*(r12));
IkReal x4761=((sj14)*(sj9));
IkReal x4762=((cj9)*(r10));
IkReal x4763=((cj14)*(sj13));
IkReal x4764=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4763)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(sj13)*(x4753))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x4745)))+(((r20)*(x4756)))+(pz)+(((IkReal(0.0100000000000000))*(x4753)))+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4750)*(x4751)))+(((IkReal(-1.00000000000000))*(r00)*(x4747)))+(((IkReal(-1.00000000000000))*(sj14)*(x4746)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4758))));
evalcond[4]=((((sj9)*(x4757)))+(((x4747)*(x4748)))+(((x4755)*(x4763)))+(((IkReal(-1.00000000000000))*(x4759)*(x4760)))+(((IkReal(-1.00000000000000))*(sj13)*(x4758)*(x4762)))+(((IkReal(-1.00000000000000))*(sj13)*(x4750)*(x4752))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x4746)*(x4758)))+(((IkReal(-1.00000000000000))*(x4750)*(x4760)))+(((r01)*(sj13)*(x4747)))+(((IkReal(-1.00000000000000))*(x4757)*(x4759)))+(((IkReal(-1.00000000000000))*(sj13)*(x4749)*(x4758)))+(((x4748)*(x4761))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x4746)*(x4758)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4749)*(x4758)))+(((cj13)*(r01)*(x4747)))+(((cj13)*(r11)*(x4761)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x4759)))+(((IkReal(-0.374290000000000))*(r10)*(x4747)))+(((IkReal(0.0100000000000000))*(sj9)*(x4752)))+(((x4755)*(x4756)))+(((IkReal(-1.00000000000000))*(x4745)*(x4755)))+(((IkReal(-0.374290000000000))*(cj9)*(x4751)))+(((px)*(sj9)))+(((x4745)*(x4762)))+(((IkReal(-1.00000000000000))*(x4747)*(x4754)))+(((sj9)*(x4764))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.0100000000000000))*(r01)*(x4747)))+(((IkReal(-1.00000000000000))*(py)*(x4750)))+(((IkReal(-0.374290000000000))*(sj9)*(x4751)))+(((IkReal(-1.00000000000000))*(x4754)*(x4761)))+(((IkReal(-1.00000000000000))*(x4746)*(x4756)))+(((IkReal(-0.374290000000000))*(r00)*(x4747)))+(((IkReal(-1.00000000000000))*(cj9)*(x4764)))+(((IkReal(-1.00000000000000))*(px)*(x4759)))+(((x4745)*(x4749)))+(((x4745)*(x4746))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4765=IKsin(j12);
IkReal x4766=((sj14)*(sj9));
IkReal x4767=((IkReal(1.00000000000000))*(sj13));
IkReal x4768=((cj13)*(sj14));
IkReal x4769=((cj9)*(r11));
IkReal x4770=((IkReal(1.00000000000000))*(cj13));
IkReal x4771=((cj9)*(r10));
IkReal x4772=((cj14)*(sj9));
IkReal x4773=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x4773))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4765)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x4767)))+(((IkReal(-1.00000000000000))*(r21)*(x4768))));
evalcond[2]=((((r01)*(x4772)))+(((r00)*(x4766)))+(x4765)+(((IkReal(-1.00000000000000))*(sj14)*(x4771)))+(((IkReal(-1.00000000000000))*(cj14)*(x4769))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4767)))+(((IkReal(-1.00000000000000))*(cj14)*(x4770)*(x4771)))+(((x4768)*(x4769)))+(((IkReal(-1.00000000000000))*(x4773)))+(((IkReal(-1.00000000000000))*(r01)*(x4766)*(x4770)))+(((cj9)*(r12)*(sj13)))+(((cj13)*(r00)*(x4772))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4774=((IkReal(0.0100000000000000))*(cj14));
IkReal x4775=((r10)*(sj9));
IkReal x4776=((cj9)*(sj14));
IkReal x4777=((r11)*(sj13));
IkReal x4778=((cj9)*(r00));
IkReal x4779=((IkReal(1.00000000000000))*(sj9));
IkReal x4780=((cj14)*(r11));
IkReal x4781=((r01)*(sj14));
IkReal x4782=((r21)*(sj14));
IkReal x4783=((IkReal(0.0100000000000000))*(r11));
IkReal x4784=((r00)*(sj9));
IkReal x4785=((IkReal(0.374290000000000))*(sj14));
IkReal x4786=((cj13)*(r02));
IkReal x4787=((IkReal(1.00000000000000))*(cj14));
IkReal x4788=((IkReal(1.00000000000000))*(cj9));
IkReal x4789=((cj13)*(r12));
IkReal x4790=((sj14)*(sj9));
IkReal x4791=((cj9)*(r10));
IkReal x4792=((cj14)*(sj13));
IkReal x4793=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4792)))+(((IkReal(-1.00000000000000))*(sj13)*(x4782)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x4774)))+(((IkReal(0.0100000000000000))*(x4782)))+(pz)+(((r20)*(x4785)))+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4779)*(x4780)))+(((IkReal(-1.00000000000000))*(r00)*(x4776)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4787)))+(((IkReal(-1.00000000000000))*(sj14)*(x4775))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4788)*(x4789)))+(((IkReal(-1.00000000000000))*(sj13)*(x4787)*(x4791)))+(((sj9)*(x4786)))+(((x4776)*(x4777)))+(((IkReal(-1.00000000000000))*(sj13)*(x4779)*(x4781)))+(((x4784)*(x4792))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x4779)*(x4789)))+(((IkReal(-1.00000000000000))*(sj13)*(x4775)*(x4787)))+(((IkReal(-1.00000000000000))*(x4786)*(x4788)))+(((r01)*(sj13)*(x4776)))+(((x4777)*(x4790)))+(((IkReal(-1.00000000000000))*(sj13)*(x4778)*(x4787))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x4775)*(x4787)))+(((cj13)*(r11)*(x4790)))+(((cj13)*(r01)*(x4776)))+(((IkReal(-1.00000000000000))*(cj13)*(x4778)*(x4787)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-0.374290000000000))*(r10)*(x4776)))+(((IkReal(-1.00000000000000))*(x4776)*(x4783)))+(((x4784)*(x4785)))+(((IkReal(-0.374290000000000))*(cj9)*(x4780)))+(((IkReal(-1.00000000000000))*(x4774)*(x4784)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x4788)))+(((sj9)*(x4793)))+(((x4774)*(x4791)))+(((IkReal(0.0100000000000000))*(sj9)*(x4781))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.0100000000000000))*(r01)*(x4776)))+(((IkReal(-0.374290000000000))*(sj9)*(x4780)))+(((IkReal(-0.374290000000000))*(r00)*(x4776)))+(((IkReal(-1.00000000000000))*(cj9)*(x4793)))+(((IkReal(-1.00000000000000))*(x4783)*(x4790)))+(((x4774)*(x4775)))+(((x4774)*(x4778)))+(((IkReal(-1.00000000000000))*(px)*(x4788)))+(((IkReal(-1.00000000000000))*(py)*(x4779)))+(((IkReal(-1.00000000000000))*(x4775)*(x4785))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4794=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x4794))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x4794))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x4794)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x4794)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x4794)))), ((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x4794)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x4795=IKsin(j12);
IkReal x4796=IKcos(j12);
IkReal x4797=((sj14)*(sj9));
IkReal x4798=((IkReal(1.00000000000000))*(sj13));
IkReal x4799=((cj13)*(sj14));
IkReal x4800=((cj9)*(r11));
IkReal x4801=((IkReal(1.00000000000000))*(cj13));
IkReal x4802=((cj9)*(r10));
IkReal x4803=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x4796));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x4798)))+(x4795)+(((IkReal(-1.00000000000000))*(r21)*(x4799))));
evalcond[2]=((((r01)*(x4803)))+(((r00)*(x4797)))+(x4795)+(((IkReal(-1.00000000000000))*(sj14)*(x4802)))+(((IkReal(-1.00000000000000))*(cj14)*(x4800))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x4801)*(x4802)))+(((cj13)*(r00)*(x4803)))+(((IkReal(-1.00000000000000))*(r01)*(x4797)*(x4801)))+(((IkReal(-1.00000000000000))*(x4796)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4798)))+(((x4799)*(x4800))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4804=((cj14)*(r11));
IkReal x4805=((IkReal(1.00000000000000))*(sj9));
IkReal x4806=((cj14)*(r01));
IkReal x4807=((r00)*(sj14));
IkReal x4808=((r10)*(sj14));
IkReal x4809=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x4805)*(x4807)))+(((IkReal(-1.00000000000000))*(x4805)*(x4806)))+(((cj9)*(x4804)))+(((cj9)*(x4808))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4805)*(x4808)))+(((IkReal(-1.00000000000000))*(x4804)*(x4805)))+(((IkReal(-1.00000000000000))*(x4806)*(x4809)))+(((IkReal(-1.00000000000000))*(x4807)*(x4809))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x4805)*(x4807)))+(((IkReal(-1.00000000000000))*(x4805)*(x4806)))+(((cj9)*(x4804)))+(((cj9)*(x4808)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4805)*(x4808)))+(((IkReal(-1.00000000000000))*(x4804)*(x4805)))+(((IkReal(-1.00000000000000))*(x4806)*(x4809)))+(((IkReal(-1.00000000000000))*(x4807)*(x4809)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x4805)*(x4807)))+(((IkReal(-1.00000000000000))*(x4805)*(x4806)))+(((cj9)*(x4804)))+(((cj9)*(x4808)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4805)*(x4808)))+(((IkReal(-1.00000000000000))*(x4804)*(x4805)))+(((IkReal(-1.00000000000000))*(x4806)*(x4809)))+(((IkReal(-1.00000000000000))*(x4807)*(x4809)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4810=IKsin(j12);
IkReal x4811=IKcos(j12);
IkReal x4812=((IkReal(1.00000000000000))*(sj13));
IkReal x4813=((cj13)*(r10));
IkReal x4814=((cj9)*(sj14));
IkReal x4815=((cj13)*(r01));
IkReal x4816=((IkReal(1.00000000000000))*(r10));
IkReal x4817=((r12)*(sj13));
IkReal x4818=((cj13)*(sj14));
IkReal x4819=((cj14)*(r01));
IkReal x4820=((cj13)*(cj14));
IkReal x4821=((IkReal(1.00000000000000))*(cj9));
IkReal x4822=((sj14)*(sj9));
IkReal x4823=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4824=((IkReal(1.00000000000000))*(x4811));
IkReal x4825=((IkReal(1.00000000000000))*(x4810));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x4824)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x4825)))+(((IkReal(-1.00000000000000))*(r21)*(x4818)))+(((r20)*(x4820)))+(((IkReal(-1.00000000000000))*(r22)*(x4812))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4814)*(x4816)))+(((sj9)*(x4819)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4821)))+(x4810)+(((r00)*(x4822))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x4814)))+(((IkReal(-1.00000000000000))*(x4816)*(x4822)))+(((IkReal(-1.00000000000000))*(x4819)*(x4821)))+(((IkReal(-1.00000000000000))*(cj10)*(x4824)))+(((IkReal(-1.00000000000000))*(r11)*(x4823))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4824)))+(((IkReal(-1.00000000000000))*(x4815)*(x4822)))+(((cj9)*(x4817)))+(((r00)*(sj9)*(x4820)))+(((cj13)*(r11)*(x4814)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4812)))+(((IkReal(-1.00000000000000))*(cj14)*(x4813)*(x4821))));
evalcond[5]=((((r11)*(sj9)*(x4818)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x4817)))+(((IkReal(-1.00000000000000))*(cj10)*(x4825)))+(((IkReal(-1.00000000000000))*(x4813)*(x4823)))+(((IkReal(-1.00000000000000))*(r00)*(x4820)*(x4821)))+(((x4814)*(x4815))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4826=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x4826)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4826))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x4826)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4826)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x4826)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4826)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4827=IKsin(j12);
IkReal x4828=IKcos(j12);
IkReal x4829=((IkReal(1.00000000000000))*(sj13));
IkReal x4830=((cj13)*(r10));
IkReal x4831=((cj9)*(sj14));
IkReal x4832=((cj13)*(r01));
IkReal x4833=((IkReal(1.00000000000000))*(r10));
IkReal x4834=((r12)*(sj13));
IkReal x4835=((cj13)*(sj14));
IkReal x4836=((cj14)*(r01));
IkReal x4837=((cj13)*(cj14));
IkReal x4838=((IkReal(1.00000000000000))*(cj9));
IkReal x4839=((sj14)*(sj9));
IkReal x4840=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4841=((IkReal(1.00000000000000))*(x4828));
IkReal x4842=((IkReal(1.00000000000000))*(x4827));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4841))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x4829)))+(((IkReal(-1.00000000000000))*(sj10)*(x4842)))+(((r20)*(x4837)))+(((IkReal(-1.00000000000000))*(r21)*(x4835))));
evalcond[2]=((((sj9)*(x4836)))+(((IkReal(-1.00000000000000))*(x4831)*(x4833)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4838)))+(((r00)*(x4839)))+(x4827));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x4831)))+(((IkReal(-1.00000000000000))*(x4833)*(x4839)))+(((IkReal(-1.00000000000000))*(cj10)*(x4841)))+(((IkReal(-1.00000000000000))*(r11)*(x4840)))+(((IkReal(-1.00000000000000))*(x4836)*(x4838))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4832)*(x4839)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4829)))+(((IkReal(-1.00000000000000))*(x4841)))+(((IkReal(-1.00000000000000))*(cj14)*(x4830)*(x4838)))+(((cj13)*(r11)*(x4831)))+(((cj9)*(x4834)))+(((r00)*(sj9)*(x4837))));
evalcond[5]=((((sj9)*(x4834)))+(((IkReal(-1.00000000000000))*(x4830)*(x4840)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x4835)))+(((IkReal(-1.00000000000000))*(r00)*(x4837)*(x4838)))+(((IkReal(-1.00000000000000))*(cj10)*(x4842)))+(((x4831)*(x4832))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4843=IKsin(j12);
IkReal x4844=IKcos(j12);
IkReal x4845=((IkReal(1.00000000000000))*(sj13));
IkReal x4846=((cj13)*(r10));
IkReal x4847=((cj9)*(sj14));
IkReal x4848=((cj13)*(r01));
IkReal x4849=((IkReal(1.00000000000000))*(r10));
IkReal x4850=((r12)*(sj13));
IkReal x4851=((cj13)*(sj14));
IkReal x4852=((cj14)*(r01));
IkReal x4853=((cj13)*(cj14));
IkReal x4854=((IkReal(1.00000000000000))*(cj9));
IkReal x4855=((sj14)*(sj9));
IkReal x4856=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4857=((IkReal(1.00000000000000))*(x4844));
IkReal x4858=((IkReal(1.00000000000000))*(x4843));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4857))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x4858)))+(((r20)*(x4853)))+(((IkReal(-1.00000000000000))*(r21)*(x4851)))+(((IkReal(-1.00000000000000))*(r22)*(x4845))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4854)))+(((r00)*(x4855)))+(((IkReal(-1.00000000000000))*(x4847)*(x4849)))+(((sj9)*(x4852)))+(x4843));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x4847)))+(((IkReal(-1.00000000000000))*(r11)*(x4856)))+(((IkReal(-1.00000000000000))*(cj10)*(x4857)))+(((IkReal(-1.00000000000000))*(x4852)*(x4854)))+(((IkReal(-1.00000000000000))*(x4849)*(x4855))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x4846)*(x4854)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4845)))+(((IkReal(-1.00000000000000))*(x4857)))+(((cj13)*(r11)*(x4847)))+(((IkReal(-1.00000000000000))*(x4848)*(x4855)))+(((r00)*(sj9)*(x4853)))+(((cj9)*(x4850))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x4853)*(x4854)))+(((r11)*(sj9)*(x4851)))+(((sj9)*(x4850)))+(((cj9)*(r02)*(sj13)))+(((x4847)*(x4848)))+(((IkReal(-1.00000000000000))*(cj10)*(x4858)))+(((IkReal(-1.00000000000000))*(x4846)*(x4856))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4859=((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30);
IkReal x4860=((cj14)*(r11));
IkReal x4861=((r10)*(sj14));
IkReal x4862=((IkReal(1.00000000000000))*(cj9));
IkReal x4863=((cj10)*(cj11)*(cj9));
IkReal x4864=((r00)*(sj14)*(sj9));
IkReal x4865=((cj14)*(r01)*(sj9));
IkReal x4866=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((x4859)*(((((IkReal(-1.00000000000000))*(x4861)*(x4862)))+(((IkReal(-1.00000000000000))*(x4860)*(x4862)))+(x4864)+(x4865))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4859)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((x4861)*(x4863)))+(((x4860)*(x4863)))+(((IkReal(-1.00000000000000))*(x4864)*(x4866)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(x4865)*(x4866))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4859)*(((((IkReal(-1.00000000000000))*(x4861)*(x4862)))+(((IkReal(-1.00000000000000))*(x4860)*(x4862)))+(x4864)+(x4865)))))+IKsqr(((x4859)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((x4861)*(x4863)))+(((x4860)*(x4863)))+(((IkReal(-1.00000000000000))*(x4864)*(x4866)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(x4865)*(x4866)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((x4859)*(((((IkReal(-1.00000000000000))*(x4861)*(x4862)))+(((IkReal(-1.00000000000000))*(x4860)*(x4862)))+(x4864)+(x4865)))), ((x4859)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((x4861)*(x4863)))+(((x4860)*(x4863)))+(((IkReal(-1.00000000000000))*(x4864)*(x4866)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))+(((IkReal(-1.00000000000000))*(x4865)*(x4866)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4867=IKcos(j12);
IkReal x4868=IKsin(j12);
IkReal x4869=((IkReal(1.00000000000000))*(sj13));
IkReal x4870=((cj13)*(r10));
IkReal x4871=((cj9)*(sj14));
IkReal x4872=((cj13)*(r01));
IkReal x4873=((IkReal(1.00000000000000))*(r10));
IkReal x4874=((r12)*(sj13));
IkReal x4875=((cj13)*(sj14));
IkReal x4876=((cj11)*(sj10));
IkReal x4877=((cj14)*(r01));
IkReal x4878=((IkReal(1.00000000000000))*(cj9));
IkReal x4879=((sj14)*(sj9));
IkReal x4880=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4881=((cj10)*(x4867));
IkReal x4882=((IkReal(1.00000000000000))*(x4868));
IkReal x4883=((IkReal(1.00000000000000))*(x4867));
IkReal x4884=((cj13)*(cj14)*(r00));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x4883)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x4882))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((cj11)*(x4881)))+(((IkReal(-1.00000000000000))*(r21)*(x4875)))+(((IkReal(-1.00000000000000))*(r22)*(x4869)))+(((IkReal(-1.00000000000000))*(sj10)*(x4882))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x4882)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4878)))+(((r00)*(x4879)))+(((IkReal(-1.00000000000000))*(x4871)*(x4873)))+(((sj9)*(x4877))));
evalcond[3]=((((x4868)*(x4876)))+(((IkReal(-1.00000000000000))*(x4881)))+(((IkReal(-1.00000000000000))*(r11)*(x4880)))+(((IkReal(-1.00000000000000))*(r00)*(x4871)))+(((IkReal(-1.00000000000000))*(x4873)*(x4879)))+(((IkReal(-1.00000000000000))*(x4877)*(x4878))));
evalcond[4]=((((cj9)*(x4874)))+(((IkReal(-1.00000000000000))*(cj14)*(x4870)*(x4878)))+(((sj9)*(x4884)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4869)))+(((IkReal(-1.00000000000000))*(x4872)*(x4879)))+(((cj13)*(r11)*(x4871)))+(((sj11)*(x4867))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4876)*(x4883)))+(((cj9)*(r02)*(sj13)))+(((x4871)*(x4872)))+(((IkReal(-1.00000000000000))*(x4870)*(x4880)))+(((sj9)*(x4874)))+(((IkReal(-1.00000000000000))*(x4878)*(x4884)))+(((IkReal(-1.00000000000000))*(cj10)*(x4882)))+(((r11)*(sj9)*(x4875))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4885=(cj10)*(cj10);
IkReal x4886=(sj10)*(sj10);
IkReal x4887=((cj14)*(sj10));
IkReal x4888=((r11)*(sj9));
IkReal x4889=((sj10)*(sj14));
IkReal x4890=((r10)*(sj9));
IkReal x4891=((cj10)*(cj14));
IkReal x4892=((cj9)*(r00));
IkReal x4893=((cj9)*(r01));
IkReal x4894=((IkReal(1.00000000000000))*(cj10)*(sj14));
if( IKabs(((((IKabs(((((cj11)*(x4885)))+(((cj11)*(x4886))))) != 0)?((IkReal)1/(((((cj11)*(x4885)))+(((cj11)*(x4886)))))):(IkReal)1.0e30))*(((((x4887)*(x4893)))+(((r21)*(x4891)))+(((x4887)*(x4888)))+(((x4889)*(x4890)))+(((x4889)*(x4892)))+(((cj10)*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x4885)+(x4886))) != 0)?((IkReal)1/(((x4885)+(x4886)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4888)*(x4891)))+(((r20)*(x4889)))+(((IkReal(-1.00000000000000))*(x4891)*(x4893)))+(((IkReal(-1.00000000000000))*(x4890)*(x4894)))+(((IkReal(-1.00000000000000))*(x4892)*(x4894)))+(((r21)*(x4887))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj11)*(x4885)))+(((cj11)*(x4886))))) != 0)?((IkReal)1/(((((cj11)*(x4885)))+(((cj11)*(x4886)))))):(IkReal)1.0e30))*(((((x4887)*(x4893)))+(((r21)*(x4891)))+(((x4887)*(x4888)))+(((x4889)*(x4890)))+(((x4889)*(x4892)))+(((cj10)*(r20)*(sj14)))))))+IKsqr(((((IKabs(((x4885)+(x4886))) != 0)?((IkReal)1/(((x4885)+(x4886)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4888)*(x4891)))+(((r20)*(x4889)))+(((IkReal(-1.00000000000000))*(x4891)*(x4893)))+(((IkReal(-1.00000000000000))*(x4890)*(x4894)))+(((IkReal(-1.00000000000000))*(x4892)*(x4894)))+(((r21)*(x4887)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(((((cj11)*(x4885)))+(((cj11)*(x4886))))) != 0)?((IkReal)1/(((((cj11)*(x4885)))+(((cj11)*(x4886)))))):(IkReal)1.0e30))*(((((x4887)*(x4893)))+(((r21)*(x4891)))+(((x4887)*(x4888)))+(((x4889)*(x4890)))+(((x4889)*(x4892)))+(((cj10)*(r20)*(sj14)))))), ((((IKabs(((x4885)+(x4886))) != 0)?((IkReal)1/(((x4885)+(x4886)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4888)*(x4891)))+(((r20)*(x4889)))+(((IkReal(-1.00000000000000))*(x4891)*(x4893)))+(((IkReal(-1.00000000000000))*(x4890)*(x4894)))+(((IkReal(-1.00000000000000))*(x4892)*(x4894)))+(((r21)*(x4887)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4895=IKcos(j12);
IkReal x4896=IKsin(j12);
IkReal x4897=((IkReal(1.00000000000000))*(sj13));
IkReal x4898=((cj13)*(r10));
IkReal x4899=((cj9)*(sj14));
IkReal x4900=((cj13)*(r01));
IkReal x4901=((IkReal(1.00000000000000))*(r10));
IkReal x4902=((r12)*(sj13));
IkReal x4903=((cj13)*(sj14));
IkReal x4904=((cj11)*(sj10));
IkReal x4905=((cj14)*(r01));
IkReal x4906=((IkReal(1.00000000000000))*(cj9));
IkReal x4907=((sj14)*(sj9));
IkReal x4908=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4909=((cj10)*(x4895));
IkReal x4910=((IkReal(1.00000000000000))*(x4896));
IkReal x4911=((IkReal(1.00000000000000))*(x4895));
IkReal x4912=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x4911)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x4910)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(sj10)*(x4910)))+(((IkReal(-1.00000000000000))*(r21)*(x4903)))+(((cj11)*(x4909)))+(((IkReal(-1.00000000000000))*(r22)*(x4897))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4899)*(x4901)))+(((sj9)*(x4905)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4906)))+(((IkReal(-1.00000000000000))*(sj11)*(x4910)))+(((r00)*(x4907))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4908)))+(((IkReal(-1.00000000000000))*(x4905)*(x4906)))+(((x4896)*(x4904)))+(((IkReal(-1.00000000000000))*(x4909)))+(((IkReal(-1.00000000000000))*(r00)*(x4899)))+(((IkReal(-1.00000000000000))*(x4901)*(x4907))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4897)))+(((cj9)*(x4902)))+(((IkReal(-1.00000000000000))*(x4900)*(x4907)))+(((sj11)*(x4895)))+(((IkReal(-1.00000000000000))*(cj14)*(x4898)*(x4906)))+(((cj13)*(r11)*(x4899)))+(((sj9)*(x4912))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4898)*(x4908)))+(((sj9)*(x4902)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x4904)*(x4911)))+(((IkReal(-1.00000000000000))*(x4906)*(x4912)))+(((r11)*(sj9)*(x4903)))+(((x4899)*(x4900)))+(((IkReal(-1.00000000000000))*(cj10)*(x4910))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x4913=((cj14)*(r21));
IkReal x4914=((cj10)*(cj11));
IkReal x4915=((sj10)*(sj14));
IkReal x4916=((r22)*(sj13));
IkReal x4917=((IkReal(1.00000000000000))*(cj13));
IkReal x4918=((cj14)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x4915)*(x4917)))+(((cj13)*(sj10)*(x4918)))+(((IkReal(-1.00000000000000))*(sj10)*(x4916)))+(((x4913)*(x4914)))+(((r20)*(sj14)*(x4914))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r20)*(x4915)))+(((IkReal(-1.00000000000000))*(x4914)*(x4917)*(x4918)))+(((x4914)*(x4916)))+(((sj10)*(x4913)))+(((cj13)*(r21)*(sj14)*(x4914))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x4915)*(x4917)))+(((cj13)*(sj10)*(x4918)))+(((IkReal(-1.00000000000000))*(sj10)*(x4916)))+(((x4913)*(x4914)))+(((r20)*(sj14)*(x4914)))))), ((gconst4)*(((((r20)*(x4915)))+(((IkReal(-1.00000000000000))*(x4914)*(x4917)*(x4918)))+(((x4914)*(x4916)))+(((sj10)*(x4913)))+(((cj13)*(r21)*(sj14)*(x4914)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x4919=IKcos(j12);
IkReal x4920=IKsin(j12);
IkReal x4921=((IkReal(1.00000000000000))*(sj13));
IkReal x4922=((cj13)*(r10));
IkReal x4923=((cj9)*(sj14));
IkReal x4924=((cj13)*(r01));
IkReal x4925=((IkReal(1.00000000000000))*(r10));
IkReal x4926=((r12)*(sj13));
IkReal x4927=((cj13)*(sj14));
IkReal x4928=((cj11)*(sj10));
IkReal x4929=((cj14)*(r01));
IkReal x4930=((IkReal(1.00000000000000))*(cj9));
IkReal x4931=((sj14)*(sj9));
IkReal x4932=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x4933=((cj10)*(x4919));
IkReal x4934=((IkReal(1.00000000000000))*(x4920));
IkReal x4935=((IkReal(1.00000000000000))*(x4919));
IkReal x4936=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x4935)))+(((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x4934))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x4934)))+(((cj13)*(cj14)*(r20)))+(((cj11)*(x4933)))+(((IkReal(-1.00000000000000))*(r22)*(x4921)))+(((IkReal(-1.00000000000000))*(r21)*(x4927))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x4930)))+(((sj9)*(x4929)))+(((r00)*(x4931)))+(((IkReal(-1.00000000000000))*(sj11)*(x4934)))+(((IkReal(-1.00000000000000))*(x4923)*(x4925))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4925)*(x4931)))+(((IkReal(-1.00000000000000))*(x4933)))+(((x4920)*(x4928)))+(((IkReal(-1.00000000000000))*(r00)*(x4923)))+(((IkReal(-1.00000000000000))*(x4929)*(x4930)))+(((IkReal(-1.00000000000000))*(r11)*(x4932))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4924)*(x4931)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4921)))+(((sj9)*(x4936)))+(((sj11)*(x4919)))+(((IkReal(-1.00000000000000))*(cj14)*(x4922)*(x4930)))+(((cj9)*(x4926)))+(((cj13)*(r11)*(x4923))));
evalcond[5]=((((r11)*(sj9)*(x4927)))+(((IkReal(-1.00000000000000))*(cj10)*(x4934)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x4930)*(x4936)))+(((sj9)*(x4926)))+(((x4923)*(x4924)))+(((IkReal(-1.00000000000000))*(x4922)*(x4932)))+(((IkReal(-1.00000000000000))*(x4928)*(x4935))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x4937=((IkReal(5.42449275362319))*(sj9));
IkReal x4938=((cj14)*(cj9));
IkReal x4939=((cj9)*(sj14));
IkReal x4940=((IkReal(0.144927536231884))*(sj9));
if( IKabs(((((IkReal(0.144927536231884))*(r11)*(x4939)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(5.42449275362319))*(r10)*(x4939)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x4937)))+(((IkReal(5.42449275362319))*(r11)*(x4938)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((cj14)*(r00)*(x4940)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x4940)))+(((IkReal(-0.144927536231884))*(r10)*(x4938)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4937))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0144927536231884))*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1000.00000000000))*(pz)))+(((IkReal(-374.290000000000))*(r20)*(sj14)))+(((IkReal(-374.290000000000))*(cj14)*(r21)))+(((IkReal(10.0000000000000))*(cj14)*(r20)))+(((IkReal(-364.420000000000))*(sj10)))+(((IkReal(-10.0000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(0.144927536231884))*(r11)*(x4939)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(5.42449275362319))*(r10)*(x4939)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x4937)))+(((IkReal(5.42449275362319))*(r11)*(x4938)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((cj14)*(r00)*(x4940)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x4940)))+(((IkReal(-0.144927536231884))*(r10)*(x4938)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4937)))))+IKsqr(((IkReal(0.0144927536231884))*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1000.00000000000))*(pz)))+(((IkReal(-374.290000000000))*(r20)*(sj14)))+(((IkReal(-374.290000000000))*(cj14)*(r21)))+(((IkReal(10.0000000000000))*(cj14)*(r20)))+(((IkReal(-364.420000000000))*(sj10)))+(((IkReal(-10.0000000000000))*(r21)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(0.144927536231884))*(r11)*(x4939)))+(((IkReal(-14.4927536231884))*(px)*(sj9)))+(((IkReal(5.42449275362319))*(r10)*(x4939)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x4937)))+(((IkReal(5.42449275362319))*(r11)*(x4938)))+(((IkReal(14.4927536231884))*(cj9)*(py)))+(((cj14)*(r00)*(x4940)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x4940)))+(((IkReal(-0.144927536231884))*(r10)*(x4938)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x4937)))), ((IkReal(0.0144927536231884))*(((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1000.00000000000))*(pz)))+(((IkReal(-374.290000000000))*(r20)*(sj14)))+(((IkReal(-374.290000000000))*(cj14)*(r21)))+(((IkReal(10.0000000000000))*(cj14)*(r20)))+(((IkReal(-364.420000000000))*(sj10)))+(((IkReal(-10.0000000000000))*(r21)*(sj14)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[3];
IkReal x4941=IKcos(j11);
IkReal x4942=((IkReal(0.0100000000000000))*(cj14));
IkReal x4943=((r10)*(sj9));
IkReal x4944=((cj9)*(r00));
IkReal x4945=((IkReal(0.0100000000000000))*(sj14));
IkReal x4946=((r00)*(sj9));
IkReal x4947=((IkReal(0.374290000000000))*(sj14));
IkReal x4948=((r01)*(sj9));
IkReal x4949=((IkReal(0.374290000000000))*(cj14));
IkReal x4950=((IkReal(1.00000000000000))*(py));
IkReal x4951=((cj9)*(r10));
IkReal x4952=((r11)*(sj9));
IkReal x4953=((cj9)*(x4949));
IkReal x4954=((IkReal(0.0690000000000000))*(x4941));
evalcond[0]=((((r21)*(x4949)))+(((r21)*(x4945)))+(((IkReal(-1.00000000000000))*(r20)*(x4942)))+(pz)+(((r20)*(x4947)))+(((IkReal(0.364420000000000))*(sj10)))+(((cj10)*(x4954))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4942)*(x4946)))+(((IkReal(-1.00000000000000))*(x4947)*(x4951)))+(((IkReal(-1.00000000000000))*(r11)*(x4953)))+(((IkReal(0.0690000000000000))*(IKsin(j11))))+(((x4946)*(x4947)))+(((x4942)*(x4951)))+(((x4945)*(x4948)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x4945)))+(((px)*(sj9)))+(((x4948)*(x4949)))+(((IkReal(-1.00000000000000))*(cj9)*(x4950))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x4943)*(x4947)))+(((IkReal(-1.00000000000000))*(sj10)*(x4954)))+(((x4942)*(x4943)))+(((x4942)*(x4944)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x4944)*(x4947)))+(((IkReal(-1.00000000000000))*(x4945)*(x4952)))+(((IkReal(-1.00000000000000))*(sj9)*(x4950)))+(((IkReal(-1.00000000000000))*(x4949)*(x4952)))+(((IkReal(-1.00000000000000))*(r01)*(x4953)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4945))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x4955=((cj14)*(cj9));
IkReal x4956=((cj14)*(sj9));
IkReal x4957=((r21)*(sj14));
IkReal x4958=((IkReal(1.00000000000000))*(r22));
gconst0=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x4958)))+(((r02)*(sj9)*(x4957)))+(((r12)*(r20)*(x4955)))+(((IkReal(-1.00000000000000))*(r10)*(x4955)*(x4958)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x4957)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x4956)))+(((r00)*(r22)*(x4956)))));
IkReal x4959=((cj14)*(cj9));
IkReal x4960=((cj14)*(sj9));
IkReal x4961=((r21)*(sj14));
IkReal x4962=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x4962)))+(((r02)*(sj9)*(x4961)))+(((r12)*(r20)*(x4959)))+(((IkReal(-1.00000000000000))*(r10)*(x4959)*(x4962)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x4961)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x4960)))+(((r00)*(r22)*(x4960))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x4963=((cj9)*(sj14));
IkReal x4964=((IkReal(1.00000000000000))*(r22));
IkReal x4965=((sj14)*(sj9));
IkReal x4966=((cj14)*(sj9));
IkReal x4967=((IkReal(1.00000000000000))*(r20));
IkReal x4968=((cj14)*(cj9));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x4966)*(x4967)))+(((r02)*(r21)*(x4963)))+(((IkReal(-1.00000000000000))*(r02)*(x4967)*(x4968)))+(((IkReal(-1.00000000000000))*(r11)*(x4964)*(x4965)))+(((IkReal(-1.00000000000000))*(r01)*(x4963)*(x4964)))+(((r10)*(r22)*(x4966)))+(((r00)*(r22)*(x4968)))+(((r12)*(r21)*(x4965)))));
IkReal x4969=((cj9)*(sj14));
IkReal x4970=((IkReal(1.00000000000000))*(r22));
IkReal x4971=((sj14)*(sj9));
IkReal x4972=((cj14)*(sj9));
IkReal x4973=((IkReal(1.00000000000000))*(r20));
IkReal x4974=((cj14)*(cj9));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r01)*(x4969)*(x4970)))+(((r02)*(r21)*(x4969)))+(((IkReal(-1.00000000000000))*(r11)*(x4970)*(x4971)))+(((IkReal(-1.00000000000000))*(r12)*(x4972)*(x4973)))+(((r00)*(r22)*(x4974)))+(((r12)*(r21)*(x4971)))+(((r10)*(r22)*(x4972)))+(((IkReal(-1.00000000000000))*(r02)*(x4973)*(x4974))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x4975=(cj10)*(cj10);
IkReal x4976=(sj10)*(sj10);
dummyeval[0]=((((cj11)*(x4975)))+(((cj11)*(x4976))));
dummyeval[1]=((x4975)+(x4976));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x4977=((IkReal(0.0100000000000000))*(cj14));
IkReal x4978=((r10)*(sj9));
IkReal x4979=((cj9)*(r00));
IkReal x4980=((IkReal(0.0100000000000000))*(sj14));
IkReal x4981=((r00)*(sj9));
IkReal x4982=((IkReal(0.374290000000000))*(sj14));
IkReal x4983=((r01)*(sj9));
IkReal x4984=((IkReal(0.374290000000000))*(cj14));
IkReal x4985=((IkReal(1.00000000000000))*(py));
IkReal x4986=((cj9)*(r10));
IkReal x4987=((r11)*(sj9));
IkReal x4988=((cj9)*(x4984));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x4984)))+(((r21)*(x4980)))+(pz)+(((IkReal(0.364420000000000))*(sj10)))+(((r20)*(x4982)))+(((IkReal(-1.00000000000000))*(r20)*(x4977))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x4977)*(x4981)))+(((IkReal(-1.00000000000000))*(cj9)*(x4985)))+(((IkReal(-1.00000000000000))*(x4982)*(x4986)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x4980)))+(((IkReal(-1.00000000000000))*(r11)*(x4988)))+(((x4977)*(x4986)))+(((px)*(sj9)))+(((x4981)*(x4982)))+(((x4980)*(x4983)))+(((x4983)*(x4984))));
evalcond[3]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(sj9)*(x4985)))+(((x4977)*(x4979)))+(((x4977)*(x4978)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x4980)))+(((IkReal(-1.00000000000000))*(x4978)*(x4982)))+(((IkReal(-1.00000000000000))*(r01)*(x4988)))+(((IkReal(-1.00000000000000))*(x4979)*(x4982)))+(((IkReal(-1.00000000000000))*(x4984)*(x4987)))+(((IkReal(-1.00000000000000))*(x4980)*(x4987)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x4989=((r22)*(sj14));
IkReal x4990=((IkReal(1.00000000000000))*(cj9));
IkReal x4991=((cj14)*(sj9));
IkReal x4992=((r21)*(sj14));
gconst13=IKsign(((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4992)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x4990)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x4991)))+(((IkReal(-1.00000000000000))*(r11)*(x4989)*(x4990)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r02)*(r20)*(x4991)))+(((cj9)*(r12)*(x4992)))+(((r01)*(sj9)*(x4989)))));
IkReal x4993=((r22)*(sj14));
IkReal x4994=((IkReal(1.00000000000000))*(cj9));
IkReal x4995=((cj14)*(sj9));
IkReal x4996=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x4996)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x4994)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x4995)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x4993)*(x4994)))+(((r01)*(sj9)*(x4993)))+(((r02)*(r20)*(x4995)))+(((cj9)*(r12)*(x4996))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
IkReal x4997=((cj9)*(sj14));
IkReal x4998=((IkReal(1.00000000000000))*(r22));
IkReal x4999=((sj14)*(sj9));
IkReal x5000=((cj14)*(sj9));
IkReal x5001=((IkReal(1.00000000000000))*(r20));
IkReal x5002=((cj14)*(cj9));
gconst14=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x4998)*(x4999)))+(((IkReal(-1.00000000000000))*(r02)*(x5001)*(x5002)))+(((IkReal(-1.00000000000000))*(r12)*(x5000)*(x5001)))+(((IkReal(-1.00000000000000))*(r01)*(x4997)*(x4998)))+(((r10)*(r22)*(x5000)))+(((r12)*(r21)*(x4999)))+(((r00)*(r22)*(x5002)))+(((r02)*(r21)*(x4997)))));
IkReal x5003=((cj9)*(sj14));
IkReal x5004=((IkReal(1.00000000000000))*(r22));
IkReal x5005=((sj14)*(sj9));
IkReal x5006=((cj14)*(sj9));
IkReal x5007=((IkReal(1.00000000000000))*(r20));
IkReal x5008=((cj14)*(cj9));
dummyeval[0]=((((r02)*(r21)*(x5003)))+(((IkReal(-1.00000000000000))*(r12)*(x5006)*(x5007)))+(((r12)*(r21)*(x5005)))+(((IkReal(-1.00000000000000))*(r11)*(x5004)*(x5005)))+(((IkReal(-1.00000000000000))*(r02)*(x5007)*(x5008)))+(((IkReal(-1.00000000000000))*(r01)*(x5003)*(x5004)))+(((r10)*(r22)*(x5006)))+(((r00)*(r22)*(x5008))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x5009=((IkReal(0.0100000000000000))*(cj14));
IkReal x5010=((r10)*(sj9));
IkReal x5011=((cj14)*(r21));
IkReal x5012=((cj9)*(r00));
IkReal x5013=((IkReal(0.0100000000000000))*(sj14));
IkReal x5014=((r00)*(sj9));
IkReal x5015=((IkReal(0.374290000000000))*(sj14));
IkReal x5016=((r01)*(sj9));
IkReal x5017=((IkReal(1.00000000000000))*(py));
IkReal x5018=((cj9)*(r10));
IkReal x5019=((IkReal(0.374290000000000))*(cj14));
IkReal x5020=((r11)*(sj9));
IkReal x5021=((cj9)*(x5019));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x5011));
evalcond[2]=((((IkReal(0.374290000000000))*(x5011)))+(((r20)*(x5015)))+(((r21)*(x5013)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x5009))));
evalcond[3]=((IkReal(0.0690000000000000))+(((x5014)*(x5015)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x5013)))+(((IkReal(-1.00000000000000))*(x5009)*(x5014)))+(((x5016)*(x5019)))+(((IkReal(-1.00000000000000))*(r11)*(x5021)))+(((x5013)*(x5016)))+(((x5009)*(x5018)))+(((IkReal(-1.00000000000000))*(cj9)*(x5017)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x5015)*(x5018))));
evalcond[4]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x5019)*(x5020)))+(((IkReal(-1.00000000000000))*(r01)*(x5021)))+(((IkReal(-1.00000000000000))*(x5013)*(x5020)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5013)))+(((IkReal(-1.00000000000000))*(x5010)*(x5015)))+(((x5009)*(x5010)))+(((x5009)*(x5012)))+(((IkReal(-1.00000000000000))*(x5012)*(x5015)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x5017))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5022=((r00)*(sj14));
IkReal x5023=((cj14)*(sj9));
IkReal x5024=((IkReal(1.00000000000000))*(r11));
IkReal x5025=((IkReal(1.00000000000000))*(cj9));
IkReal x5026=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(x5025)*(x5026)))+(((sj9)*(x5022)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5024)))+(((r01)*(x5023))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj9)*(x5026)))+(((IkReal(-1.00000000000000))*(x5023)*(x5024)))+(((IkReal(-1.00000000000000))*(x5022)*(x5025)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5025))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5025)*(x5026)))+(((sj9)*(x5022)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5024)))+(((r01)*(x5023)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj9)*(x5026)))+(((IkReal(-1.00000000000000))*(x5023)*(x5024)))+(((IkReal(-1.00000000000000))*(x5022)*(x5025)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5025)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5025)*(x5026)))+(((sj9)*(x5022)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5024)))+(((r01)*(x5023)))), ((((IkReal(-1.00000000000000))*(sj9)*(x5026)))+(((IkReal(-1.00000000000000))*(x5023)*(x5024)))+(((IkReal(-1.00000000000000))*(x5022)*(x5025)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5025)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x5027=((r00)*(sj14));
IkReal x5028=((cj14)*(sj9));
IkReal x5029=((IkReal(1.00000000000000))*(r11));
IkReal x5030=((IkReal(1.00000000000000))*(cj9));
IkReal x5031=((r10)*(sj14));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5030)*(x5031)))+(((sj9)*(x5027)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5029)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((r01)*(x5028))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5028)*(x5029)))+(((IkReal(-1.00000000000000))*(x5027)*(x5030)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5030)))+(((IkReal(-1.00000000000000))*(sj9)*(x5031))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x5032=((r22)*(sj14));
IkReal x5033=((IkReal(1.00000000000000))*(cj9));
IkReal x5034=((cj14)*(sj9));
IkReal x5035=((r21)*(sj14));
gconst21=IKsign(((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5035)))+(((r02)*(r20)*(x5034)))+(((r01)*(sj9)*(x5032)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x5033)))+(((IkReal(-1.00000000000000))*(r11)*(x5032)*(x5033)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x5034)))+(((cj14)*(cj9)*(r10)*(r22)))+(((cj9)*(r12)*(x5035)))));
IkReal x5036=((r22)*(sj14));
IkReal x5037=((IkReal(1.00000000000000))*(cj9));
IkReal x5038=((cj14)*(sj9));
IkReal x5039=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5039)))+(((r02)*(r20)*(x5038)))+(((r01)*(sj9)*(x5036)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x5037)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x5038)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x5036)*(x5037)))+(((cj9)*(r12)*(x5039))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5040=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst21)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x5040))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5040))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst21)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x5040)))))), ((gconst21)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5040)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5041=IKsin(j13);
IkReal x5042=IKcos(j13);
IkReal x5043=((r11)*(sj14));
IkReal x5044=((IkReal(1.00000000000000))*(r02));
IkReal x5045=((r01)*(sj14));
IkReal x5046=((cj14)*(r00));
IkReal x5047=((IkReal(1.00000000000000))*(r12));
IkReal x5048=((r21)*(sj14));
IkReal x5049=((cj14)*(r20));
IkReal x5050=((cj9)*(x5041));
IkReal x5051=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5052=((sj9)*(x5041));
IkReal x5053=((sj9)*(x5042));
IkReal x5054=((cj9)*(x5042));
IkReal x5055=((IkReal(1.00000000000000))*(x5041));
evalcond[0]=((IkReal(-1.00000000000000))+(((x5041)*(x5049)))+(((IkReal(-1.00000000000000))*(x5048)*(x5055)))+(((r22)*(x5042))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5055)))+(((x5042)*(x5049)))+(((IkReal(-1.00000000000000))*(x5042)*(x5048))));
evalcond[2]=((((x5046)*(x5052)))+(((x5043)*(x5050)))+(((IkReal(-1.00000000000000))*(x5045)*(x5052)))+(((IkReal(-1.00000000000000))*(x5050)*(x5051)))+(((IkReal(-1.00000000000000))*(x5047)*(x5054)))+(((r02)*(x5053))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5044)*(x5052)))+(((x5046)*(x5053)))+(((r12)*(x5050)))+(cj12)+(((x5043)*(x5054)))+(((IkReal(-1.00000000000000))*(x5045)*(x5053)))+(((IkReal(-1.00000000000000))*(x5051)*(x5054))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5044)*(x5054)))+(((x5045)*(x5050)))+(((IkReal(-1.00000000000000))*(x5046)*(x5050)))+(((x5043)*(x5052)))+(((IkReal(-1.00000000000000))*(x5047)*(x5053)))+(((IkReal(-1.00000000000000))*(x5051)*(x5052))));
evalcond[5]=((((x5045)*(x5054)))+(((r12)*(x5052)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x5046)*(x5054)))+(((x5043)*(x5053)))+(((r02)*(x5050)))+(((IkReal(-1.00000000000000))*(x5051)*(x5053))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst20)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst20)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst20)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5056=IKsin(j13);
IkReal x5057=IKcos(j13);
IkReal x5058=((r11)*(sj14));
IkReal x5059=((IkReal(1.00000000000000))*(r02));
IkReal x5060=((r01)*(sj14));
IkReal x5061=((cj14)*(r00));
IkReal x5062=((IkReal(1.00000000000000))*(r12));
IkReal x5063=((r21)*(sj14));
IkReal x5064=((cj14)*(r20));
IkReal x5065=((cj9)*(x5056));
IkReal x5066=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5067=((sj9)*(x5056));
IkReal x5068=((sj9)*(x5057));
IkReal x5069=((cj9)*(x5057));
IkReal x5070=((IkReal(1.00000000000000))*(x5056));
evalcond[0]=((IkReal(-1.00000000000000))+(((r22)*(x5057)))+(((x5056)*(x5064)))+(((IkReal(-1.00000000000000))*(x5063)*(x5070))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5070)))+(((IkReal(-1.00000000000000))*(x5057)*(x5063)))+(((x5057)*(x5064))));
evalcond[2]=((((r02)*(x5068)))+(((x5058)*(x5065)))+(((IkReal(-1.00000000000000))*(x5065)*(x5066)))+(((x5061)*(x5067)))+(((IkReal(-1.00000000000000))*(x5060)*(x5067)))+(((IkReal(-1.00000000000000))*(x5062)*(x5069))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5059)*(x5067)))+(((x5058)*(x5069)))+(((IkReal(-1.00000000000000))*(x5066)*(x5069)))+(cj12)+(((x5061)*(x5068)))+(((r12)*(x5065)))+(((IkReal(-1.00000000000000))*(x5060)*(x5068))));
evalcond[4]=((((x5060)*(x5065)))+(((IkReal(-1.00000000000000))*(x5059)*(x5069)))+(((x5058)*(x5067)))+(((IkReal(-1.00000000000000))*(x5066)*(x5067)))+(((IkReal(-1.00000000000000))*(x5061)*(x5065)))+(((IkReal(-1.00000000000000))*(x5062)*(x5068))));
evalcond[5]=((((x5060)*(x5069)))+(((r02)*(x5065)))+(((x5058)*(x5068)))+(((IkReal(-1.00000000000000))*(x5066)*(x5068)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x5061)*(x5069)))+(((r12)*(x5067))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x5071=((IkReal(0.0100000000000000))*(cj14));
IkReal x5072=((r10)*(sj9));
IkReal x5073=((cj14)*(r21));
IkReal x5074=((cj9)*(r00));
IkReal x5075=((IkReal(0.0100000000000000))*(sj14));
IkReal x5076=((r00)*(sj9));
IkReal x5077=((IkReal(0.374290000000000))*(sj14));
IkReal x5078=((r01)*(sj9));
IkReal x5079=((IkReal(1.00000000000000))*(py));
IkReal x5080=((cj9)*(r10));
IkReal x5081=((IkReal(0.374290000000000))*(cj14));
IkReal x5082=((r11)*(sj9));
IkReal x5083=((cj9)*(x5081));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x5073));
evalcond[2]=((((IkReal(0.374290000000000))*(x5073)))+(((r20)*(x5077)))+(((IkReal(-1.00000000000000))*(r20)*(x5071)))+(((r21)*(x5075)))+(pz));
evalcond[3]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x5083)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x5075)))+(((IkReal(-1.00000000000000))*(x5077)*(x5080)))+(((x5076)*(x5077)))+(((IkReal(-1.00000000000000))*(cj9)*(x5079)))+(((x5078)*(x5081)))+(((x5075)*(x5078)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x5071)*(x5076)))+(((x5071)*(x5080))));
evalcond[4]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x5072)*(x5077)))+(((IkReal(-1.00000000000000))*(r01)*(x5083)))+(((IkReal(-1.00000000000000))*(x5075)*(x5082)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5075)))+(((x5071)*(x5074)))+(((x5071)*(x5072)))+(((IkReal(-1.00000000000000))*(x5081)*(x5082)))+(((IkReal(-1.00000000000000))*(sj9)*(x5079)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5074)*(x5077))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5084=((r00)*(sj14));
IkReal x5085=((cj14)*(r01));
IkReal x5086=((cj14)*(r11));
IkReal x5087=((r10)*(sj14));
IkReal x5088=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x5087)*(x5088)))+(((sj9)*(x5085)))+(((sj9)*(x5084)))+(((IkReal(-1.00000000000000))*(x5086)*(x5088))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x5085)))+(((cj9)*(x5084)))+(((sj9)*(x5086)))+(((sj9)*(x5087))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5087)*(x5088)))+(((sj9)*(x5085)))+(((sj9)*(x5084)))+(((IkReal(-1.00000000000000))*(x5086)*(x5088)))))+IKsqr(((((cj9)*(x5085)))+(((cj9)*(x5084)))+(((sj9)*(x5086)))+(((sj9)*(x5087)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5087)*(x5088)))+(((sj9)*(x5085)))+(((sj9)*(x5084)))+(((IkReal(-1.00000000000000))*(x5086)*(x5088)))), ((((cj9)*(x5085)))+(((cj9)*(x5084)))+(((sj9)*(x5086)))+(((sj9)*(x5087)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x5089=((r00)*(sj14));
IkReal x5090=((cj14)*(sj9));
IkReal x5091=((IkReal(1.00000000000000))*(r11));
IkReal x5092=((IkReal(1.00000000000000))*(cj9));
IkReal x5093=((r10)*(sj14));
evalcond[0]=((((sj9)*(x5089)))+(((r01)*(x5090)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5091)))+(((IkReal(-1.00000000000000))*(x5092)*(x5093))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj9)*(x5093)))+(((IkReal(-1.00000000000000))*(x5090)*(x5091)))+(IKcos(j12))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5092)))+(((IkReal(-1.00000000000000))*(x5089)*(x5092))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
gconst24=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x5094=((cj14)*(cj9));
IkReal x5095=((cj14)*(sj9));
IkReal x5096=((r21)*(sj14));
IkReal x5097=((IkReal(1.00000000000000))*(r22));
gconst25=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x5094)*(x5097)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r02)*(sj9)*(x5096)))+(((r12)*(r20)*(x5094)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5096)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5097)))+(((r00)*(r22)*(x5095)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5095)))));
IkReal x5098=((cj14)*(cj9));
IkReal x5099=((cj14)*(sj9));
IkReal x5100=((r21)*(sj14));
IkReal x5101=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((r12)*(r20)*(x5098)))+(((IkReal(-1.00000000000000))*(r10)*(x5098)*(x5101)))+(((r02)*(sj9)*(x5100)))+(((r00)*(r22)*(x5099)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5101)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5100)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5099))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5102=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst25)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x5102))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5102)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst25)*(((((r02)*(sj9)))+(((IkReal(-1.00000000000000))*(r12)*(x5102)))))), ((gconst25)*(((((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5102)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5103=IKsin(j13);
IkReal x5104=IKcos(j13);
IkReal x5105=((r11)*(sj14));
IkReal x5106=((IkReal(1.00000000000000))*(r02));
IkReal x5107=((r01)*(sj14));
IkReal x5108=((cj14)*(r00));
IkReal x5109=((IkReal(1.00000000000000))*(r12));
IkReal x5110=((r21)*(sj14));
IkReal x5111=((cj14)*(r20));
IkReal x5112=((cj9)*(x5103));
IkReal x5113=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5114=((sj9)*(x5103));
IkReal x5115=((sj9)*(x5104));
IkReal x5116=((cj9)*(x5104));
IkReal x5117=((IkReal(1.00000000000000))*(x5103));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x5110)*(x5117)))+(((r22)*(x5104)))+(((x5103)*(x5111))));
evalcond[1]=((((x5104)*(x5111)))+(((IkReal(-1.00000000000000))*(r22)*(x5117)))+(((IkReal(-1.00000000000000))*(x5104)*(x5110))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5112)*(x5113)))+(((r02)*(x5115)))+(((x5108)*(x5114)))+(((IkReal(-1.00000000000000))*(x5109)*(x5116)))+(((IkReal(-1.00000000000000))*(x5107)*(x5114)))+(((x5105)*(x5112))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5106)*(x5114)))+(((x5108)*(x5115)))+(((IkReal(-1.00000000000000))*(x5113)*(x5116)))+(cj12)+(((IkReal(-1.00000000000000))*(x5107)*(x5115)))+(((x5105)*(x5116)))+(((r12)*(x5112))));
evalcond[4]=((((x5107)*(x5112)))+(((IkReal(-1.00000000000000))*(x5106)*(x5116)))+(((IkReal(-1.00000000000000))*(x5113)*(x5114)))+(((IkReal(-1.00000000000000))*(x5109)*(x5115)))+(((IkReal(-1.00000000000000))*(x5108)*(x5112)))+(((x5105)*(x5114))));
evalcond[5]=((((x5107)*(x5116)))+(((r02)*(x5112)))+(((IkReal(-1.00000000000000))*(x5113)*(x5115)))+(sj12)+(((IkReal(-1.00000000000000))*(x5108)*(x5116)))+(((x5105)*(x5115)))+(((r12)*(x5114))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst24)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst24)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst24)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5118=IKsin(j13);
IkReal x5119=IKcos(j13);
IkReal x5120=((r11)*(sj14));
IkReal x5121=((IkReal(1.00000000000000))*(r02));
IkReal x5122=((r01)*(sj14));
IkReal x5123=((cj14)*(r00));
IkReal x5124=((IkReal(1.00000000000000))*(r12));
IkReal x5125=((r21)*(sj14));
IkReal x5126=((cj14)*(r20));
IkReal x5127=((cj9)*(x5118));
IkReal x5128=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5129=((sj9)*(x5118));
IkReal x5130=((sj9)*(x5119));
IkReal x5131=((cj9)*(x5119));
IkReal x5132=((IkReal(1.00000000000000))*(x5118));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x5125)*(x5132)))+(((r22)*(x5119)))+(((x5118)*(x5126))));
evalcond[1]=((((x5119)*(x5126)))+(((IkReal(-1.00000000000000))*(x5119)*(x5125)))+(((IkReal(-1.00000000000000))*(r22)*(x5132))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5124)*(x5131)))+(((x5123)*(x5129)))+(((x5120)*(x5127)))+(((IkReal(-1.00000000000000))*(x5127)*(x5128)))+(((r02)*(x5130)))+(((IkReal(-1.00000000000000))*(x5122)*(x5129))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5122)*(x5130)))+(((IkReal(-1.00000000000000))*(x5128)*(x5131)))+(((r12)*(x5127)))+(cj12)+(((IkReal(-1.00000000000000))*(x5121)*(x5129)))+(((x5123)*(x5130)))+(((x5120)*(x5131))));
evalcond[4]=((((x5122)*(x5127)))+(((IkReal(-1.00000000000000))*(x5123)*(x5127)))+(((IkReal(-1.00000000000000))*(x5124)*(x5130)))+(((IkReal(-1.00000000000000))*(x5128)*(x5129)))+(((IkReal(-1.00000000000000))*(x5121)*(x5131)))+(((x5120)*(x5129))));
evalcond[5]=((((x5122)*(x5131)))+(((IkReal(-1.00000000000000))*(x5128)*(x5130)))+(((IkReal(-1.00000000000000))*(x5123)*(x5131)))+(((r12)*(x5129)))+(sj12)+(((x5120)*(x5130)))+(((r02)*(x5127))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5133=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5133)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5133)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5133)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5133)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5133)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5133)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x5134=IKcos(j12);
IkReal x5135=((r00)*(sj14));
IkReal x5136=((cj14)*(sj9));
IkReal x5137=((IkReal(1.00000000000000))*(r11));
IkReal x5138=((IkReal(1.00000000000000))*(cj9));
IkReal x5139=((r10)*(sj14));
IkReal x5140=((IkReal(1.00000000000000))*(x5134));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5140))));
evalcond[1]=((((sj9)*(x5135)))+(((r01)*(x5136)))+(((IkReal(-1.00000000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(x5138)*(x5139)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5137))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5136)*(x5137)))+(((IkReal(-1.00000000000000))*(cj10)*(x5140)))+(((IkReal(-1.00000000000000))*(sj9)*(x5139)))+(((IkReal(-1.00000000000000))*(x5135)*(x5138)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5138))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x5141=((r22)*(sj14));
IkReal x5142=((IkReal(1.00000000000000))*(cj9));
IkReal x5143=((cj14)*(sj9));
IkReal x5144=((r21)*(sj14));
gconst16=IKsign(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x5142)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x5143)))+(((r01)*(sj9)*(x5141)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5144)))+(((r02)*(r20)*(x5143)))+(((cj9)*(r12)*(x5144)))+(((IkReal(-1.00000000000000))*(r11)*(x5141)*(x5142)))));
IkReal x5145=((r22)*(sj14));
IkReal x5146=((IkReal(1.00000000000000))*(cj9));
IkReal x5147=((cj14)*(sj9));
IkReal x5148=((r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x5146)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x5147)))+(((IkReal(-1.00000000000000))*(r11)*(x5145)*(x5146)))+(((r01)*(sj9)*(x5145)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5148)))+(((r02)*(r20)*(x5147)))+(((cj9)*(r12)*(x5148))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5149=((cj10)*(sj14));
IkReal x5150=((IkReal(1.00000000000000))*(cj9));
IkReal x5151=((cj10)*(sj9));
if( IKabs(((gconst16)*(((((r02)*(x5151)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5150))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x5149)*(x5150)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((r01)*(sj9)*(x5149)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5151))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst16)*(((((r02)*(x5151)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5150)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r11)*(x5149)*(x5150)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((r01)*(sj9)*(x5149)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5151)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5152=IKsin(j13);
IkReal x5153=IKcos(j13);
IkReal x5154=((IkReal(1.00000000000000))*(cj10));
IkReal x5155=((r11)*(sj14));
IkReal x5156=((IkReal(1.00000000000000))*(r02));
IkReal x5157=((r01)*(sj14));
IkReal x5158=((cj14)*(r00));
IkReal x5159=((IkReal(1.00000000000000))*(r12));
IkReal x5160=((r21)*(sj14));
IkReal x5161=((cj14)*(r20));
IkReal x5162=((cj9)*(x5152));
IkReal x5163=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5164=((sj9)*(x5152));
IkReal x5165=((sj9)*(x5153));
IkReal x5166=((cj9)*(x5153));
IkReal x5167=((IkReal(1.00000000000000))*(x5152));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5160)*(x5167)))+(((x5152)*(x5161)))+(((r22)*(x5153)))+(((IkReal(-1.00000000000000))*(x5154))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5167)))+(((x5153)*(x5161)))+(((IkReal(-1.00000000000000))*(sj10)*(sj12)))+(((IkReal(-1.00000000000000))*(x5153)*(x5160))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5159)*(x5166)))+(((x5158)*(x5164)))+(((x5155)*(x5162)))+(((IkReal(-1.00000000000000))*(x5162)*(x5163)))+(((r02)*(x5165)))+(((IkReal(-1.00000000000000))*(x5157)*(x5164))));
evalcond[3]=((((x5158)*(x5165)))+(((x5155)*(x5166)))+(cj12)+(((r12)*(x5162)))+(((IkReal(-1.00000000000000))*(x5163)*(x5166)))+(((IkReal(-1.00000000000000))*(x5156)*(x5164)))+(((IkReal(-1.00000000000000))*(x5157)*(x5165))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5158)*(x5162)))+(((IkReal(-1.00000000000000))*(x5159)*(x5165)))+(((x5155)*(x5164)))+(sj10)+(((IkReal(-1.00000000000000))*(x5163)*(x5164)))+(((IkReal(-1.00000000000000))*(x5156)*(x5166)))+(((x5157)*(x5162))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5158)*(x5166)))+(((IkReal(-1.00000000000000))*(sj12)*(x5154)))+(((x5155)*(x5165)))+(((r12)*(x5164)))+(((IkReal(-1.00000000000000))*(x5163)*(x5165)))+(((x5157)*(x5166)))+(((r02)*(x5162))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5168=((sj10)*(sj12));
IkReal x5169=((cj14)*(r20));
IkReal x5170=((IkReal(1.00000000000000))*(r21)*(sj14));
if( IKabs(((gconst15)*(((((cj10)*(x5169)))+(((IkReal(-1.00000000000000))*(cj10)*(x5170)))+(((IkReal(-1.00000000000000))*(r22)*(x5168))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x5168)*(x5170)))+(((cj10)*(r22)))+(((x5168)*(x5169))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst15)*(((((cj10)*(x5169)))+(((IkReal(-1.00000000000000))*(cj10)*(x5170)))+(((IkReal(-1.00000000000000))*(r22)*(x5168)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(x5168)*(x5170)))+(((cj10)*(r22)))+(((x5168)*(x5169)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5171=IKsin(j13);
IkReal x5172=IKcos(j13);
IkReal x5173=((IkReal(1.00000000000000))*(cj10));
IkReal x5174=((r11)*(sj14));
IkReal x5175=((IkReal(1.00000000000000))*(r02));
IkReal x5176=((r01)*(sj14));
IkReal x5177=((cj14)*(r00));
IkReal x5178=((IkReal(1.00000000000000))*(r12));
IkReal x5179=((r21)*(sj14));
IkReal x5180=((cj14)*(r20));
IkReal x5181=((cj9)*(x5171));
IkReal x5182=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5183=((sj9)*(x5171));
IkReal x5184=((sj9)*(x5172));
IkReal x5185=((cj9)*(x5172));
IkReal x5186=((IkReal(1.00000000000000))*(x5171));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5173)))+(((x5171)*(x5180)))+(((r22)*(x5172)))+(((IkReal(-1.00000000000000))*(x5179)*(x5186))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5186)))+(((IkReal(-1.00000000000000))*(sj10)*(sj12)))+(((x5172)*(x5180)))+(((IkReal(-1.00000000000000))*(x5172)*(x5179))));
evalcond[2]=((((x5177)*(x5183)))+(((x5174)*(x5181)))+(((IkReal(-1.00000000000000))*(x5176)*(x5183)))+(((r02)*(x5184)))+(((IkReal(-1.00000000000000))*(x5181)*(x5182)))+(((IkReal(-1.00000000000000))*(x5178)*(x5185))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5175)*(x5183)))+(((x5177)*(x5184)))+(((IkReal(-1.00000000000000))*(x5182)*(x5185)))+(cj12)+(((x5174)*(x5185)))+(((IkReal(-1.00000000000000))*(x5176)*(x5184)))+(((r12)*(x5181))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5175)*(x5185)))+(((IkReal(-1.00000000000000))*(x5182)*(x5183)))+(sj10)+(((x5174)*(x5183)))+(((IkReal(-1.00000000000000))*(x5177)*(x5181)))+(((x5176)*(x5181)))+(((IkReal(-1.00000000000000))*(x5178)*(x5184))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj12)*(x5173)))+(((IkReal(-1.00000000000000))*(x5182)*(x5184)))+(((x5174)*(x5184)))+(((IkReal(-1.00000000000000))*(x5177)*(x5185)))+(((r02)*(x5181)))+(((x5176)*(x5185)))+(((r12)*(x5183))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5187=((cj10)*(cj9));
IkReal x5188=((IkReal(1.00000000000000))*(sj14));
IkReal x5189=((cj10)*(sj9));
if( IKabs(((gconst14)*(((((r22)*(sj10)))+(((IkReal(-1.00000000000000))*(r02)*(x5187)))+(((IkReal(-1.00000000000000))*(r12)*(x5189))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((cj14)*(r10)*(x5189)))+(((cj14)*(r00)*(x5187)))+(((IkReal(-1.00000000000000))*(r11)*(x5188)*(x5189)))+(((IkReal(-1.00000000000000))*(r01)*(x5187)*(x5188)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst14)*(((((r22)*(sj10)))+(((IkReal(-1.00000000000000))*(r02)*(x5187)))+(((IkReal(-1.00000000000000))*(r12)*(x5189)))))), ((gconst14)*(((((cj14)*(r10)*(x5189)))+(((cj14)*(r00)*(x5187)))+(((IkReal(-1.00000000000000))*(r11)*(x5188)*(x5189)))+(((IkReal(-1.00000000000000))*(r01)*(x5187)*(x5188)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x5190=IKsin(j13);
IkReal x5191=IKcos(j13);
IkReal x5192=((r11)*(sj14));
IkReal x5193=((r01)*(sj14));
IkReal x5194=((cj14)*(r00));
IkReal x5195=((cj9)*(x5190));
IkReal x5196=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5197=((sj9)*(x5190));
IkReal x5198=((sj9)*(x5191));
IkReal x5199=((IkReal(1.00000000000000))*(cj9)*(x5191));
evalcond[0]=((((cj14)*(r20)*(x5190)))+(((r22)*(x5191)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5190)))+(((IkReal(-1.00000000000000))*(cj10))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x5199)))+(((x5194)*(x5197)))+(((r02)*(x5198)))+(((IkReal(-1.00000000000000))*(x5193)*(x5197)))+(((x5192)*(x5195)))+(((IkReal(-1.00000000000000))*(x5195)*(x5196))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5194)*(x5195)))+(((x5193)*(x5195)))+(((IkReal(-1.00000000000000))*(r12)*(x5198)))+(sj10)+(((IkReal(-1.00000000000000))*(r02)*(x5199)))+(((x5192)*(x5197)))+(((IkReal(-1.00000000000000))*(x5196)*(x5197))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x5200=((IkReal(0.0100000000000000))*(cj14));
IkReal x5201=((r10)*(sj9));
IkReal x5202=((cj9)*(r11));
IkReal x5203=((sj13)*(sj14));
IkReal x5204=((cj14)*(r21));
IkReal x5205=((cj9)*(r00));
IkReal x5206=((IkReal(0.374290000000000))*(cj14));
IkReal x5207=((cj9)*(r01));
IkReal x5208=((r01)*(sj9));
IkReal x5209=((IkReal(0.0100000000000000))*(sj14));
IkReal x5210=((IkReal(1.00000000000000))*(sj13));
IkReal x5211=((r00)*(sj9));
IkReal x5212=((IkReal(0.374290000000000))*(sj14));
IkReal x5213=((cj13)*(sj9));
IkReal x5214=((IkReal(1.00000000000000))*(cj13));
IkReal x5215=((IkReal(1.00000000000000))*(py));
IkReal x5216=((r11)*(sj9));
IkReal x5217=((cj9)*(r10));
IkReal x5218=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x5204));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x5218)))+(((IkReal(-1.00000000000000))*(r21)*(x5203)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(0.374290000000000))*(x5204)))+(((r20)*(x5212)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x5200)))+(((r21)*(x5209))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x5210)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5214))));
evalcond[5]=((((x5202)*(x5203)))+(((x5211)*(x5218)))+(((r02)*(x5213)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5214)))+(((IkReal(-1.00000000000000))*(cj14)*(x5210)*(x5217)))+(((IkReal(-1.00000000000000))*(x5203)*(x5208))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x5213)))+(((x5203)*(x5216)))+(((x5203)*(x5207)))+(((IkReal(-1.00000000000000))*(cj14)*(x5205)*(x5210)))+(((IkReal(-1.00000000000000))*(cj14)*(x5201)*(x5210)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x5214))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5212)*(x5217)))+(((IkReal(-1.00000000000000))*(x5200)*(x5211)))+(((x5208)*(x5209)))+(((x5206)*(x5208)))+(((x5200)*(x5217)))+(((x5211)*(x5212)))+(((IkReal(-1.00000000000000))*(cj9)*(x5215)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x5202)*(x5206)))+(((IkReal(-1.00000000000000))*(x5202)*(x5209))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x5206)*(x5207)))+(((IkReal(-1.00000000000000))*(x5201)*(x5212)))+(((IkReal(-1.00000000000000))*(x5206)*(x5216)))+(((x5200)*(x5201)))+(((x5200)*(x5205)))+(((IkReal(-1.00000000000000))*(sj9)*(x5215)))+(((IkReal(-1.00000000000000))*(x5207)*(x5209)))+(((IkReal(-1.00000000000000))*(x5209)*(x5216)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5205)*(x5212))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5219=((r00)*(sj14));
IkReal x5220=((cj14)*(sj9));
IkReal x5221=((IkReal(1.00000000000000))*(r11));
IkReal x5222=((IkReal(1.00000000000000))*(cj9));
IkReal x5223=((r10)*(sj14));
if( IKabs(((((sj9)*(x5219)))+(((IkReal(-1.00000000000000))*(x5222)*(x5223)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5221)))+(((r01)*(x5220))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5219)*(x5222)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5222)))+(((IkReal(-1.00000000000000))*(x5220)*(x5221)))+(((IkReal(-1.00000000000000))*(sj9)*(x5223))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj9)*(x5219)))+(((IkReal(-1.00000000000000))*(x5222)*(x5223)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5221)))+(((r01)*(x5220)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5219)*(x5222)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5222)))+(((IkReal(-1.00000000000000))*(x5220)*(x5221)))+(((IkReal(-1.00000000000000))*(sj9)*(x5223)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((sj9)*(x5219)))+(((IkReal(-1.00000000000000))*(x5222)*(x5223)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5221)))+(((r01)*(x5220)))), ((((IkReal(-1.00000000000000))*(x5219)*(x5222)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5222)))+(((IkReal(-1.00000000000000))*(x5220)*(x5221)))+(((IkReal(-1.00000000000000))*(sj9)*(x5223)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5224=IKcos(j12);
IkReal x5225=((cj9)*(sj14));
IkReal x5226=((IkReal(1.00000000000000))*(r00));
IkReal x5227=((cj14)*(sj9));
IkReal x5228=((IkReal(1.00000000000000))*(r11));
IkReal x5229=((cj13)*(r01));
IkReal x5230=((IkReal(1.00000000000000))*(r10));
IkReal x5231=((cj9)*(sj13));
IkReal x5232=((cj14)*(cj9));
IkReal x5233=((sj14)*(sj9));
IkReal x5234=((sj13)*(sj9));
IkReal x5235=((cj13)*(r11));
IkReal x5236=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5236)))+(((IkReal(-1.00000000000000))*(x5228)*(x5232)))+(((r00)*(x5233)))+(((r01)*(x5227)))+(((IkReal(-1.00000000000000))*(x5225)*(x5230))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5227)*(x5228)))+(((IkReal(-1.00000000000000))*(r01)*(x5232)))+(((IkReal(-1.00000000000000))*(x5225)*(x5226)))+(((IkReal(-1.00000000000000))*(x5224)))+(((IkReal(-1.00000000000000))*(x5230)*(x5233))));
evalcond[2]=((((r12)*(x5231)))+(x5224)+(((IkReal(-1.00000000000000))*(cj13)*(x5230)*(x5232)))+(((x5225)*(x5235)))+(((IkReal(-1.00000000000000))*(x5229)*(x5233)))+(((IkReal(-1.00000000000000))*(r02)*(x5234)))+(((cj13)*(r00)*(x5227))));
evalcond[3]=((((x5225)*(x5229)))+(((IkReal(-1.00000000000000))*(x5236)))+(((r12)*(x5234)))+(((x5233)*(x5235)))+(((IkReal(-1.00000000000000))*(cj13)*(x5226)*(x5232)))+(((IkReal(-1.00000000000000))*(cj13)*(x5227)*(x5230)))+(((r02)*(x5231))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5237=((IkReal(0.0100000000000000))*(cj14));
IkReal x5238=((r10)*(sj9));
IkReal x5239=((cj9)*(r11));
IkReal x5240=((sj13)*(sj14));
IkReal x5241=((cj14)*(r21));
IkReal x5242=((cj9)*(r00));
IkReal x5243=((IkReal(0.374290000000000))*(cj14));
IkReal x5244=((cj9)*(r01));
IkReal x5245=((r01)*(sj9));
IkReal x5246=((IkReal(0.0100000000000000))*(sj14));
IkReal x5247=((IkReal(1.00000000000000))*(sj13));
IkReal x5248=((r00)*(sj9));
IkReal x5249=((IkReal(0.374290000000000))*(sj14));
IkReal x5250=((cj13)*(sj9));
IkReal x5251=((IkReal(1.00000000000000))*(cj13));
IkReal x5252=((IkReal(1.00000000000000))*(py));
IkReal x5253=((r11)*(sj9));
IkReal x5254=((cj9)*(r10));
IkReal x5255=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x5241));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x5255)))+(((IkReal(-1.00000000000000))*(r21)*(x5240)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x5237)))+(((r20)*(x5249)))+(((IkReal(0.374290000000000))*(x5241)))+(pz)+(((r21)*(x5246))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x5247)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5251))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5251)))+(((x5239)*(x5240)))+(((IkReal(-1.00000000000000))*(cj14)*(x5247)*(x5254)))+(((IkReal(-1.00000000000000))*(x5240)*(x5245)))+(((x5248)*(x5255)))+(((r02)*(x5250))));
evalcond[6]=((((x5240)*(x5244)))+(((x5240)*(x5253)))+(((IkReal(-1.00000000000000))*(cj14)*(x5242)*(x5247)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x5251)))+(((IkReal(-1.00000000000000))*(cj14)*(x5238)*(x5247)))+(((IkReal(-1.00000000000000))*(r12)*(x5250))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x5245)*(x5246)))+(((IkReal(-1.00000000000000))*(x5249)*(x5254)))+(((x5237)*(x5254)))+(((IkReal(-1.00000000000000))*(x5239)*(x5246)))+(((IkReal(-1.00000000000000))*(x5239)*(x5243)))+(((x5243)*(x5245)))+(((IkReal(-1.00000000000000))*(x5237)*(x5248)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x5252)))+(((x5248)*(x5249))));
evalcond[8]=((IkReal(-0.295420000000000))+(((x5237)*(x5242)))+(((x5237)*(x5238)))+(((IkReal(-1.00000000000000))*(sj9)*(x5252)))+(((IkReal(-1.00000000000000))*(x5243)*(x5244)))+(((IkReal(-1.00000000000000))*(x5242)*(x5249)))+(((IkReal(-1.00000000000000))*(x5243)*(x5253)))+(((IkReal(-1.00000000000000))*(x5246)*(x5253)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5238)*(x5249)))+(((IkReal(-1.00000000000000))*(x5244)*(x5246))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5256=((r00)*(sj14));
IkReal x5257=((cj14)*(r01));
IkReal x5258=((cj14)*(r11));
IkReal x5259=((r10)*(sj14));
IkReal x5260=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x5258)*(x5260)))+(((IkReal(-1.00000000000000))*(x5259)*(x5260)))+(((sj9)*(x5257)))+(((sj9)*(x5256))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x5257)))+(((cj9)*(x5256)))+(((sj9)*(x5259)))+(((sj9)*(x5258))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5258)*(x5260)))+(((IkReal(-1.00000000000000))*(x5259)*(x5260)))+(((sj9)*(x5257)))+(((sj9)*(x5256)))))+IKsqr(((((cj9)*(x5257)))+(((cj9)*(x5256)))+(((sj9)*(x5259)))+(((sj9)*(x5258)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5258)*(x5260)))+(((IkReal(-1.00000000000000))*(x5259)*(x5260)))+(((sj9)*(x5257)))+(((sj9)*(x5256)))), ((((cj9)*(x5257)))+(((cj9)*(x5256)))+(((sj9)*(x5259)))+(((sj9)*(x5258)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5261=IKcos(j12);
IkReal x5262=IKsin(j12);
IkReal x5263=((sj13)*(sj9));
IkReal x5264=((sj14)*(sj9));
IkReal x5265=((cj13)*(r11));
IkReal x5266=((cj9)*(sj14));
IkReal x5267=((cj13)*(r10));
IkReal x5268=((cj13)*(r01));
IkReal x5269=((cj13)*(r00));
IkReal x5270=((cj14)*(sj9));
IkReal x5271=((IkReal(1.00000000000000))*(r10));
IkReal x5272=((cj9)*(sj13));
IkReal x5273=((IkReal(1.00000000000000))*(x5270));
IkReal x5274=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5262)))+(((r00)*(x5264)))+(((IkReal(-1.00000000000000))*(x5266)*(x5271)))+(((IkReal(-1.00000000000000))*(r11)*(x5274)))+(((r01)*(x5270))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x5274)))+(((IkReal(-1.00000000000000))*(r00)*(x5266)))+(((IkReal(-1.00000000000000))*(x5264)*(x5271)))+(x5261)+(((IkReal(-1.00000000000000))*(r11)*(x5273))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x5263)))+(x5261)+(((x5265)*(x5266)))+(((x5269)*(x5270)))+(((IkReal(-1.00000000000000))*(x5264)*(x5268)))+(((IkReal(-1.00000000000000))*(x5267)*(x5274)))+(((r12)*(x5272))));
evalcond[3]=((((r02)*(x5272)))+(((r12)*(x5263)))+(x5262)+(((x5266)*(x5268)))+(((x5264)*(x5265)))+(((IkReal(-1.00000000000000))*(x5269)*(x5274)))+(((IkReal(-1.00000000000000))*(x5267)*(x5273))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5275=((IkReal(0.0100000000000000))*(cj14));
IkReal x5276=((r10)*(sj9));
IkReal x5277=((cj9)*(sj14));
IkReal x5278=((r11)*(sj13));
IkReal x5279=((cj9)*(r00));
IkReal x5280=((IkReal(1.00000000000000))*(sj9));
IkReal x5281=((cj14)*(r11));
IkReal x5282=((r01)*(sj14));
IkReal x5283=((r21)*(sj14));
IkReal x5284=((IkReal(0.0100000000000000))*(r11));
IkReal x5285=((r00)*(sj9));
IkReal x5286=((IkReal(0.374290000000000))*(sj14));
IkReal x5287=((cj13)*(r02));
IkReal x5288=((IkReal(1.00000000000000))*(cj14));
IkReal x5289=((IkReal(1.00000000000000))*(cj9));
IkReal x5290=((cj13)*(r12));
IkReal x5291=((sj14)*(sj9));
IkReal x5292=((cj9)*(r10));
IkReal x5293=((cj14)*(sj13));
IkReal x5294=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x5283)))+(((r20)*(x5293)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((r20)*(x5286)))+(((IkReal(-1.00000000000000))*(r20)*(x5275)))+(((IkReal(0.0100000000000000))*(x5283)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x5277)))+(((IkReal(-1.00000000000000))*(sj14)*(x5276)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5288)))+(((IkReal(-1.00000000000000))*(x5280)*(x5281))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5289)*(x5290)))+(((IkReal(-1.00000000000000))*(sj13)*(x5280)*(x5282)))+(((IkReal(-1.00000000000000))*(sj13)*(x5288)*(x5292)))+(((sj9)*(x5287)))+(((x5277)*(x5278)))+(((x5285)*(x5293))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x5287)*(x5289)))+(((IkReal(-1.00000000000000))*(sj13)*(x5279)*(x5288)))+(((x5278)*(x5291)))+(((IkReal(-1.00000000000000))*(sj13)*(x5276)*(x5288)))+(((IkReal(-1.00000000000000))*(x5280)*(x5290)))+(((r01)*(sj13)*(x5277))));
evalcond[6]=((((cj13)*(r01)*(x5277)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x5279)*(x5288)))+(((cj13)*(r11)*(x5291)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x5276)*(x5288))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5275)*(x5285)))+(((IkReal(-0.374290000000000))*(cj9)*(x5281)))+(((x5275)*(x5292)))+(((sj9)*(x5294)))+(((IkReal(-1.00000000000000))*(x5277)*(x5284)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x5289)))+(((IkReal(-0.374290000000000))*(r10)*(x5277)))+(((x5285)*(x5286)))+(((IkReal(0.0100000000000000))*(sj9)*(x5282))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5284)*(x5291)))+(((IkReal(-1.00000000000000))*(px)*(x5289)))+(((IkReal(-0.374290000000000))*(r00)*(x5277)))+(((IkReal(-0.374290000000000))*(sj9)*(x5281)))+(((IkReal(-1.00000000000000))*(cj9)*(x5294)))+(((IkReal(-1.00000000000000))*(x5276)*(x5286)))+(((x5275)*(x5279)))+(((x5275)*(x5276)))+(((IkReal(-0.0100000000000000))*(r01)*(x5277)))+(((IkReal(-1.00000000000000))*(py)*(x5280))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5295=IKcos(j12);
IkReal x5296=((sj14)*(sj9));
IkReal x5297=((IkReal(1.00000000000000))*(sj13));
IkReal x5298=((cj13)*(sj14));
IkReal x5299=((cj9)*(r11));
IkReal x5300=((IkReal(1.00000000000000))*(cj13));
IkReal x5301=((cj9)*(r10));
IkReal x5302=((cj14)*(sj9));
IkReal x5303=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x5295))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5297)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x5303)))+(((IkReal(-1.00000000000000))*(r21)*(x5298))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x5301)))+(((IkReal(-1.00000000000000))*(x5303)))+(((IkReal(-1.00000000000000))*(cj14)*(x5299)))+(((r00)*(x5296)))+(((r01)*(x5302))));
evalcond[3]=((((cj13)*(r00)*(x5302)))+(x5295)+(((IkReal(-1.00000000000000))*(cj14)*(x5300)*(x5301)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5297)))+(((IkReal(-1.00000000000000))*(r01)*(x5296)*(x5300)))+(((cj9)*(r12)*(sj13)))+(((x5298)*(x5299))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5304=((IkReal(0.0100000000000000))*(cj14));
IkReal x5305=((r10)*(sj9));
IkReal x5306=((cj9)*(sj14));
IkReal x5307=((r11)*(sj13));
IkReal x5308=((cj9)*(r00));
IkReal x5309=((IkReal(1.00000000000000))*(sj9));
IkReal x5310=((cj14)*(r11));
IkReal x5311=((r01)*(sj14));
IkReal x5312=((r21)*(sj14));
IkReal x5313=((IkReal(0.0100000000000000))*(r11));
IkReal x5314=((r00)*(sj9));
IkReal x5315=((IkReal(0.374290000000000))*(sj14));
IkReal x5316=((cj13)*(r02));
IkReal x5317=((IkReal(1.00000000000000))*(cj14));
IkReal x5318=((IkReal(1.00000000000000))*(cj9));
IkReal x5319=((cj13)*(r12));
IkReal x5320=((sj14)*(sj9));
IkReal x5321=((cj9)*(r10));
IkReal x5322=((cj14)*(sj13));
IkReal x5323=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x5322)))+(((IkReal(-1.00000000000000))*(sj13)*(x5312)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(0.0100000000000000))*(x5312)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x5304)))+(((r20)*(x5315))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x5305)))+(((IkReal(-1.00000000000000))*(r00)*(x5306)))+(((IkReal(-1.00000000000000))*(x5309)*(x5310)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5317))));
evalcond[4]=((((x5306)*(x5307)))+(((x5314)*(x5322)))+(((IkReal(-1.00000000000000))*(sj13)*(x5309)*(x5311)))+(((IkReal(-1.00000000000000))*(sj13)*(x5317)*(x5321)))+(((IkReal(-1.00000000000000))*(x5318)*(x5319)))+(((sj9)*(x5316))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x5305)*(x5317)))+(((r01)*(sj13)*(x5306)))+(((IkReal(-1.00000000000000))*(x5316)*(x5318)))+(((IkReal(-1.00000000000000))*(sj13)*(x5308)*(x5317)))+(((IkReal(-1.00000000000000))*(x5309)*(x5319)))+(((x5307)*(x5320))));
evalcond[6]=((((cj13)*(r11)*(x5320)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x5306)))+(((IkReal(-1.00000000000000))*(cj13)*(x5308)*(x5317)))+(((IkReal(-1.00000000000000))*(cj13)*(x5305)*(x5317)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5306)*(x5313)))+(((IkReal(-0.374290000000000))*(cj9)*(x5310)))+(((x5304)*(x5321)))+(((IkReal(-1.00000000000000))*(x5304)*(x5314)))+(((sj9)*(x5323)))+(((IkReal(-1.00000000000000))*(py)*(x5318)))+(((px)*(sj9)))+(((x5314)*(x5315)))+(((IkReal(-0.374290000000000))*(r10)*(x5306)))+(((IkReal(0.0100000000000000))*(sj9)*(x5311))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(px)*(x5318)))+(((IkReal(-1.00000000000000))*(cj9)*(x5323)))+(((IkReal(-0.374290000000000))*(r00)*(x5306)))+(((IkReal(-0.374290000000000))*(sj9)*(x5310)))+(((IkReal(-1.00000000000000))*(x5313)*(x5320)))+(((IkReal(-1.00000000000000))*(py)*(x5309)))+(((x5304)*(x5308)))+(((x5304)*(x5305)))+(((IkReal(-0.0100000000000000))*(r01)*(x5306)))+(((IkReal(-1.00000000000000))*(x5305)*(x5315))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5324=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5324))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x5324)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5324)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x5324)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5324)))), ((((IkReal(-1.00000000000000))*(r21)*(x5324)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5325=IKsin(j12);
IkReal x5326=IKcos(j12);
IkReal x5327=((sj14)*(sj9));
IkReal x5328=((IkReal(1.00000000000000))*(sj13));
IkReal x5329=((cj13)*(sj14));
IkReal x5330=((cj9)*(r11));
IkReal x5331=((IkReal(1.00000000000000))*(cj13));
IkReal x5332=((cj9)*(r10));
IkReal x5333=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(x5326)+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x5325)+(((IkReal(-1.00000000000000))*(r22)*(x5328)))+(((IkReal(-1.00000000000000))*(r21)*(x5329))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5325)))+(((IkReal(-1.00000000000000))*(cj14)*(x5330)))+(((IkReal(-1.00000000000000))*(sj14)*(x5332)))+(((r00)*(x5327)))+(((r01)*(x5333))));
evalcond[3]=((x5326)+(((IkReal(-1.00000000000000))*(r01)*(x5327)*(x5331)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5328)))+(((IkReal(-1.00000000000000))*(cj14)*(x5331)*(x5332)))+(((cj13)*(r00)*(x5333)))+(((cj9)*(r12)*(sj13)))+(((x5329)*(x5330))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5334=((IkReal(1.00000000000000))*(sj14));
IkReal x5335=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x5334)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5335)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5335)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5334)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5334))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x5334)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5335)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5335)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5334)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5334)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x5334)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5335)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5335)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5334)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5334)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5336=IKsin(j12);
IkReal x5337=IKcos(j12);
IkReal x5338=((IkReal(1.00000000000000))*(sj13));
IkReal x5339=((cj13)*(r10));
IkReal x5340=((IkReal(1.00000000000000))*(cj10));
IkReal x5341=((cj9)*(sj14));
IkReal x5342=((cj13)*(r01));
IkReal x5343=((IkReal(1.00000000000000))*(r10));
IkReal x5344=((cj9)*(sj13));
IkReal x5345=((cj13)*(sj14));
IkReal x5346=((cj14)*(r01));
IkReal x5347=((cj13)*(cj14));
IkReal x5348=((IkReal(1.00000000000000))*(cj9));
IkReal x5349=((sj14)*(sj9));
IkReal x5350=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5351=((IkReal(1.00000000000000))*(x5336));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5337))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x5345)))+(((IkReal(-1.00000000000000))*(sj10)*(x5351)))+(((r20)*(x5347)))+(((IkReal(-1.00000000000000))*(r22)*(x5338))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5348)))+(((r00)*(x5349)))+(((IkReal(-1.00000000000000))*(x5351)))+(((sj9)*(x5346)))+(((IkReal(-1.00000000000000))*(x5341)*(x5343))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5346)*(x5348)))+(((IkReal(-1.00000000000000))*(r11)*(x5350)))+(((IkReal(-1.00000000000000))*(r00)*(x5341)))+(((IkReal(-1.00000000000000))*(x5343)*(x5349)))+(((IkReal(-1.00000000000000))*(x5337)*(x5340))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5342)*(x5349)))+(((r00)*(sj9)*(x5347)))+(x5337)+(((r12)*(x5344)))+(((cj13)*(r11)*(x5341)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5338)))+(((IkReal(-1.00000000000000))*(cj14)*(x5339)*(x5348))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5336)*(x5340)))+(((IkReal(-1.00000000000000))*(r00)*(x5347)*(x5348)))+(((r11)*(sj9)*(x5345)))+(((IkReal(-1.00000000000000))*(x5339)*(x5350)))+(((x5341)*(x5342)))+(((r02)*(x5344)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5352=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5352)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5352)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5352)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5352)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5352)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5352)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5353=IKsin(j12);
IkReal x5354=IKcos(j12);
IkReal x5355=((IkReal(1.00000000000000))*(sj13));
IkReal x5356=((cj13)*(r10));
IkReal x5357=((IkReal(1.00000000000000))*(cj10));
IkReal x5358=((cj9)*(sj14));
IkReal x5359=((cj13)*(r01));
IkReal x5360=((IkReal(1.00000000000000))*(r10));
IkReal x5361=((cj9)*(sj13));
IkReal x5362=((cj13)*(sj14));
IkReal x5363=((cj14)*(r01));
IkReal x5364=((cj13)*(cj14));
IkReal x5365=((IkReal(1.00000000000000))*(cj9));
IkReal x5366=((sj14)*(sj9));
IkReal x5367=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5368=((IkReal(1.00000000000000))*(x5353));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5354))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x5362)))+(((IkReal(-1.00000000000000))*(sj10)*(x5368)))+(((r20)*(x5364)))+(((IkReal(-1.00000000000000))*(r22)*(x5355))));
evalcond[2]=((((sj9)*(x5363)))+(((IkReal(-1.00000000000000))*(x5358)*(x5360)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5365)))+(((IkReal(-1.00000000000000))*(x5368)))+(((r00)*(x5366))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5360)*(x5366)))+(((IkReal(-1.00000000000000))*(x5354)*(x5357)))+(((IkReal(-1.00000000000000))*(x5363)*(x5365)))+(((IkReal(-1.00000000000000))*(r11)*(x5367)))+(((IkReal(-1.00000000000000))*(r00)*(x5358))));
evalcond[4]=((((r12)*(x5361)))+(((cj13)*(r11)*(x5358)))+(((IkReal(-1.00000000000000))*(cj14)*(x5356)*(x5365)))+(x5354)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5355)))+(((IkReal(-1.00000000000000))*(x5359)*(x5366)))+(((r00)*(sj9)*(x5364))));
evalcond[5]=((((r02)*(x5361)))+(((x5358)*(x5359)))+(((IkReal(-1.00000000000000))*(x5353)*(x5357)))+(((r11)*(sj9)*(x5362)))+(((IkReal(-1.00000000000000))*(x5356)*(x5367)))+(((IkReal(-1.00000000000000))*(r00)*(x5364)*(x5365)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5369=IKsin(j12);
IkReal x5370=IKcos(j12);
IkReal x5371=((IkReal(1.00000000000000))*(sj13));
IkReal x5372=((cj13)*(r10));
IkReal x5373=((IkReal(1.00000000000000))*(cj10));
IkReal x5374=((cj9)*(sj14));
IkReal x5375=((cj13)*(r01));
IkReal x5376=((IkReal(1.00000000000000))*(r10));
IkReal x5377=((cj9)*(sj13));
IkReal x5378=((cj13)*(sj14));
IkReal x5379=((cj14)*(r01));
IkReal x5380=((cj13)*(cj14));
IkReal x5381=((IkReal(1.00000000000000))*(cj9));
IkReal x5382=((sj14)*(sj9));
IkReal x5383=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5384=((IkReal(1.00000000000000))*(x5369));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x5370)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x5384)))+(((IkReal(-1.00000000000000))*(r22)*(x5371)))+(((r20)*(x5380)))+(((IkReal(-1.00000000000000))*(r21)*(x5378))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5381)))+(((r00)*(x5382)))+(((IkReal(-1.00000000000000))*(x5384)))+(((IkReal(-1.00000000000000))*(x5374)*(x5376)))+(((sj9)*(x5379))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5370)*(x5373)))+(((IkReal(-1.00000000000000))*(r00)*(x5374)))+(((IkReal(-1.00000000000000))*(x5376)*(x5382)))+(((IkReal(-1.00000000000000))*(x5379)*(x5381)))+(((IkReal(-1.00000000000000))*(r11)*(x5383))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x5372)*(x5381)))+(x5370)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5371)))+(((r00)*(sj9)*(x5380)))+(((r12)*(x5377)))+(((IkReal(-1.00000000000000))*(x5375)*(x5382)))+(((cj13)*(r11)*(x5374))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x5380)*(x5381)))+(((IkReal(-1.00000000000000))*(x5372)*(x5383)))+(((r02)*(x5377)))+(((r11)*(sj9)*(x5378)))+(((x5374)*(x5375)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x5369)*(x5373))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5385=((cj10)*(sj14));
IkReal x5386=((IkReal(1.00000000000000))*(cj9));
IkReal x5387=((cj10)*(sj9));
if( IKabs(((gconst13)*(((((r02)*(x5387)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5386))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(x5385)*(x5386)))+(((r01)*(sj9)*(x5385)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5387))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst13)*(((((r02)*(x5387)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5386)))))), ((gconst13)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(x5385)*(x5386)))+(((r01)*(sj9)*(x5385)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5387)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x5388=IKsin(j13);
IkReal x5389=IKcos(j13);
IkReal x5390=((r11)*(sj14));
IkReal x5391=((r01)*(sj14));
IkReal x5392=((cj14)*(r00));
IkReal x5393=((cj9)*(x5388));
IkReal x5394=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5395=((sj9)*(x5388));
IkReal x5396=((sj9)*(x5389));
IkReal x5397=((IkReal(1.00000000000000))*(cj9)*(x5389));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5388)))+(((cj14)*(r20)*(x5388)))+(((IkReal(-1.00000000000000))*(cj10)))+(((r22)*(x5389))));
evalcond[1]=((((r02)*(x5396)))+(((IkReal(-1.00000000000000))*(x5391)*(x5395)))+(((x5392)*(x5395)))+(((IkReal(-1.00000000000000))*(x5393)*(x5394)))+(((IkReal(-1.00000000000000))*(r12)*(x5397)))+(((x5390)*(x5393))));
evalcond[2]=((((x5391)*(x5393)))+(((IkReal(-1.00000000000000))*(r12)*(x5396)))+(((IkReal(-1.00000000000000))*(x5394)*(x5395)))+(((IkReal(-1.00000000000000))*(r02)*(x5397)))+(sj10)+(((IkReal(-1.00000000000000))*(x5392)*(x5393)))+(((x5390)*(x5395))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x5398=((IkReal(0.0100000000000000))*(cj14));
IkReal x5399=((r10)*(sj9));
IkReal x5400=((cj9)*(r11));
IkReal x5401=((sj13)*(sj14));
IkReal x5402=((cj14)*(r21));
IkReal x5403=((cj9)*(r00));
IkReal x5404=((IkReal(0.374290000000000))*(cj14));
IkReal x5405=((cj9)*(r01));
IkReal x5406=((r01)*(sj9));
IkReal x5407=((IkReal(0.0100000000000000))*(sj14));
IkReal x5408=((IkReal(1.00000000000000))*(sj13));
IkReal x5409=((r00)*(sj9));
IkReal x5410=((IkReal(0.374290000000000))*(sj14));
IkReal x5411=((cj13)*(sj9));
IkReal x5412=((IkReal(1.00000000000000))*(cj13));
IkReal x5413=((IkReal(1.00000000000000))*(py));
IkReal x5414=((r11)*(sj9));
IkReal x5415=((cj9)*(r10));
IkReal x5416=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x5402)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x5401)))+(((r20)*(x5416)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x5407)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x5398)))+(((r20)*(x5410)))+(((IkReal(0.374290000000000))*(x5402))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x5408)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5412))));
evalcond[5]=((((x5400)*(x5401)))+(((r02)*(x5411)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5412)))+(((IkReal(-1.00000000000000))*(cj14)*(x5408)*(x5415)))+(((IkReal(-1.00000000000000))*(x5401)*(x5406)))+(((x5409)*(x5416))));
evalcond[6]=((((x5401)*(x5405)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x5412)))+(((IkReal(-1.00000000000000))*(r12)*(x5411)))+(((x5401)*(x5414)))+(((IkReal(-1.00000000000000))*(cj14)*(x5403)*(x5408)))+(((IkReal(-1.00000000000000))*(cj14)*(x5399)*(x5408))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x5413)))+(((IkReal(-1.00000000000000))*(x5400)*(x5404)))+(((IkReal(-1.00000000000000))*(x5400)*(x5407)))+(((IkReal(-1.00000000000000))*(x5398)*(x5409)))+(((IkReal(-1.00000000000000))*(x5410)*(x5415)))+(((x5398)*(x5415)))+(((px)*(sj9)))+(((x5404)*(x5406)))+(((x5406)*(x5407)))+(((x5409)*(x5410))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x5399)*(x5410)))+(((IkReal(-1.00000000000000))*(x5404)*(x5414)))+(((IkReal(-1.00000000000000))*(x5403)*(x5410)))+(((IkReal(-1.00000000000000))*(x5407)*(x5414)))+(((IkReal(-1.00000000000000))*(x5404)*(x5405)))+(((IkReal(-1.00000000000000))*(sj9)*(x5413)))+(((x5398)*(x5403)))+(((x5398)*(x5399)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5405)*(x5407))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5417=((r00)*(sj14));
IkReal x5418=((cj14)*(sj9));
IkReal x5419=((IkReal(1.00000000000000))*(r11));
IkReal x5420=((IkReal(1.00000000000000))*(cj9));
IkReal x5421=((r10)*(sj14));
if( IKabs(((((sj9)*(x5417)))+(((r01)*(x5418)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5419)))+(((IkReal(-1.00000000000000))*(x5420)*(x5421))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5417)*(x5420)))+(((IkReal(-1.00000000000000))*(sj9)*(x5421)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5420)))+(((IkReal(-1.00000000000000))*(x5418)*(x5419))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj9)*(x5417)))+(((r01)*(x5418)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5419)))+(((IkReal(-1.00000000000000))*(x5420)*(x5421)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5417)*(x5420)))+(((IkReal(-1.00000000000000))*(sj9)*(x5421)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5420)))+(((IkReal(-1.00000000000000))*(x5418)*(x5419)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((sj9)*(x5417)))+(((r01)*(x5418)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5419)))+(((IkReal(-1.00000000000000))*(x5420)*(x5421)))), ((((IkReal(-1.00000000000000))*(x5417)*(x5420)))+(((IkReal(-1.00000000000000))*(sj9)*(x5421)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5420)))+(((IkReal(-1.00000000000000))*(x5418)*(x5419)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5422=IKcos(j12);
IkReal x5423=((cj9)*(sj14));
IkReal x5424=((IkReal(1.00000000000000))*(r00));
IkReal x5425=((cj14)*(sj9));
IkReal x5426=((IkReal(1.00000000000000))*(r11));
IkReal x5427=((cj13)*(r01));
IkReal x5428=((IkReal(1.00000000000000))*(r10));
IkReal x5429=((cj9)*(sj13));
IkReal x5430=((cj14)*(cj9));
IkReal x5431=((sj14)*(sj9));
IkReal x5432=((sj13)*(sj9));
IkReal x5433=((cj13)*(r11));
IkReal x5434=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5426)*(x5430)))+(((r01)*(x5425)))+(((IkReal(-1.00000000000000))*(x5434)))+(((r00)*(x5431)))+(((IkReal(-1.00000000000000))*(x5423)*(x5428))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5428)*(x5431)))+(((IkReal(-1.00000000000000))*(r01)*(x5430)))+(((IkReal(-1.00000000000000))*(x5425)*(x5426)))+(((IkReal(-1.00000000000000))*(x5422)))+(((IkReal(-1.00000000000000))*(x5423)*(x5424))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5427)*(x5431)))+(((r12)*(x5429)))+(x5422)+(((cj13)*(r00)*(x5425)))+(((IkReal(-1.00000000000000))*(cj13)*(x5428)*(x5430)))+(((IkReal(-1.00000000000000))*(r02)*(x5432)))+(((x5423)*(x5433))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x5424)*(x5430)))+(((IkReal(-1.00000000000000))*(cj13)*(x5425)*(x5428)))+(((r02)*(x5429)))+(((x5423)*(x5427)))+(((IkReal(-1.00000000000000))*(x5434)))+(((x5431)*(x5433)))+(((r12)*(x5432))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5435=((IkReal(0.0100000000000000))*(cj14));
IkReal x5436=((r10)*(sj9));
IkReal x5437=((cj9)*(r11));
IkReal x5438=((sj13)*(sj14));
IkReal x5439=((cj14)*(r21));
IkReal x5440=((cj9)*(r00));
IkReal x5441=((IkReal(0.374290000000000))*(cj14));
IkReal x5442=((cj9)*(r01));
IkReal x5443=((r01)*(sj9));
IkReal x5444=((IkReal(0.0100000000000000))*(sj14));
IkReal x5445=((IkReal(1.00000000000000))*(sj13));
IkReal x5446=((r00)*(sj9));
IkReal x5447=((IkReal(0.374290000000000))*(sj14));
IkReal x5448=((cj13)*(sj9));
IkReal x5449=((IkReal(1.00000000000000))*(cj13));
IkReal x5450=((IkReal(1.00000000000000))*(py));
IkReal x5451=((r11)*(sj9));
IkReal x5452=((cj9)*(r10));
IkReal x5453=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x5439)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x5438)))+(((r20)*(x5453)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x5447)))+(((IkReal(-1.00000000000000))*(r20)*(x5435)))+(pz)+(((IkReal(0.374290000000000))*(x5439)))+(((r21)*(x5444))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5449)))+(((IkReal(-1.00000000000000))*(r22)*(x5445))));
evalcond[5]=((((x5446)*(x5453)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5449)))+(((IkReal(-1.00000000000000))*(x5438)*(x5443)))+(((IkReal(-1.00000000000000))*(cj14)*(x5445)*(x5452)))+(((r02)*(x5448)))+(((x5437)*(x5438))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x5436)*(x5445)))+(((x5438)*(x5451)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x5449)))+(((IkReal(-1.00000000000000))*(r12)*(x5448)))+(((x5438)*(x5442)))+(((IkReal(-1.00000000000000))*(cj14)*(x5440)*(x5445))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5435)*(x5446)))+(((IkReal(-1.00000000000000))*(x5437)*(x5441)))+(((IkReal(-1.00000000000000))*(x5437)*(x5444)))+(((x5441)*(x5443)))+(((IkReal(-1.00000000000000))*(cj9)*(x5450)))+(((x5446)*(x5447)))+(((px)*(sj9)))+(((x5435)*(x5452)))+(((IkReal(-1.00000000000000))*(x5447)*(x5452)))+(((x5443)*(x5444))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x5436)*(x5447)))+(((IkReal(-1.00000000000000))*(x5441)*(x5451)))+(((x5435)*(x5436)))+(((IkReal(-1.00000000000000))*(x5442)*(x5444)))+(((IkReal(-1.00000000000000))*(x5444)*(x5451)))+(((IkReal(-1.00000000000000))*(x5441)*(x5442)))+(((IkReal(-1.00000000000000))*(sj9)*(x5450)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5440)*(x5447)))+(((x5435)*(x5440))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5454=((r00)*(sj14));
IkReal x5455=((cj14)*(r01));
IkReal x5456=((cj14)*(r11));
IkReal x5457=((r10)*(sj14));
IkReal x5458=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((sj9)*(x5455)))+(((sj9)*(x5454)))+(((IkReal(-1.00000000000000))*(x5457)*(x5458)))+(((IkReal(-1.00000000000000))*(x5456)*(x5458))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj9)*(x5457)))+(((sj9)*(x5456)))+(((cj9)*(x5455)))+(((cj9)*(x5454))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj9)*(x5455)))+(((sj9)*(x5454)))+(((IkReal(-1.00000000000000))*(x5457)*(x5458)))+(((IkReal(-1.00000000000000))*(x5456)*(x5458)))))+IKsqr(((((sj9)*(x5457)))+(((sj9)*(x5456)))+(((cj9)*(x5455)))+(((cj9)*(x5454)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((sj9)*(x5455)))+(((sj9)*(x5454)))+(((IkReal(-1.00000000000000))*(x5457)*(x5458)))+(((IkReal(-1.00000000000000))*(x5456)*(x5458)))), ((((sj9)*(x5457)))+(((sj9)*(x5456)))+(((cj9)*(x5455)))+(((cj9)*(x5454)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5459=IKcos(j12);
IkReal x5460=IKsin(j12);
IkReal x5461=((sj13)*(sj9));
IkReal x5462=((sj14)*(sj9));
IkReal x5463=((cj13)*(r11));
IkReal x5464=((cj9)*(sj14));
IkReal x5465=((cj13)*(r10));
IkReal x5466=((cj13)*(r01));
IkReal x5467=((cj13)*(r00));
IkReal x5468=((cj14)*(sj9));
IkReal x5469=((IkReal(1.00000000000000))*(r10));
IkReal x5470=((cj9)*(sj13));
IkReal x5471=((IkReal(1.00000000000000))*(x5468));
IkReal x5472=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5464)*(x5469)))+(((r01)*(x5468)))+(((IkReal(-1.00000000000000))*(r11)*(x5472)))+(((IkReal(-1.00000000000000))*(x5460)))+(((r00)*(x5462))));
evalcond[1]=((x5459)+(((IkReal(-1.00000000000000))*(r11)*(x5471)))+(((IkReal(-1.00000000000000))*(r01)*(x5472)))+(((IkReal(-1.00000000000000))*(r00)*(x5464)))+(((IkReal(-1.00000000000000))*(x5462)*(x5469))));
evalcond[2]=((((x5467)*(x5468)))+(x5459)+(((IkReal(-1.00000000000000))*(x5462)*(x5466)))+(((IkReal(-1.00000000000000))*(r02)*(x5461)))+(((x5463)*(x5464)))+(((r12)*(x5470)))+(((IkReal(-1.00000000000000))*(x5465)*(x5472))));
evalcond[3]=((x5460)+(((IkReal(-1.00000000000000))*(x5467)*(x5472)))+(((r12)*(x5461)))+(((x5462)*(x5463)))+(((IkReal(-1.00000000000000))*(x5465)*(x5471)))+(((r02)*(x5470)))+(((x5464)*(x5466))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5473=((IkReal(0.0100000000000000))*(cj14));
IkReal x5474=((r10)*(sj9));
IkReal x5475=((cj9)*(sj14));
IkReal x5476=((r11)*(sj13));
IkReal x5477=((cj9)*(r00));
IkReal x5478=((IkReal(1.00000000000000))*(sj9));
IkReal x5479=((cj14)*(r11));
IkReal x5480=((r01)*(sj14));
IkReal x5481=((r21)*(sj14));
IkReal x5482=((IkReal(0.0100000000000000))*(r11));
IkReal x5483=((r00)*(sj9));
IkReal x5484=((IkReal(0.374290000000000))*(sj14));
IkReal x5485=((cj13)*(r02));
IkReal x5486=((IkReal(1.00000000000000))*(cj14));
IkReal x5487=((IkReal(1.00000000000000))*(cj9));
IkReal x5488=((cj13)*(r12));
IkReal x5489=((sj14)*(sj9));
IkReal x5490=((cj9)*(r10));
IkReal x5491=((cj14)*(sj13));
IkReal x5492=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x5491)))+(((IkReal(-1.00000000000000))*(sj13)*(x5481)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((r20)*(x5484)))+(((IkReal(0.0100000000000000))*(x5481)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x5473))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5478)*(x5479)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5486)))+(((IkReal(-1.00000000000000))*(r00)*(x5475)))+(((IkReal(-1.00000000000000))*(sj14)*(x5474))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x5486)*(x5490)))+(((x5475)*(x5476)))+(((IkReal(-1.00000000000000))*(x5487)*(x5488)))+(((sj9)*(x5485)))+(((x5483)*(x5491)))+(((IkReal(-1.00000000000000))*(sj13)*(x5478)*(x5480))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x5477)*(x5486)))+(((x5476)*(x5489)))+(((IkReal(-1.00000000000000))*(sj13)*(x5474)*(x5486)))+(((IkReal(-1.00000000000000))*(x5485)*(x5487)))+(((r01)*(sj13)*(x5475)))+(((IkReal(-1.00000000000000))*(x5478)*(x5488))));
evalcond[6]=((((cj13)*(r01)*(x5475)))+(((cj13)*(r11)*(x5489)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x5474)*(x5486)))+(((IkReal(-1.00000000000000))*(cj13)*(x5477)*(x5486)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(0.0100000000000000))*(sj9)*(x5480)))+(((sj9)*(x5492)))+(((x5483)*(x5484)))+(((IkReal(-1.00000000000000))*(x5473)*(x5483)))+(((IkReal(-0.374290000000000))*(cj9)*(x5479)))+(((IkReal(-1.00000000000000))*(x5475)*(x5482)))+(((IkReal(-0.374290000000000))*(r10)*(x5475)))+(((px)*(sj9)))+(((x5473)*(x5490)))+(((IkReal(-1.00000000000000))*(py)*(x5487))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(px)*(x5487)))+(((IkReal(-1.00000000000000))*(py)*(x5478)))+(((x5473)*(x5477)))+(((x5473)*(x5474)))+(((IkReal(-1.00000000000000))*(x5474)*(x5484)))+(((IkReal(-1.00000000000000))*(cj9)*(x5492)))+(((IkReal(-0.0100000000000000))*(r01)*(x5475)))+(((IkReal(-0.374290000000000))*(sj9)*(x5479)))+(((IkReal(-0.374290000000000))*(r00)*(x5475)))+(((IkReal(-1.00000000000000))*(x5482)*(x5489))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5493=IKcos(j12);
IkReal x5494=((sj14)*(sj9));
IkReal x5495=((IkReal(1.00000000000000))*(sj13));
IkReal x5496=((cj13)*(sj14));
IkReal x5497=((cj9)*(r11));
IkReal x5498=((IkReal(1.00000000000000))*(cj13));
IkReal x5499=((cj9)*(r10));
IkReal x5500=((cj14)*(sj9));
IkReal x5501=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x5493))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x5496)))+(((IkReal(-1.00000000000000))*(r22)*(x5495)))+(((IkReal(-1.00000000000000))*(x5501))));
evalcond[2]=((((r00)*(x5494)))+(((IkReal(-1.00000000000000))*(sj14)*(x5499)))+(((IkReal(-1.00000000000000))*(x5501)))+(((r01)*(x5500)))+(((IkReal(-1.00000000000000))*(cj14)*(x5497))));
evalcond[3]=((((cj13)*(r00)*(x5500)))+(((IkReal(-1.00000000000000))*(cj14)*(x5498)*(x5499)))+(((IkReal(-1.00000000000000))*(r01)*(x5494)*(x5498)))+(x5493)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5495)))+(((x5496)*(x5497)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5502=((IkReal(0.0100000000000000))*(cj14));
IkReal x5503=((r10)*(sj9));
IkReal x5504=((cj9)*(sj14));
IkReal x5505=((r11)*(sj13));
IkReal x5506=((cj9)*(r00));
IkReal x5507=((IkReal(1.00000000000000))*(sj9));
IkReal x5508=((cj14)*(r11));
IkReal x5509=((r01)*(sj14));
IkReal x5510=((r21)*(sj14));
IkReal x5511=((IkReal(0.0100000000000000))*(r11));
IkReal x5512=((r00)*(sj9));
IkReal x5513=((IkReal(0.374290000000000))*(sj14));
IkReal x5514=((cj13)*(r02));
IkReal x5515=((IkReal(1.00000000000000))*(cj14));
IkReal x5516=((IkReal(1.00000000000000))*(cj9));
IkReal x5517=((cj13)*(r12));
IkReal x5518=((sj14)*(sj9));
IkReal x5519=((cj9)*(r10));
IkReal x5520=((cj14)*(sj13));
IkReal x5521=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x5510)))+(((r20)*(x5520)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((r20)*(x5513)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x5502)))+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x5510))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5515)))+(((IkReal(-1.00000000000000))*(r00)*(x5504)))+(((IkReal(-1.00000000000000))*(x5507)*(x5508)))+(((IkReal(-1.00000000000000))*(sj14)*(x5503))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x5507)*(x5509)))+(((x5512)*(x5520)))+(((IkReal(-1.00000000000000))*(sj13)*(x5515)*(x5519)))+(((x5504)*(x5505)))+(((sj9)*(x5514)))+(((IkReal(-1.00000000000000))*(x5516)*(x5517))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x5506)*(x5515)))+(((IkReal(-1.00000000000000))*(sj13)*(x5503)*(x5515)))+(((IkReal(-1.00000000000000))*(x5507)*(x5517)))+(((IkReal(-1.00000000000000))*(x5514)*(x5516)))+(((x5505)*(x5518)))+(((r01)*(sj13)*(x5504))));
evalcond[6]=((((cj13)*(r11)*(x5518)))+(((cj13)*(r01)*(x5504)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x5503)*(x5515)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x5506)*(x5515))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(0.0100000000000000))*(sj9)*(x5509)))+(((x5512)*(x5513)))+(((IkReal(-1.00000000000000))*(x5502)*(x5512)))+(((sj9)*(x5521)))+(((IkReal(-0.374290000000000))*(r10)*(x5504)))+(((IkReal(-1.00000000000000))*(py)*(x5516)))+(((x5502)*(x5519)))+(((IkReal(-1.00000000000000))*(x5504)*(x5511)))+(((px)*(sj9)))+(((IkReal(-0.374290000000000))*(cj9)*(x5508))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.0100000000000000))*(r01)*(x5504)))+(((IkReal(-1.00000000000000))*(x5503)*(x5513)))+(((IkReal(-1.00000000000000))*(px)*(x5516)))+(((IkReal(-1.00000000000000))*(x5511)*(x5518)))+(((IkReal(-0.374290000000000))*(r00)*(x5504)))+(((IkReal(-1.00000000000000))*(py)*(x5507)))+(((IkReal(-1.00000000000000))*(cj9)*(x5521)))+(((x5502)*(x5506)))+(((x5502)*(x5503)))+(((IkReal(-0.374290000000000))*(sj9)*(x5508))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5522=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5522)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x5522)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5522)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x5522)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5522)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x5522)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5523=IKsin(j12);
IkReal x5524=IKcos(j12);
IkReal x5525=((sj14)*(sj9));
IkReal x5526=((IkReal(1.00000000000000))*(sj13));
IkReal x5527=((cj13)*(sj14));
IkReal x5528=((cj9)*(r11));
IkReal x5529=((IkReal(1.00000000000000))*(cj13));
IkReal x5530=((cj9)*(r10));
IkReal x5531=((cj14)*(sj9));
evalcond[0]=((x5524)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5526)))+(((cj13)*(cj14)*(r20)))+(x5523)+(((IkReal(-1.00000000000000))*(r21)*(x5527))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x5528)))+(((r00)*(x5525)))+(((r01)*(x5531)))+(((IkReal(-1.00000000000000))*(x5523)))+(((IkReal(-1.00000000000000))*(sj14)*(x5530))));
evalcond[3]=((((x5527)*(x5528)))+(x5524)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5526)))+(((IkReal(-1.00000000000000))*(r01)*(x5525)*(x5529)))+(((cj13)*(r00)*(x5531)))+(((IkReal(-1.00000000000000))*(cj14)*(x5529)*(x5530)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5532=((IkReal(1.00000000000000))*(sj14));
IkReal x5533=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x5532))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5533)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5533)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5532)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5532))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x5532)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5533)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5533)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5532)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5532)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x5532)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5533)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5533)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5532)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5532)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5534=IKsin(j12);
IkReal x5535=IKcos(j12);
IkReal x5536=((IkReal(1.00000000000000))*(sj13));
IkReal x5537=((cj13)*(r10));
IkReal x5538=((IkReal(1.00000000000000))*(cj10));
IkReal x5539=((cj9)*(sj14));
IkReal x5540=((cj13)*(r01));
IkReal x5541=((IkReal(1.00000000000000))*(r10));
IkReal x5542=((cj9)*(sj13));
IkReal x5543=((cj13)*(sj14));
IkReal x5544=((cj14)*(r01));
IkReal x5545=((cj13)*(cj14));
IkReal x5546=((IkReal(1.00000000000000))*(cj9));
IkReal x5547=((sj14)*(sj9));
IkReal x5548=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5549=((IkReal(1.00000000000000))*(x5534));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5535))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5536)))+(((IkReal(-1.00000000000000))*(sj10)*(x5549)))+(((r20)*(x5545)))+(((IkReal(-1.00000000000000))*(r21)*(x5543))));
evalcond[2]=((((r00)*(x5547)))+(((IkReal(-1.00000000000000))*(x5539)*(x5541)))+(((sj9)*(x5544)))+(((IkReal(-1.00000000000000))*(x5549)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5546))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5541)*(x5547)))+(((IkReal(-1.00000000000000))*(x5535)*(x5538)))+(((IkReal(-1.00000000000000))*(x5544)*(x5546)))+(((IkReal(-1.00000000000000))*(r11)*(x5548)))+(((IkReal(-1.00000000000000))*(r00)*(x5539))));
evalcond[4]=((x5535)+(((r12)*(x5542)))+(((r00)*(sj9)*(x5545)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5536)))+(((IkReal(-1.00000000000000))*(cj14)*(x5537)*(x5546)))+(((IkReal(-1.00000000000000))*(x5540)*(x5547)))+(((cj13)*(r11)*(x5539))));
evalcond[5]=((((x5539)*(x5540)))+(((IkReal(-1.00000000000000))*(x5534)*(x5538)))+(((IkReal(-1.00000000000000))*(r00)*(x5545)*(x5546)))+(((IkReal(-1.00000000000000))*(x5537)*(x5548)))+(((r02)*(x5542)))+(((r12)*(sj13)*(sj9)))+(((r11)*(sj9)*(x5543))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5550=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5550)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5550)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5550)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5550)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5550)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x5550)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5551=IKsin(j12);
IkReal x5552=IKcos(j12);
IkReal x5553=((IkReal(1.00000000000000))*(sj13));
IkReal x5554=((cj13)*(r10));
IkReal x5555=((IkReal(1.00000000000000))*(cj10));
IkReal x5556=((cj9)*(sj14));
IkReal x5557=((cj13)*(r01));
IkReal x5558=((IkReal(1.00000000000000))*(r10));
IkReal x5559=((cj9)*(sj13));
IkReal x5560=((cj13)*(sj14));
IkReal x5561=((cj14)*(r01));
IkReal x5562=((cj13)*(cj14));
IkReal x5563=((IkReal(1.00000000000000))*(cj9));
IkReal x5564=((sj14)*(sj9));
IkReal x5565=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5566=((IkReal(1.00000000000000))*(x5551));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5552))));
evalcond[1]=((((r20)*(x5562)))+(((IkReal(-1.00000000000000))*(sj10)*(x5566)))+(((IkReal(-1.00000000000000))*(r21)*(x5560)))+(((IkReal(-1.00000000000000))*(r22)*(x5553))));
evalcond[2]=((((sj9)*(x5561)))+(((IkReal(-1.00000000000000))*(x5556)*(x5558)))+(((IkReal(-1.00000000000000))*(x5566)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5563)))+(((r00)*(x5564))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5552)*(x5555)))+(((IkReal(-1.00000000000000))*(r11)*(x5565)))+(((IkReal(-1.00000000000000))*(x5561)*(x5563)))+(((IkReal(-1.00000000000000))*(x5558)*(x5564)))+(((IkReal(-1.00000000000000))*(r00)*(x5556))));
evalcond[4]=((((cj13)*(r11)*(x5556)))+(x5552)+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5553)))+(((r12)*(x5559)))+(((IkReal(-1.00000000000000))*(cj14)*(x5554)*(x5563)))+(((r00)*(sj9)*(x5562)))+(((IkReal(-1.00000000000000))*(x5557)*(x5564))));
evalcond[5]=((((r11)*(sj9)*(x5560)))+(((IkReal(-1.00000000000000))*(x5554)*(x5565)))+(((IkReal(-1.00000000000000))*(x5551)*(x5555)))+(((r02)*(x5559)))+(((x5556)*(x5557)))+(((IkReal(-1.00000000000000))*(r00)*(x5562)*(x5563)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst17)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst17)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5567=IKsin(j12);
IkReal x5568=IKcos(j12);
IkReal x5569=((IkReal(1.00000000000000))*(sj13));
IkReal x5570=((cj13)*(r10));
IkReal x5571=((IkReal(1.00000000000000))*(cj10));
IkReal x5572=((cj9)*(sj14));
IkReal x5573=((cj13)*(r01));
IkReal x5574=((IkReal(1.00000000000000))*(r10));
IkReal x5575=((cj9)*(sj13));
IkReal x5576=((cj13)*(sj14));
IkReal x5577=((cj14)*(r01));
IkReal x5578=((cj13)*(cj14));
IkReal x5579=((IkReal(1.00000000000000))*(cj9));
IkReal x5580=((sj14)*(sj9));
IkReal x5581=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5582=((IkReal(1.00000000000000))*(x5567));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x5568)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5569)))+(((IkReal(-1.00000000000000))*(r21)*(x5576)))+(((IkReal(-1.00000000000000))*(sj10)*(x5582)))+(((r20)*(x5578))));
evalcond[2]=((((sj9)*(x5577)))+(((IkReal(-1.00000000000000))*(x5572)*(x5574)))+(((IkReal(-1.00000000000000))*(x5582)))+(((r00)*(x5580)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5579))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x5581)))+(((IkReal(-1.00000000000000))*(x5574)*(x5580)))+(((IkReal(-1.00000000000000))*(r00)*(x5572)))+(((IkReal(-1.00000000000000))*(x5568)*(x5571)))+(((IkReal(-1.00000000000000))*(x5577)*(x5579))));
evalcond[4]=((x5568)+(((r12)*(x5575)))+(((IkReal(-1.00000000000000))*(x5573)*(x5580)))+(((r00)*(sj9)*(x5578)))+(((IkReal(-1.00000000000000))*(cj14)*(x5570)*(x5579)))+(((cj13)*(r11)*(x5572)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5569))));
evalcond[5]=((((r02)*(x5575)))+(((IkReal(-1.00000000000000))*(r00)*(x5578)*(x5579)))+(((x5572)*(x5573)))+(((r11)*(sj9)*(x5576)))+(((IkReal(-1.00000000000000))*(x5567)*(x5571)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x5570)*(x5581))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x5583=((IkReal(0.0100000000000000))*(cj14));
IkReal x5584=((r10)*(sj9));
IkReal x5585=((cj9)*(r00));
IkReal x5586=((IkReal(0.0100000000000000))*(sj14));
IkReal x5587=((r00)*(sj9));
IkReal x5588=((IkReal(0.374290000000000))*(sj14));
IkReal x5589=((r01)*(sj9));
IkReal x5590=((IkReal(0.374290000000000))*(cj14));
IkReal x5591=((IkReal(1.00000000000000))*(py));
IkReal x5592=((cj9)*(r10));
IkReal x5593=((r11)*(sj9));
IkReal x5594=((cj9)*(x5590));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x5590)))+(((r21)*(x5586)))+(((IkReal(-1.00000000000000))*(r20)*(x5583)))+(((r20)*(x5588)))+(pz)+(((IkReal(0.364420000000000))*(sj10))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5588)*(x5592)))+(((IkReal(-1.00000000000000))*(r11)*(x5594)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x5586)))+(((x5586)*(x5589)))+(((x5587)*(x5588)))+(((x5583)*(x5592)))+(((IkReal(-1.00000000000000))*(cj9)*(x5591)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x5583)*(x5587)))+(((x5589)*(x5590))));
evalcond[3]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5586)*(x5593)))+(((IkReal(-1.00000000000000))*(x5590)*(x5593)))+(((IkReal(-1.00000000000000))*(x5585)*(x5588)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x5584)*(x5588)))+(((x5583)*(x5584)))+(((x5583)*(x5585)))+(((IkReal(-1.00000000000000))*(r01)*(x5594)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5586)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x5591))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x5595=((cj14)*(cj9));
IkReal x5596=((cj14)*(sj9));
IkReal x5597=((r21)*(sj14));
IkReal x5598=((IkReal(1.00000000000000))*(r22));
gconst26=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((r12)*(r20)*(x5595)))+(((r02)*(sj9)*(x5597)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5598)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5596)))+(((IkReal(-1.00000000000000))*(r10)*(x5595)*(x5598)))+(((r00)*(r22)*(x5596)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5597)))));
IkReal x5599=((cj14)*(cj9));
IkReal x5600=((cj14)*(sj9));
IkReal x5601=((r21)*(sj14));
IkReal x5602=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(r20)*(x5600)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r12)*(r20)*(x5599)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5602)))+(((IkReal(-1.00000000000000))*(r10)*(x5599)*(x5602)))+(((r02)*(sj9)*(x5601)))+(((r00)*(r22)*(x5600)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5601))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst27;
IkReal x5603=((cj14)*(r20));
IkReal x5604=((r12)*(sj9));
IkReal x5605=((r22)*(sj14));
IkReal x5606=((cj9)*(r02));
IkReal x5607=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x5608=((IkReal(1.00000000000000))*(r21)*(sj14));
gconst27=IKsign(((((cj9)*(r01)*(x5605)))+(((r11)*(sj9)*(x5605)))+(((x5603)*(x5606)))+(((x5603)*(x5604)))+(((IkReal(-1.00000000000000))*(x5606)*(x5608)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5607)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5607)))+(((IkReal(-1.00000000000000))*(x5604)*(x5608)))));
IkReal x5609=((cj14)*(r20));
IkReal x5610=((r12)*(sj9));
IkReal x5611=((r22)*(sj14));
IkReal x5612=((cj9)*(r02));
IkReal x5613=((IkReal(1.00000000000000))*(cj14)*(r22));
IkReal x5614=((IkReal(1.00000000000000))*(r21)*(sj14));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x5612)*(x5614)))+(((r11)*(sj9)*(x5611)))+(((x5609)*(x5612)))+(((x5609)*(x5610)))+(((cj9)*(r01)*(x5611)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x5613)))+(((IkReal(-1.00000000000000))*(x5610)*(x5614)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x5613))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x5615=((IkReal(0.0100000000000000))*(cj14));
IkReal x5616=((r10)*(sj9));
IkReal x5617=((cj14)*(r21));
IkReal x5618=((cj9)*(r00));
IkReal x5619=((IkReal(0.0100000000000000))*(sj14));
IkReal x5620=((r00)*(sj9));
IkReal x5621=((IkReal(0.374290000000000))*(sj14));
IkReal x5622=((r01)*(sj9));
IkReal x5623=((IkReal(1.00000000000000))*(py));
IkReal x5624=((cj9)*(r10));
IkReal x5625=((IkReal(0.374290000000000))*(cj14));
IkReal x5626=((r11)*(sj9));
IkReal x5627=((cj9)*(x5625));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x5617)+(((r20)*(sj14))));
evalcond[2]=((((IkReal(0.374290000000000))*(x5617)))+(((r20)*(x5621)))+(((r21)*(x5619)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x5615))));
evalcond[3]=((IkReal(-0.0690000000000000))+(((x5619)*(x5622)))+(((x5615)*(x5624)))+(((x5622)*(x5625)))+(((IkReal(-1.00000000000000))*(r11)*(x5627)))+(((x5620)*(x5621)))+(((IkReal(-1.00000000000000))*(x5615)*(x5620)))+(((IkReal(-1.00000000000000))*(x5621)*(x5624)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x5619)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x5623))));
evalcond[4]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(r01)*(x5627)))+(((IkReal(-1.00000000000000))*(x5618)*(x5621)))+(((IkReal(-1.00000000000000))*(x5619)*(x5626)))+(((x5615)*(x5616)))+(((x5615)*(x5618)))+(((IkReal(-1.00000000000000))*(x5625)*(x5626)))+(((IkReal(-1.00000000000000))*(sj9)*(x5623)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5619)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5616)*(x5621))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5628=((cj14)*(r11));
IkReal x5629=((IkReal(1.00000000000000))*(sj9));
IkReal x5630=((cj14)*(r01));
IkReal x5631=((r00)*(sj14));
IkReal x5632=((r10)*(sj14));
IkReal x5633=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x5629)*(x5631)))+(((IkReal(-1.00000000000000))*(x5629)*(x5630)))+(((cj9)*(x5632)))+(((cj9)*(x5628))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5629)*(x5632)))+(((IkReal(-1.00000000000000))*(x5628)*(x5629)))+(((IkReal(-1.00000000000000))*(x5630)*(x5633)))+(((IkReal(-1.00000000000000))*(x5631)*(x5633))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5629)*(x5631)))+(((IkReal(-1.00000000000000))*(x5629)*(x5630)))+(((cj9)*(x5632)))+(((cj9)*(x5628)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5629)*(x5632)))+(((IkReal(-1.00000000000000))*(x5628)*(x5629)))+(((IkReal(-1.00000000000000))*(x5630)*(x5633)))+(((IkReal(-1.00000000000000))*(x5631)*(x5633)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5629)*(x5631)))+(((IkReal(-1.00000000000000))*(x5629)*(x5630)))+(((cj9)*(x5632)))+(((cj9)*(x5628)))), ((((IkReal(-1.00000000000000))*(x5629)*(x5632)))+(((IkReal(-1.00000000000000))*(x5628)*(x5629)))+(((IkReal(-1.00000000000000))*(x5630)*(x5633)))+(((IkReal(-1.00000000000000))*(x5631)*(x5633)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x5634=((r00)*(sj14));
IkReal x5635=((cj14)*(sj9));
IkReal x5636=((IkReal(1.00000000000000))*(r11));
IkReal x5637=((IkReal(1.00000000000000))*(cj9));
IkReal x5638=((r10)*(sj14));
evalcond[0]=((((r01)*(x5635)))+(IKsin(j12))+(((sj9)*(x5634)))+(((IkReal(-1.00000000000000))*(x5637)*(x5638)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5636))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5635)*(x5636)))+(((IkReal(-1.00000000000000))*(IKcos(j12))))+(((IkReal(-1.00000000000000))*(sj9)*(x5638)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5637)))+(((IkReal(-1.00000000000000))*(x5634)*(x5637))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst33;
gconst33=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
IkReal x5639=((cj14)*(cj9));
IkReal x5640=((cj14)*(sj9));
IkReal x5641=((r21)*(sj14));
IkReal x5642=((IkReal(1.00000000000000))*(r22));
gconst34=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5640)))+(((IkReal(-1.00000000000000))*(r10)*(x5639)*(x5642)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5641)))+(((r00)*(r22)*(x5640)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5642)))+(((r02)*(sj9)*(x5641)))+(((r12)*(r20)*(x5639)))));
IkReal x5643=((cj14)*(cj9));
IkReal x5644=((cj14)*(sj9));
IkReal x5645=((r21)*(sj14));
IkReal x5646=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((cj9)*(r11)*(r22)*(sj14)))+(((IkReal(-1.00000000000000))*(r10)*(x5643)*(x5646)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5644)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5645)))+(((r00)*(r22)*(x5644)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5646)))+(((r02)*(sj9)*(x5645)))+(((r12)*(r20)*(x5643))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5647=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(r12)*(x5647)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5647)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst34)*(((((IkReal(-1.00000000000000))*(r12)*(x5647)))+(((r02)*(sj9)))))), ((gconst34)*(((((cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5647)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5648=IKsin(j13);
IkReal x5649=IKcos(j13);
IkReal x5650=((r11)*(sj14));
IkReal x5651=((IkReal(1.00000000000000))*(r02));
IkReal x5652=((r01)*(sj14));
IkReal x5653=((cj14)*(r00));
IkReal x5654=((IkReal(1.00000000000000))*(r12));
IkReal x5655=((r21)*(sj14));
IkReal x5656=((cj14)*(r20));
IkReal x5657=((cj9)*(x5648));
IkReal x5658=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5659=((sj9)*(x5648));
IkReal x5660=((sj9)*(x5649));
IkReal x5661=((cj9)*(x5649));
IkReal x5662=((IkReal(1.00000000000000))*(x5648));
evalcond[0]=((IkReal(1.00000000000000))+(((x5648)*(x5656)))+(((r22)*(x5649)))+(((IkReal(-1.00000000000000))*(x5655)*(x5662))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5662)))+(((IkReal(-1.00000000000000))*(x5649)*(x5655)))+(((x5649)*(x5656))));
evalcond[2]=((((r02)*(x5660)))+(((x5653)*(x5659)))+(((x5650)*(x5657)))+(((IkReal(-1.00000000000000))*(x5654)*(x5661)))+(((IkReal(-1.00000000000000))*(x5657)*(x5658)))+(((IkReal(-1.00000000000000))*(x5652)*(x5659))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5651)*(x5659)))+(((r12)*(x5657)))+(((IkReal(-1.00000000000000))*(x5652)*(x5660)))+(((x5650)*(x5661)))+(((IkReal(-1.00000000000000))*(cj12)))+(((x5653)*(x5660)))+(((IkReal(-1.00000000000000))*(x5658)*(x5661))));
evalcond[4]=((((x5652)*(x5657)))+(((x5650)*(x5659)))+(((IkReal(-1.00000000000000))*(x5651)*(x5661)))+(((IkReal(-1.00000000000000))*(x5654)*(x5660)))+(((IkReal(-1.00000000000000))*(x5658)*(x5659)))+(((IkReal(-1.00000000000000))*(x5653)*(x5657))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5653)*(x5661)))+(((r12)*(x5659)))+(((IkReal(-1.00000000000000))*(sj12)))+(((x5650)*(x5660)))+(((r02)*(x5657)))+(((x5652)*(x5661)))+(((IkReal(-1.00000000000000))*(x5658)*(x5660))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst33)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst33)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst33)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5663=IKsin(j13);
IkReal x5664=IKcos(j13);
IkReal x5665=((r11)*(sj14));
IkReal x5666=((IkReal(1.00000000000000))*(r02));
IkReal x5667=((r01)*(sj14));
IkReal x5668=((cj14)*(r00));
IkReal x5669=((IkReal(1.00000000000000))*(r12));
IkReal x5670=((r21)*(sj14));
IkReal x5671=((cj14)*(r20));
IkReal x5672=((cj9)*(x5663));
IkReal x5673=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5674=((sj9)*(x5663));
IkReal x5675=((sj9)*(x5664));
IkReal x5676=((cj9)*(x5664));
IkReal x5677=((IkReal(1.00000000000000))*(x5663));
evalcond[0]=((IkReal(1.00000000000000))+(((r22)*(x5664)))+(((IkReal(-1.00000000000000))*(x5670)*(x5677)))+(((x5663)*(x5671))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5664)*(x5670)))+(((IkReal(-1.00000000000000))*(r22)*(x5677)))+(((x5664)*(x5671))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5672)*(x5673)))+(((x5668)*(x5674)))+(((r02)*(x5675)))+(((IkReal(-1.00000000000000))*(x5669)*(x5676)))+(((IkReal(-1.00000000000000))*(x5667)*(x5674)))+(((x5665)*(x5672))));
evalcond[3]=((((x5668)*(x5675)))+(((IkReal(-1.00000000000000))*(x5666)*(x5674)))+(((IkReal(-1.00000000000000))*(x5667)*(x5675)))+(((r12)*(x5672)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x5673)*(x5676)))+(((x5665)*(x5676))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5666)*(x5676)))+(((IkReal(-1.00000000000000))*(x5669)*(x5675)))+(((IkReal(-1.00000000000000))*(x5668)*(x5672)))+(((x5667)*(x5672)))+(((IkReal(-1.00000000000000))*(x5673)*(x5674)))+(((x5665)*(x5674))));
evalcond[5]=((((r02)*(x5672)))+(((IkReal(-1.00000000000000))*(x5668)*(x5676)))+(((IkReal(-1.00000000000000))*(sj12)))+(((x5667)*(x5676)))+(((r12)*(x5674)))+(((IkReal(-1.00000000000000))*(x5673)*(x5675)))+(((x5665)*(x5675))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x5678=((IkReal(0.0100000000000000))*(cj14));
IkReal x5679=((r10)*(sj9));
IkReal x5680=((cj14)*(r21));
IkReal x5681=((cj9)*(r00));
IkReal x5682=((IkReal(0.0100000000000000))*(sj14));
IkReal x5683=((r00)*(sj9));
IkReal x5684=((IkReal(0.374290000000000))*(sj14));
IkReal x5685=((r01)*(sj9));
IkReal x5686=((IkReal(1.00000000000000))*(py));
IkReal x5687=((cj9)*(r10));
IkReal x5688=((IkReal(0.374290000000000))*(cj14));
IkReal x5689=((r11)*(sj9));
IkReal x5690=((cj9)*(x5688));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x5680)+(((r20)*(sj14))));
evalcond[2]=((((IkReal(0.374290000000000))*(x5680)))+(pz)+(((r20)*(x5684)))+(((r21)*(x5682)))+(((IkReal(-1.00000000000000))*(r20)*(x5678))));
evalcond[3]=((IkReal(-0.0690000000000000))+(((x5683)*(x5684)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x5682)))+(((IkReal(-1.00000000000000))*(x5678)*(x5683)))+(((IkReal(-1.00000000000000))*(x5684)*(x5687)))+(((x5685)*(x5688)))+(((x5678)*(x5687)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x5686)))+(((IkReal(-1.00000000000000))*(r11)*(x5690)))+(((x5682)*(x5685))));
evalcond[4]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x5681)*(x5684)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5682)))+(((IkReal(-1.00000000000000))*(x5679)*(x5684)))+(((x5678)*(x5679)))+(((IkReal(-1.00000000000000))*(sj9)*(x5686)))+(((x5678)*(x5681)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x5688)*(x5689)))+(((IkReal(-1.00000000000000))*(x5682)*(x5689)))+(((IkReal(-1.00000000000000))*(r01)*(x5690))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5691=((cj14)*(cj9));
IkReal x5692=((IkReal(1.00000000000000))*(sj9));
IkReal x5693=((r00)*(sj14));
IkReal x5694=((r10)*(sj14));
if( IKabs(((((cj9)*(x5694)))+(((IkReal(-1.00000000000000))*(x5692)*(x5693)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5692)))+(((r11)*(x5691))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj9)*(x5694)))+(((cj14)*(r11)*(sj9)))+(((cj9)*(x5693)))+(((r01)*(x5691))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x5694)))+(((IkReal(-1.00000000000000))*(x5692)*(x5693)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5692)))+(((r11)*(x5691)))))+IKsqr(((((sj9)*(x5694)))+(((cj14)*(r11)*(sj9)))+(((cj9)*(x5693)))+(((r01)*(x5691)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x5694)))+(((IkReal(-1.00000000000000))*(x5692)*(x5693)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5692)))+(((r11)*(x5691)))), ((((sj9)*(x5694)))+(((cj14)*(r11)*(sj9)))+(((cj9)*(x5693)))+(((r01)*(x5691)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[2];
IkReal x5695=((r00)*(sj14));
IkReal x5696=((cj14)*(sj9));
IkReal x5697=((IkReal(1.00000000000000))*(r11));
IkReal x5698=((IkReal(1.00000000000000))*(cj9));
IkReal x5699=((r10)*(sj14));
evalcond[0]=((IKsin(j12))+(((sj9)*(x5695)))+(((IkReal(-1.00000000000000))*(x5698)*(x5699)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5697)))+(((r01)*(x5696))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5696)*(x5697)))+(((IkReal(-1.00000000000000))*(sj9)*(x5699)))+(IKcos(j12))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5698)))+(((IkReal(-1.00000000000000))*(x5695)*(x5698))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst37;
gconst37=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x5700=((r22)*(sj14));
IkReal x5701=((IkReal(1.00000000000000))*(cj9));
IkReal x5702=((cj14)*(sj9));
IkReal x5703=((r21)*(sj14));
gconst38=IKsign(((((r01)*(sj9)*(x5700)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x5701)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x5702)))+(((cj9)*(r12)*(x5703)))+(((cj14)*(cj9)*(r10)*(r22)))+(((r02)*(r20)*(x5702)))+(((IkReal(-1.00000000000000))*(r11)*(x5700)*(x5701)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5703)))));
IkReal x5704=((r22)*(sj14));
IkReal x5705=((IkReal(1.00000000000000))*(cj9));
IkReal x5706=((cj14)*(sj9));
IkReal x5707=((r21)*(sj14));
dummyeval[0]=((((r01)*(sj9)*(x5704)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x5705)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x5706)))+(((cj9)*(r12)*(x5707)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x5704)*(x5705)))+(((r02)*(r20)*(x5706)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5707))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5708=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(r12)*(x5708)))+(((r02)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5708)))+(((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst38)*(((((IkReal(-1.00000000000000))*(r12)*(x5708)))+(((r02)*(sj9)))))), ((gconst38)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x5708)))+(((cj14)*(cj9)*(r10)))+(((r01)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(sj9)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5709=IKsin(j13);
IkReal x5710=IKcos(j13);
IkReal x5711=((r11)*(sj14));
IkReal x5712=((IkReal(1.00000000000000))*(r02));
IkReal x5713=((r01)*(sj14));
IkReal x5714=((cj14)*(r00));
IkReal x5715=((IkReal(1.00000000000000))*(r12));
IkReal x5716=((r21)*(sj14));
IkReal x5717=((cj14)*(r20));
IkReal x5718=((cj9)*(x5709));
IkReal x5719=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5720=((sj9)*(x5709));
IkReal x5721=((sj9)*(x5710));
IkReal x5722=((cj9)*(x5710));
IkReal x5723=((IkReal(1.00000000000000))*(x5709));
evalcond[0]=((IkReal(-1.00000000000000))+(((r22)*(x5710)))+(((IkReal(-1.00000000000000))*(x5716)*(x5723)))+(((x5709)*(x5717))));
evalcond[1]=((((x5710)*(x5717)))+(((IkReal(-1.00000000000000))*(x5710)*(x5716)))+(((IkReal(-1.00000000000000))*(r22)*(x5723))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5713)*(x5720)))+(((IkReal(-1.00000000000000))*(x5718)*(x5719)))+(((x5711)*(x5718)))+(((IkReal(-1.00000000000000))*(x5715)*(x5722)))+(((x5714)*(x5720)))+(((r02)*(x5721))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5712)*(x5720)))+(((IkReal(-1.00000000000000))*(x5713)*(x5721)))+(((IkReal(-1.00000000000000))*(x5719)*(x5722)))+(((x5714)*(x5721)))+(((r12)*(x5718)))+(((x5711)*(x5722)))+(((IkReal(-1.00000000000000))*(cj12))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5712)*(x5722)))+(((IkReal(-1.00000000000000))*(x5719)*(x5720)))+(((IkReal(-1.00000000000000))*(x5715)*(x5721)))+(((IkReal(-1.00000000000000))*(x5714)*(x5718)))+(((x5711)*(x5720)))+(((x5713)*(x5718))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5714)*(x5722)))+(((r02)*(x5718)))+(((r12)*(x5720)))+(((IkReal(-1.00000000000000))*(x5719)*(x5721)))+(sj12)+(((x5713)*(x5722)))+(((x5711)*(x5721))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst37)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst37)*(r22))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst37)*(((((cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)))))), ((gconst37)*(r22)));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5724=IKsin(j13);
IkReal x5725=IKcos(j13);
IkReal x5726=((r11)*(sj14));
IkReal x5727=((IkReal(1.00000000000000))*(r02));
IkReal x5728=((r01)*(sj14));
IkReal x5729=((cj14)*(r00));
IkReal x5730=((IkReal(1.00000000000000))*(r12));
IkReal x5731=((r21)*(sj14));
IkReal x5732=((cj14)*(r20));
IkReal x5733=((cj9)*(x5724));
IkReal x5734=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5735=((sj9)*(x5724));
IkReal x5736=((sj9)*(x5725));
IkReal x5737=((cj9)*(x5725));
IkReal x5738=((IkReal(1.00000000000000))*(x5724));
evalcond[0]=((IkReal(-1.00000000000000))+(((x5724)*(x5732)))+(((IkReal(-1.00000000000000))*(x5731)*(x5738)))+(((r22)*(x5725))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5725)*(x5731)))+(((x5725)*(x5732)))+(((IkReal(-1.00000000000000))*(r22)*(x5738))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5733)*(x5734)))+(((x5729)*(x5735)))+(((IkReal(-1.00000000000000))*(x5730)*(x5737)))+(((r02)*(x5736)))+(((IkReal(-1.00000000000000))*(x5728)*(x5735)))+(((x5726)*(x5733))));
evalcond[3]=((((r12)*(x5733)))+(((IkReal(-1.00000000000000))*(x5734)*(x5737)))+(((IkReal(-1.00000000000000))*(x5727)*(x5735)))+(((x5729)*(x5736)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x5728)*(x5736)))+(((x5726)*(x5737))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5734)*(x5735)))+(((IkReal(-1.00000000000000))*(x5727)*(x5737)))+(((x5728)*(x5733)))+(((IkReal(-1.00000000000000))*(x5730)*(x5736)))+(((IkReal(-1.00000000000000))*(x5729)*(x5733)))+(((x5726)*(x5735))));
evalcond[5]=((((r12)*(x5735)))+(((IkReal(-1.00000000000000))*(x5734)*(x5736)))+(((x5728)*(x5737)))+(sj12)+(((r02)*(x5733)))+(((IkReal(-1.00000000000000))*(x5729)*(x5737)))+(((x5726)*(x5736))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5739=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x5739)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5739))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x5739)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5739)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x5739)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5739)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x5740=IKcos(j12);
IkReal x5741=((r00)*(sj14));
IkReal x5742=((cj14)*(sj9));
IkReal x5743=((IkReal(1.00000000000000))*(r11));
IkReal x5744=((IkReal(1.00000000000000))*(cj9));
IkReal x5745=((r10)*(sj14));
IkReal x5746=((IkReal(1.00000000000000))*(x5740));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5746))));
evalcond[1]=((IKsin(j12))+(((sj9)*(x5741)))+(((r01)*(x5742)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x5743)))+(((IkReal(-1.00000000000000))*(x5744)*(x5745))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj9)*(x5745)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5744)))+(((IkReal(-1.00000000000000))*(x5741)*(x5744)))+(((IkReal(-1.00000000000000))*(x5742)*(x5743)))+(((IkReal(-1.00000000000000))*(cj10)*(x5746))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst28;
gconst28=IKsign(((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((r21)*(r21))*((sj14)*(sj14))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-1.00000000000000))*((cj14)*(cj14))*((r20)*(r20))))+(((IkReal(2.00000000000000))*(cj14)*(r20)*(r21)*(sj14))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst29;
IkReal x5747=((cj14)*(cj9));
IkReal x5748=((cj14)*(sj9));
IkReal x5749=((r21)*(sj14));
IkReal x5750=((IkReal(1.00000000000000))*(r22));
gconst29=IKsign(((((cj9)*(r11)*(r22)*(sj14)))+(((r00)*(r22)*(x5748)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5749)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5750)))+(((IkReal(-1.00000000000000))*(r10)*(x5747)*(x5750)))+(((r12)*(r20)*(x5747)))+(((r02)*(sj9)*(x5749)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5748)))));
IkReal x5751=((cj14)*(cj9));
IkReal x5752=((cj14)*(sj9));
IkReal x5753=((r21)*(sj14));
IkReal x5754=((IkReal(1.00000000000000))*(r22));
dummyeval[0]=((((r12)*(r20)*(x5751)))+(((cj9)*(r11)*(r22)*(sj14)))+(((r00)*(r22)*(x5752)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5753)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(sj9)*(x5754)))+(((IkReal(-1.00000000000000))*(r10)*(x5751)*(x5754)))+(((IkReal(-1.00000000000000))*(r02)*(r20)*(x5752)))+(((r02)*(sj9)*(x5753))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5755=((cj10)*(sj14));
IkReal x5756=((IkReal(1.00000000000000))*(cj9));
IkReal x5757=((cj10)*(sj9));
if( IKabs(((gconst29)*(((((r02)*(x5757)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5756))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5757)))+(((r01)*(sj9)*(x5755)))+(((IkReal(-1.00000000000000))*(r11)*(x5755)*(x5756))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst29)*(((((r02)*(x5757)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5756)))))), ((gconst29)*(((((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5757)))+(((r01)*(sj9)*(x5755)))+(((IkReal(-1.00000000000000))*(r11)*(x5755)*(x5756)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5758=IKsin(j13);
IkReal x5759=IKcos(j13);
IkReal x5760=((r11)*(sj14));
IkReal x5761=((IkReal(1.00000000000000))*(r02));
IkReal x5762=((r01)*(sj14));
IkReal x5763=((IkReal(1.00000000000000))*(sj12));
IkReal x5764=((cj14)*(r00));
IkReal x5765=((IkReal(1.00000000000000))*(r12));
IkReal x5766=((r21)*(sj14));
IkReal x5767=((cj14)*(r20));
IkReal x5768=((cj9)*(x5758));
IkReal x5769=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5770=((sj9)*(x5758));
IkReal x5771=((sj9)*(x5759));
IkReal x5772=((cj9)*(x5759));
IkReal x5773=((IkReal(1.00000000000000))*(x5758));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5766)*(x5773)))+(cj10)+(((x5758)*(x5767)))+(((r22)*(x5759))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5759)*(x5766)))+(((IkReal(-1.00000000000000))*(r22)*(x5773)))+(((x5759)*(x5767)))+(((IkReal(-1.00000000000000))*(sj10)*(x5763))));
evalcond[2]=((((x5764)*(x5770)))+(((IkReal(-1.00000000000000))*(x5762)*(x5770)))+(((r02)*(x5771)))+(((IkReal(-1.00000000000000))*(x5768)*(x5769)))+(((x5760)*(x5768)))+(((IkReal(-1.00000000000000))*(x5765)*(x5772))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5761)*(x5770)))+(((IkReal(-1.00000000000000))*(x5769)*(x5772)))+(((x5764)*(x5771)))+(((IkReal(-1.00000000000000))*(x5762)*(x5771)))+(((IkReal(-1.00000000000000))*(cj12)))+(((x5760)*(x5772)))+(((r12)*(x5768))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5761)*(x5772)))+(((IkReal(-1.00000000000000))*(x5769)*(x5770)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x5764)*(x5768)))+(((x5760)*(x5770)))+(((x5762)*(x5768)))+(((IkReal(-1.00000000000000))*(x5765)*(x5771))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5769)*(x5771)))+(((IkReal(-1.00000000000000))*(x5764)*(x5772)))+(((r02)*(x5768)))+(((r12)*(x5770)))+(((IkReal(-1.00000000000000))*(cj10)*(x5763)))+(((x5760)*(x5771)))+(((x5762)*(x5772))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5774=((r21)*(sj14));
IkReal x5775=((sj10)*(sj12));
IkReal x5776=((cj14)*(r20));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(cj10)*(x5774)))+(((r22)*(x5775)))+(((cj10)*(x5776))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((x5774)*(x5775)))+(((cj10)*(r22)))+(((IkReal(-1.00000000000000))*(x5775)*(x5776))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(cj10)*(x5774)))+(((r22)*(x5775)))+(((cj10)*(x5776)))))), ((gconst28)*(((((x5774)*(x5775)))+(((cj10)*(r22)))+(((IkReal(-1.00000000000000))*(x5775)*(x5776)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x5777=IKsin(j13);
IkReal x5778=IKcos(j13);
IkReal x5779=((r11)*(sj14));
IkReal x5780=((IkReal(1.00000000000000))*(r02));
IkReal x5781=((r01)*(sj14));
IkReal x5782=((IkReal(1.00000000000000))*(sj12));
IkReal x5783=((cj14)*(r00));
IkReal x5784=((IkReal(1.00000000000000))*(r12));
IkReal x5785=((r21)*(sj14));
IkReal x5786=((cj14)*(r20));
IkReal x5787=((cj9)*(x5777));
IkReal x5788=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5789=((sj9)*(x5777));
IkReal x5790=((sj9)*(x5778));
IkReal x5791=((cj9)*(x5778));
IkReal x5792=((IkReal(1.00000000000000))*(x5777));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5785)*(x5792)))+(((r22)*(x5778)))+(cj10)+(((x5777)*(x5786))));
evalcond[1]=((((x5778)*(x5786)))+(((IkReal(-1.00000000000000))*(r22)*(x5792)))+(((IkReal(-1.00000000000000))*(sj10)*(x5782)))+(((IkReal(-1.00000000000000))*(x5778)*(x5785))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5781)*(x5789)))+(((IkReal(-1.00000000000000))*(x5784)*(x5791)))+(((x5783)*(x5789)))+(((x5779)*(x5787)))+(((IkReal(-1.00000000000000))*(x5787)*(x5788)))+(((r02)*(x5790))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5781)*(x5790)))+(((r12)*(x5787)))+(((x5779)*(x5791)))+(((IkReal(-1.00000000000000))*(x5780)*(x5789)))+(((x5783)*(x5790)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x5788)*(x5791))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5784)*(x5790)))+(((IkReal(-1.00000000000000))*(x5783)*(x5787)))+(((x5779)*(x5789)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x5780)*(x5791)))+(((IkReal(-1.00000000000000))*(x5788)*(x5789)))+(((x5781)*(x5787))));
evalcond[5]=((((x5781)*(x5791)))+(((r12)*(x5789)))+(((IkReal(-1.00000000000000))*(cj10)*(x5782)))+(((x5779)*(x5790)))+(((IkReal(-1.00000000000000))*(x5783)*(x5791)))+(((IkReal(-1.00000000000000))*(x5788)*(x5790)))+(((r02)*(x5787))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5793=((cj10)*(cj9));
IkReal x5794=((IkReal(1.00000000000000))*(sj14));
IkReal x5795=((cj10)*(sj9));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(r02)*(x5793)))+(((r22)*(sj10)))+(((IkReal(-1.00000000000000))*(r12)*(x5795))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((cj14)*(r10)*(x5795)))+(((cj14)*(r00)*(x5793)))+(((IkReal(-1.00000000000000))*(r11)*(x5794)*(x5795)))+(((IkReal(-1.00000000000000))*(r01)*(x5793)*(x5794)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(r02)*(x5793)))+(((r22)*(sj10)))+(((IkReal(-1.00000000000000))*(r12)*(x5795)))))), ((gconst27)*(((((cj14)*(r10)*(x5795)))+(((cj14)*(r00)*(x5793)))+(((IkReal(-1.00000000000000))*(r11)*(x5794)*(x5795)))+(((IkReal(-1.00000000000000))*(r01)*(x5793)*(x5794)))+(((IkReal(-1.00000000000000))*(cj14)*(r20)*(sj10)))+(((r21)*(sj10)*(sj14)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x5796=IKsin(j13);
IkReal x5797=IKcos(j13);
IkReal x5798=((r11)*(sj14));
IkReal x5799=((r01)*(sj14));
IkReal x5800=((cj14)*(r00));
IkReal x5801=((cj9)*(x5796));
IkReal x5802=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x5803=((sj9)*(x5796));
IkReal x5804=((sj9)*(x5797));
IkReal x5805=((IkReal(1.00000000000000))*(cj9)*(x5797));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5796)))+(((cj14)*(r20)*(x5796)))+(cj10)+(((r22)*(x5797))));
evalcond[1]=((((x5800)*(x5803)))+(((IkReal(-1.00000000000000))*(r12)*(x5805)))+(((r02)*(x5804)))+(((IkReal(-1.00000000000000))*(x5799)*(x5803)))+(((x5798)*(x5801)))+(((IkReal(-1.00000000000000))*(x5801)*(x5802))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5800)*(x5801)))+(((x5799)*(x5801)))+(((IkReal(-1.00000000000000))*(r12)*(x5804)))+(((IkReal(-1.00000000000000))*(x5802)*(x5803)))+(((IkReal(-1.00000000000000))*(sj10)))+(((x5798)*(x5803)))+(((IkReal(-1.00000000000000))*(r02)*(x5805))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x5806=((IkReal(0.0100000000000000))*(cj14));
IkReal x5807=((r10)*(sj9));
IkReal x5808=((cj9)*(sj14));
IkReal x5809=((r11)*(sj13));
IkReal x5810=((cj9)*(r00));
IkReal x5811=((IkReal(1.00000000000000))*(sj9));
IkReal x5812=((cj14)*(r11));
IkReal x5813=((r01)*(sj14));
IkReal x5814=((r21)*(sj14));
IkReal x5815=((IkReal(0.0100000000000000))*(r11));
IkReal x5816=((r00)*(sj9));
IkReal x5817=((IkReal(0.374290000000000))*(sj14));
IkReal x5818=((cj13)*(r02));
IkReal x5819=((IkReal(1.00000000000000))*(cj14));
IkReal x5820=((IkReal(1.00000000000000))*(cj9));
IkReal x5821=((cj13)*(r12));
IkReal x5822=((sj14)*(sj9));
IkReal x5823=((cj9)*(r10));
IkReal x5824=((cj14)*(sj13));
IkReal x5825=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x5824)))+(((IkReal(-1.00000000000000))*(sj13)*(x5814)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x5806)))+(pz)+(((IkReal(0.0100000000000000))*(x5814)))+(((r20)*(x5817)))+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5811)*(x5812)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5819)))+(((IkReal(-1.00000000000000))*(r00)*(x5808)))+(((IkReal(-1.00000000000000))*(sj14)*(x5807))));
evalcond[4]=((((x5816)*(x5824)))+(((x5808)*(x5809)))+(((IkReal(-1.00000000000000))*(x5820)*(x5821)))+(((IkReal(-1.00000000000000))*(sj13)*(x5811)*(x5813)))+(((IkReal(-1.00000000000000))*(sj13)*(x5819)*(x5823)))+(((sj9)*(x5818))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x5818)*(x5820)))+(((IkReal(-1.00000000000000))*(x5811)*(x5821)))+(((r01)*(sj13)*(x5808)))+(((IkReal(-1.00000000000000))*(sj13)*(x5807)*(x5819)))+(((IkReal(-1.00000000000000))*(sj13)*(x5810)*(x5819)))+(((x5809)*(x5822))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x5810)*(x5819)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x5808)))+(((IkReal(-1.00000000000000))*(cj13)*(x5807)*(x5819)))+(((r12)*(sj13)*(sj9)))+(((cj13)*(r11)*(x5822))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(0.0100000000000000))*(sj9)*(x5813)))+(((IkReal(-0.374290000000000))*(cj9)*(x5812)))+(((x5806)*(x5823)))+(((IkReal(-0.374290000000000))*(r10)*(x5808)))+(((IkReal(-1.00000000000000))*(x5808)*(x5815)))+(((x5816)*(x5817)))+(((IkReal(-1.00000000000000))*(py)*(x5820)))+(((IkReal(-1.00000000000000))*(x5806)*(x5816)))+(((px)*(sj9)))+(((sj9)*(x5825))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x5806)*(x5810)))+(((IkReal(-1.00000000000000))*(cj9)*(x5825)))+(((IkReal(-1.00000000000000))*(px)*(x5820)))+(((IkReal(-0.374290000000000))*(r00)*(x5808)))+(((IkReal(-0.0100000000000000))*(r01)*(x5808)))+(((x5806)*(x5807)))+(((IkReal(-1.00000000000000))*(x5815)*(x5822)))+(((IkReal(-1.00000000000000))*(py)*(x5811)))+(((IkReal(-0.374290000000000))*(sj9)*(x5812)))+(((IkReal(-1.00000000000000))*(x5807)*(x5817))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5826=IKsin(j12);
IkReal x5827=((sj14)*(sj9));
IkReal x5828=((IkReal(1.00000000000000))*(sj13));
IkReal x5829=((cj13)*(sj14));
IkReal x5830=((cj9)*(r11));
IkReal x5831=((IkReal(1.00000000000000))*(cj13));
IkReal x5832=((cj9)*(r10));
IkReal x5833=((cj14)*(sj9));
IkReal x5834=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5834)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5828)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x5829)))+(((IkReal(-1.00000000000000))*(x5826))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x5830)))+(((IkReal(-1.00000000000000))*(sj14)*(x5832)))+(((r00)*(x5827)))+(((r01)*(x5833)))+(x5826));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5834)))+(((x5829)*(x5830)))+(((IkReal(-1.00000000000000))*(r01)*(x5827)*(x5831)))+(((cj13)*(r00)*(x5833)))+(((IkReal(-1.00000000000000))*(cj14)*(x5831)*(x5832)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5828))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5835=((IkReal(0.0100000000000000))*(cj14));
IkReal x5836=((r10)*(sj9));
IkReal x5837=((cj9)*(sj14));
IkReal x5838=((r11)*(sj13));
IkReal x5839=((cj9)*(r00));
IkReal x5840=((IkReal(1.00000000000000))*(sj9));
IkReal x5841=((cj14)*(r11));
IkReal x5842=((r01)*(sj14));
IkReal x5843=((r21)*(sj14));
IkReal x5844=((IkReal(0.0100000000000000))*(r11));
IkReal x5845=((r00)*(sj9));
IkReal x5846=((IkReal(0.374290000000000))*(sj14));
IkReal x5847=((cj13)*(r02));
IkReal x5848=((IkReal(1.00000000000000))*(cj14));
IkReal x5849=((IkReal(1.00000000000000))*(cj9));
IkReal x5850=((cj13)*(r12));
IkReal x5851=((sj14)*(sj9));
IkReal x5852=((cj9)*(r10));
IkReal x5853=((cj14)*(sj13));
IkReal x5854=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((cj13)*(r22)))+(((r20)*(x5853)))+(((IkReal(-1.00000000000000))*(sj13)*(x5843))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x5835)))+(((r20)*(x5846)))+(((IkReal(0.0100000000000000))*(x5843)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x5837)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5848)))+(((IkReal(-1.00000000000000))*(sj14)*(x5836)))+(((IkReal(-1.00000000000000))*(x5840)*(x5841))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x5848)*(x5852)))+(((x5837)*(x5838)))+(((IkReal(-1.00000000000000))*(x5849)*(x5850)))+(((x5845)*(x5853)))+(((IkReal(-1.00000000000000))*(sj13)*(x5840)*(x5842)))+(((sj9)*(x5847))));
evalcond[5]=((IkReal(1.00000000000000))+(((x5838)*(x5851)))+(((IkReal(-1.00000000000000))*(x5847)*(x5849)))+(((IkReal(-1.00000000000000))*(sj13)*(x5839)*(x5848)))+(((r01)*(sj13)*(x5837)))+(((IkReal(-1.00000000000000))*(x5840)*(x5850)))+(((IkReal(-1.00000000000000))*(sj13)*(x5836)*(x5848))));
evalcond[6]=((((cj13)*(r11)*(x5851)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x5836)*(x5848)))+(((cj13)*(r01)*(x5837)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x5839)*(x5848))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x5837)*(x5844)))+(((x5845)*(x5846)))+(((x5835)*(x5852)))+(((IkReal(-1.00000000000000))*(py)*(x5849)))+(((sj9)*(x5854)))+(((IkReal(-0.374290000000000))*(r10)*(x5837)))+(((px)*(sj9)))+(((IkReal(0.0100000000000000))*(sj9)*(x5842)))+(((IkReal(-0.374290000000000))*(cj9)*(x5841)))+(((IkReal(-1.00000000000000))*(x5835)*(x5845))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x5835)*(x5836)))+(((x5835)*(x5839)))+(((IkReal(-0.374290000000000))*(sj9)*(x5841)))+(((IkReal(-1.00000000000000))*(x5844)*(x5851)))+(((IkReal(-1.00000000000000))*(cj9)*(x5854)))+(((IkReal(-0.0100000000000000))*(r01)*(x5837)))+(((IkReal(-1.00000000000000))*(py)*(x5840)))+(((IkReal(-0.374290000000000))*(r00)*(x5837)))+(((IkReal(-1.00000000000000))*(x5836)*(x5846)))+(((IkReal(-1.00000000000000))*(px)*(x5849))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5855=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5855))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x5855)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5855)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x5855)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x5855)))), ((((IkReal(-1.00000000000000))*(r21)*(x5855)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5856=IKsin(j12);
IkReal x5857=IKcos(j12);
IkReal x5858=((sj14)*(sj9));
IkReal x5859=((IkReal(1.00000000000000))*(sj13));
IkReal x5860=((cj13)*(sj14));
IkReal x5861=((cj9)*(r11));
IkReal x5862=((IkReal(1.00000000000000))*(cj13));
IkReal x5863=((cj9)*(r10));
IkReal x5864=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x5857));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x5860)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x5859)))+(x5856));
evalcond[2]=((((r00)*(x5858)))+(((IkReal(-1.00000000000000))*(sj14)*(x5863)))+(((IkReal(-1.00000000000000))*(cj14)*(x5861)))+(x5856)+(((r01)*(x5864))));
evalcond[3]=((((x5860)*(x5861)))+(((IkReal(-1.00000000000000))*(x5857)))+(((IkReal(-1.00000000000000))*(r01)*(x5858)*(x5862)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5859)))+(((IkReal(-1.00000000000000))*(cj14)*(x5862)*(x5863)))+(((cj13)*(r00)*(x5864))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5865=((IkReal(0.0100000000000000))*(cj14));
IkReal x5866=((r10)*(sj9));
IkReal x5867=((cj9)*(r11));
IkReal x5868=((sj13)*(sj14));
IkReal x5869=((cj14)*(r21));
IkReal x5870=((cj9)*(r00));
IkReal x5871=((IkReal(0.374290000000000))*(cj14));
IkReal x5872=((cj9)*(r01));
IkReal x5873=((r01)*(sj9));
IkReal x5874=((IkReal(0.0100000000000000))*(sj14));
IkReal x5875=((IkReal(1.00000000000000))*(sj13));
IkReal x5876=((r00)*(sj9));
IkReal x5877=((IkReal(0.374290000000000))*(sj14));
IkReal x5878=((cj13)*(sj9));
IkReal x5879=((IkReal(1.00000000000000))*(cj13));
IkReal x5880=((IkReal(1.00000000000000))*(py));
IkReal x5881=((r11)*(sj9));
IkReal x5882=((cj9)*(r10));
IkReal x5883=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x5869));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x5868)))+(((r20)*(x5883)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(0.374290000000000))*(x5869)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x5865)))+(((r20)*(x5877)))+(((r21)*(x5874))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x5875)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5879))));
evalcond[5]=((((x5867)*(x5868)))+(((IkReal(-1.00000000000000))*(cj14)*(x5875)*(x5882)))+(((r02)*(x5878)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5879)))+(((IkReal(-1.00000000000000))*(x5868)*(x5873)))+(((x5876)*(x5883))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x5878)))+(((x5868)*(x5881)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x5879)))+(((x5868)*(x5872)))+(((IkReal(-1.00000000000000))*(cj14)*(x5866)*(x5875)))+(((IkReal(-1.00000000000000))*(cj14)*(x5870)*(x5875))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x5880)))+(((x5865)*(x5882)))+(((x5873)*(x5874)))+(((x5871)*(x5873)))+(((IkReal(-1.00000000000000))*(x5865)*(x5876)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x5877)*(x5882)))+(((IkReal(-1.00000000000000))*(x5867)*(x5874)))+(((IkReal(-1.00000000000000))*(x5867)*(x5871)))+(((x5876)*(x5877))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x5866)*(x5877)))+(((IkReal(-1.00000000000000))*(x5872)*(x5874)))+(((IkReal(-1.00000000000000))*(x5870)*(x5877)))+(((IkReal(-1.00000000000000))*(sj9)*(x5880)))+(((IkReal(-1.00000000000000))*(x5871)*(x5872)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((x5865)*(x5866)))+(((IkReal(-1.00000000000000))*(x5871)*(x5881)))+(((x5865)*(x5870)))+(((IkReal(-1.00000000000000))*(x5874)*(x5881))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5884=((cj14)*(r11));
IkReal x5885=((IkReal(1.00000000000000))*(sj9));
IkReal x5886=((cj14)*(r01));
IkReal x5887=((r00)*(sj14));
IkReal x5888=((r10)*(sj14));
IkReal x5889=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x5885)*(x5886)))+(((IkReal(-1.00000000000000))*(x5885)*(x5887)))+(((cj9)*(x5884)))+(((cj9)*(x5888))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5887)*(x5889)))+(((IkReal(-1.00000000000000))*(x5886)*(x5889)))+(((IkReal(-1.00000000000000))*(x5885)*(x5888)))+(((IkReal(-1.00000000000000))*(x5884)*(x5885))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5885)*(x5886)))+(((IkReal(-1.00000000000000))*(x5885)*(x5887)))+(((cj9)*(x5884)))+(((cj9)*(x5888)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5887)*(x5889)))+(((IkReal(-1.00000000000000))*(x5886)*(x5889)))+(((IkReal(-1.00000000000000))*(x5885)*(x5888)))+(((IkReal(-1.00000000000000))*(x5884)*(x5885)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5885)*(x5886)))+(((IkReal(-1.00000000000000))*(x5885)*(x5887)))+(((cj9)*(x5884)))+(((cj9)*(x5888)))), ((((IkReal(-1.00000000000000))*(x5887)*(x5889)))+(((IkReal(-1.00000000000000))*(x5886)*(x5889)))+(((IkReal(-1.00000000000000))*(x5885)*(x5888)))+(((IkReal(-1.00000000000000))*(x5884)*(x5885)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5890=IKsin(j12);
IkReal x5891=((cj13)*(r10));
IkReal x5892=((cj9)*(sj14));
IkReal x5893=((cj13)*(r01));
IkReal x5894=((IkReal(1.00000000000000))*(r10));
IkReal x5895=((cj14)*(r01));
IkReal x5896=((cj9)*(sj13));
IkReal x5897=((IkReal(1.00000000000000))*(cj9));
IkReal x5898=((sj14)*(sj9));
IkReal x5899=((sj13)*(sj9));
IkReal x5900=((cj13)*(r11));
IkReal x5901=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x5902=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5903=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5892)*(x5894)))+(((r00)*(x5898)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5897)))+(x5890)+(((sj9)*(x5895))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x5902)))+(((IkReal(-1.00000000000000))*(r00)*(x5892)))+(((IkReal(-1.00000000000000))*(x5894)*(x5898)))+(((IkReal(-1.00000000000000))*(x5895)*(x5897)))+(((IkReal(-1.00000000000000))*(x5901))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x5891)*(x5897)))+(((x5892)*(x5900)))+(((sj9)*(x5903)))+(((r12)*(x5896)))+(((IkReal(-1.00000000000000))*(x5893)*(x5898)))+(((IkReal(-1.00000000000000))*(r02)*(x5899)))+(((IkReal(-1.00000000000000))*(x5901))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5890)))+(((IkReal(-1.00000000000000))*(x5897)*(x5903)))+(((x5898)*(x5900)))+(((r02)*(x5896)))+(((IkReal(-1.00000000000000))*(x5891)*(x5902)))+(((r12)*(x5899)))+(((x5892)*(x5893))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5904=((IkReal(0.0100000000000000))*(cj14));
IkReal x5905=((r10)*(sj9));
IkReal x5906=((cj9)*(r11));
IkReal x5907=((sj13)*(sj14));
IkReal x5908=((cj14)*(r21));
IkReal x5909=((cj9)*(r00));
IkReal x5910=((IkReal(0.374290000000000))*(cj14));
IkReal x5911=((cj9)*(r01));
IkReal x5912=((r01)*(sj9));
IkReal x5913=((IkReal(0.0100000000000000))*(sj14));
IkReal x5914=((IkReal(1.00000000000000))*(sj13));
IkReal x5915=((r00)*(sj9));
IkReal x5916=((IkReal(0.374290000000000))*(sj14));
IkReal x5917=((cj13)*(sj9));
IkReal x5918=((IkReal(1.00000000000000))*(cj13));
IkReal x5919=((IkReal(1.00000000000000))*(py));
IkReal x5920=((r11)*(sj9));
IkReal x5921=((cj9)*(r10));
IkReal x5922=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x5908));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x5922)))+(((IkReal(-1.00000000000000))*(r21)*(x5907)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x5904)))+(((r20)*(x5916)))+(((IkReal(0.374290000000000))*(x5908)))+(pz)+(((r21)*(x5913))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x5914)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5918))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x5914)*(x5921)))+(((IkReal(-1.00000000000000))*(x5907)*(x5912)))+(((r02)*(x5917)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x5918)))+(((x5906)*(x5907)))+(((x5915)*(x5922))));
evalcond[6]=((((x5907)*(x5920)))+(((IkReal(-1.00000000000000))*(cj14)*(x5909)*(x5914)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x5918)))+(((IkReal(-1.00000000000000))*(r12)*(x5917)))+(((x5907)*(x5911)))+(((IkReal(-1.00000000000000))*(cj14)*(x5905)*(x5914))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x5904)*(x5921)))+(((IkReal(-1.00000000000000))*(x5904)*(x5915)))+(((x5915)*(x5916)))+(((IkReal(-1.00000000000000))*(x5916)*(x5921)))+(((x5910)*(x5912)))+(((x5912)*(x5913)))+(((IkReal(-1.00000000000000))*(cj9)*(x5919)))+(((IkReal(-1.00000000000000))*(x5906)*(x5913)))+(((IkReal(-1.00000000000000))*(x5906)*(x5910)))+(((px)*(sj9))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x5910)*(x5920)))+(((IkReal(-1.00000000000000))*(x5913)*(x5920)))+(((IkReal(-1.00000000000000))*(x5905)*(x5916)))+(((IkReal(-1.00000000000000))*(x5910)*(x5911)))+(((IkReal(-1.00000000000000))*(x5909)*(x5916)))+(((IkReal(-1.00000000000000))*(sj9)*(x5919)))+(((x5904)*(x5905)))+(((x5904)*(x5909)))+(((IkReal(-1.00000000000000))*(x5911)*(x5913)))+(((IkReal(-1.00000000000000))*(cj9)*(px))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5923=((cj14)*(cj9));
IkReal x5924=((IkReal(1.00000000000000))*(sj9));
IkReal x5925=((r00)*(sj14));
IkReal x5926=((r10)*(sj14));
if( IKabs(((((cj9)*(x5926)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5924)))+(((r11)*(x5923)))+(((IkReal(-1.00000000000000))*(x5924)*(x5925))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x5925)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x5926)))+(((r01)*(x5923))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x5926)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5924)))+(((r11)*(x5923)))+(((IkReal(-1.00000000000000))*(x5924)*(x5925)))))+IKsqr(((((cj9)*(x5925)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x5926)))+(((r01)*(x5923)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x5926)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5924)))+(((r11)*(x5923)))+(((IkReal(-1.00000000000000))*(x5924)*(x5925)))), ((((cj9)*(x5925)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x5926)))+(((r01)*(x5923)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x5927=IKcos(j12);
IkReal x5928=IKsin(j12);
IkReal x5929=((r12)*(sj13));
IkReal x5930=((sj14)*(sj9));
IkReal x5931=((cj13)*(r11));
IkReal x5932=((cj9)*(sj14));
IkReal x5933=((IkReal(1.00000000000000))*(cj14));
IkReal x5934=((cj13)*(cj9));
IkReal x5935=((cj13)*(r01));
IkReal x5936=((cj14)*(sj9));
IkReal x5937=((IkReal(1.00000000000000))*(r10));
IkReal x5938=((r02)*(sj13));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5932)*(x5937)))+(((r01)*(x5936)))+(((r00)*(x5930)))+(x5928)+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x5933))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x5933)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x5933)))+(((IkReal(-1.00000000000000))*(r00)*(x5932)))+(((IkReal(-1.00000000000000))*(x5930)*(x5937)))+(x5927));
evalcond[2]=((((cj9)*(x5929)))+(((IkReal(-1.00000000000000))*(x5927)))+(((IkReal(-1.00000000000000))*(r10)*(x5933)*(x5934)))+(((IkReal(-1.00000000000000))*(x5930)*(x5935)))+(((x5931)*(x5932)))+(((cj13)*(r00)*(x5936)))+(((IkReal(-1.00000000000000))*(sj9)*(x5938))));
evalcond[3]=((((x5932)*(x5935)))+(((sj9)*(x5929)))+(((x5930)*(x5931)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x5933)))+(((IkReal(-1.00000000000000))*(r00)*(x5933)*(x5934)))+(x5928)+(((cj9)*(x5938))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5939=((cj14)*(r11));
IkReal x5940=((IkReal(1.00000000000000))*(sj9));
IkReal x5941=((cj14)*(r01));
IkReal x5942=((r00)*(sj14));
IkReal x5943=((r10)*(sj14));
IkReal x5944=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x5940)*(x5942)))+(((IkReal(-1.00000000000000))*(x5940)*(x5941)))+(((cj9)*(x5943)))+(((cj9)*(x5939))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x5942)*(x5944)))+(((IkReal(-1.00000000000000))*(x5941)*(x5944)))+(((IkReal(-1.00000000000000))*(x5940)*(x5943)))+(((IkReal(-1.00000000000000))*(x5939)*(x5940))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5940)*(x5942)))+(((IkReal(-1.00000000000000))*(x5940)*(x5941)))+(((cj9)*(x5943)))+(((cj9)*(x5939)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x5942)*(x5944)))+(((IkReal(-1.00000000000000))*(x5941)*(x5944)))+(((IkReal(-1.00000000000000))*(x5940)*(x5943)))+(((IkReal(-1.00000000000000))*(x5939)*(x5940)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5940)*(x5942)))+(((IkReal(-1.00000000000000))*(x5940)*(x5941)))+(((cj9)*(x5943)))+(((cj9)*(x5939)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x5942)*(x5944)))+(((IkReal(-1.00000000000000))*(x5941)*(x5944)))+(((IkReal(-1.00000000000000))*(x5940)*(x5943)))+(((IkReal(-1.00000000000000))*(x5939)*(x5940)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5945=IKsin(j12);
IkReal x5946=IKcos(j12);
IkReal x5947=((IkReal(1.00000000000000))*(sj13));
IkReal x5948=((cj13)*(r10));
IkReal x5949=((cj9)*(sj14));
IkReal x5950=((cj13)*(r01));
IkReal x5951=((IkReal(1.00000000000000))*(r10));
IkReal x5952=((r12)*(sj13));
IkReal x5953=((cj13)*(sj14));
IkReal x5954=((cj14)*(r01));
IkReal x5955=((cj13)*(cj14));
IkReal x5956=((IkReal(1.00000000000000))*(cj9));
IkReal x5957=((sj14)*(sj9));
IkReal x5958=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5959=((IkReal(1.00000000000000))*(x5946));
IkReal x5960=((IkReal(1.00000000000000))*(x5945));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x5959)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5947)))+(((r20)*(x5955)))+(((IkReal(-1.00000000000000))*(sj10)*(x5960)))+(((IkReal(-1.00000000000000))*(r21)*(x5953))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5949)*(x5951)))+(((sj9)*(x5954)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5956)))+(x5945)+(((r00)*(x5957))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x5959)))+(((IkReal(-1.00000000000000))*(x5951)*(x5957)))+(((IkReal(-1.00000000000000))*(x5954)*(x5956)))+(((IkReal(-1.00000000000000))*(r11)*(x5958)))+(((IkReal(-1.00000000000000))*(r00)*(x5949))));
evalcond[4]=((((r00)*(sj9)*(x5955)))+(((cj13)*(r11)*(x5949)))+(((cj9)*(x5952)))+(((IkReal(-1.00000000000000))*(cj14)*(x5948)*(x5956)))+(((IkReal(-1.00000000000000))*(x5959)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5947)))+(((IkReal(-1.00000000000000))*(x5950)*(x5957))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x5955)*(x5956)))+(((cj9)*(r02)*(sj13)))+(((x5949)*(x5950)))+(((IkReal(-1.00000000000000))*(cj10)*(x5960)))+(((IkReal(-1.00000000000000))*(x5948)*(x5958)))+(((r11)*(sj9)*(x5953)))+(((sj9)*(x5952))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x5961=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x5961)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5961))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x5961)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5961)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x5961)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x5961)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5962=IKsin(j12);
IkReal x5963=IKcos(j12);
IkReal x5964=((IkReal(1.00000000000000))*(sj13));
IkReal x5965=((cj13)*(r10));
IkReal x5966=((cj9)*(sj14));
IkReal x5967=((cj13)*(r01));
IkReal x5968=((IkReal(1.00000000000000))*(r10));
IkReal x5969=((r12)*(sj13));
IkReal x5970=((cj13)*(sj14));
IkReal x5971=((cj14)*(r01));
IkReal x5972=((cj13)*(cj14));
IkReal x5973=((IkReal(1.00000000000000))*(cj9));
IkReal x5974=((sj14)*(sj9));
IkReal x5975=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5976=((IkReal(1.00000000000000))*(x5963));
IkReal x5977=((IkReal(1.00000000000000))*(x5962));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5976))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x5964)))+(((IkReal(-1.00000000000000))*(r21)*(x5970)))+(((r20)*(x5972)))+(((IkReal(-1.00000000000000))*(sj10)*(x5977))));
evalcond[2]=((((r00)*(x5974)))+(((sj9)*(x5971)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5973)))+(((IkReal(-1.00000000000000))*(x5966)*(x5968)))+(x5962));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x5976)))+(((IkReal(-1.00000000000000))*(r11)*(x5975)))+(((IkReal(-1.00000000000000))*(x5971)*(x5973)))+(((IkReal(-1.00000000000000))*(r00)*(x5966)))+(((IkReal(-1.00000000000000))*(x5968)*(x5974))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5964)))+(((IkReal(-1.00000000000000))*(x5976)))+(((cj13)*(r11)*(x5966)))+(((r00)*(sj9)*(x5972)))+(((IkReal(-1.00000000000000))*(x5967)*(x5974)))+(((cj9)*(x5969)))+(((IkReal(-1.00000000000000))*(cj14)*(x5965)*(x5973))));
evalcond[5]=((((sj9)*(x5969)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj10)*(x5977)))+(((r11)*(sj9)*(x5970)))+(((x5966)*(x5967)))+(((IkReal(-1.00000000000000))*(r00)*(x5972)*(x5973)))+(((IkReal(-1.00000000000000))*(x5965)*(x5975))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x5978=IKsin(j12);
IkReal x5979=IKcos(j12);
IkReal x5980=((IkReal(1.00000000000000))*(sj13));
IkReal x5981=((cj13)*(r10));
IkReal x5982=((cj9)*(sj14));
IkReal x5983=((cj13)*(r01));
IkReal x5984=((IkReal(1.00000000000000))*(r10));
IkReal x5985=((r12)*(sj13));
IkReal x5986=((cj13)*(sj14));
IkReal x5987=((cj14)*(r01));
IkReal x5988=((cj13)*(cj14));
IkReal x5989=((IkReal(1.00000000000000))*(cj9));
IkReal x5990=((sj14)*(sj9));
IkReal x5991=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x5992=((IkReal(1.00000000000000))*(x5979));
IkReal x5993=((IkReal(1.00000000000000))*(x5978));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x5992))));
evalcond[1]=((((r20)*(x5988)))+(((IkReal(-1.00000000000000))*(r21)*(x5986)))+(((IkReal(-1.00000000000000))*(sj10)*(x5993)))+(((IkReal(-1.00000000000000))*(r22)*(x5980))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x5989)))+(((sj9)*(x5987)))+(x5978)+(((IkReal(-1.00000000000000))*(x5982)*(x5984)))+(((r00)*(x5990))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x5991)))+(((IkReal(-1.00000000000000))*(x5984)*(x5990)))+(((IkReal(-1.00000000000000))*(x5987)*(x5989)))+(((IkReal(-1.00000000000000))*(r00)*(x5982)))+(((IkReal(-1.00000000000000))*(cj10)*(x5992))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x5980)))+(((cj9)*(x5985)))+(((r00)*(sj9)*(x5988)))+(((IkReal(-1.00000000000000))*(x5983)*(x5990)))+(((cj13)*(r11)*(x5982)))+(((IkReal(-1.00000000000000))*(cj14)*(x5981)*(x5989)))+(((IkReal(-1.00000000000000))*(x5992))));
evalcond[5]=((((r11)*(sj9)*(x5986)))+(((x5982)*(x5983)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x5988)*(x5989)))+(((IkReal(-1.00000000000000))*(cj10)*(x5993)))+(((IkReal(-1.00000000000000))*(x5981)*(x5991)))+(((sj9)*(x5985))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x5994=((cj10)*(sj14));
IkReal x5995=((IkReal(1.00000000000000))*(cj9));
IkReal x5996=((cj10)*(sj9));
if( IKabs(((gconst26)*(((((r02)*(x5996)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5995))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5996)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(x5994)*(x5995)))+(((r01)*(sj9)*(x5994))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst26)*(((((r02)*(x5996)))+(((IkReal(-1.00000000000000))*(cj10)*(r12)*(x5995)))))), ((gconst26)*(((((IkReal(-1.00000000000000))*(cj14)*(r00)*(x5996)))+(((cj10)*(cj14)*(cj9)*(r10)))+(((IkReal(-1.00000000000000))*(r11)*(x5994)*(x5995)))+(((r01)*(sj9)*(x5994)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x5997=IKsin(j13);
IkReal x5998=IKcos(j13);
IkReal x5999=((r11)*(sj14));
IkReal x6000=((r01)*(sj14));
IkReal x6001=((cj14)*(r00));
IkReal x6002=((cj9)*(x5997));
IkReal x6003=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x6004=((sj9)*(x5997));
IkReal x6005=((sj9)*(x5998));
IkReal x6006=((IkReal(1.00000000000000))*(cj9)*(x5998));
evalcond[0]=((((cj14)*(r20)*(x5997)))+(cj10)+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x5997)))+(((r22)*(x5998))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x6000)*(x6004)))+(((IkReal(-1.00000000000000))*(r12)*(x6006)))+(((x6001)*(x6004)))+(((r02)*(x6005)))+(((x5999)*(x6002)))+(((IkReal(-1.00000000000000))*(x6002)*(x6003))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6001)*(x6002)))+(((IkReal(-1.00000000000000))*(r12)*(x6005)))+(((IkReal(-1.00000000000000))*(sj10)))+(((x6000)*(x6002)))+(((IkReal(-1.00000000000000))*(x6003)*(x6004)))+(((x5999)*(x6004)))+(((IkReal(-1.00000000000000))*(r02)*(x6006))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x6007=((IkReal(0.0100000000000000))*(cj14));
IkReal x6008=((r10)*(sj9));
IkReal x6009=((cj9)*(sj14));
IkReal x6010=((r11)*(sj13));
IkReal x6011=((cj9)*(r00));
IkReal x6012=((IkReal(1.00000000000000))*(sj9));
IkReal x6013=((cj14)*(r11));
IkReal x6014=((r01)*(sj14));
IkReal x6015=((r21)*(sj14));
IkReal x6016=((IkReal(0.0100000000000000))*(r11));
IkReal x6017=((r00)*(sj9));
IkReal x6018=((IkReal(0.374290000000000))*(sj14));
IkReal x6019=((cj13)*(r02));
IkReal x6020=((IkReal(1.00000000000000))*(cj14));
IkReal x6021=((IkReal(1.00000000000000))*(cj9));
IkReal x6022=((cj13)*(r12));
IkReal x6023=((sj14)*(sj9));
IkReal x6024=((cj9)*(r10));
IkReal x6025=((cj14)*(sj13));
IkReal x6026=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x6015)))+(((cj13)*(r22)))+(((r20)*(x6025))));
evalcond[2]=((IkReal(0.364420000000000))+(((r20)*(x6018)))+(((IkReal(0.0100000000000000))*(x6015)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x6007))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6020)))+(((IkReal(-1.00000000000000))*(r00)*(x6009)))+(((IkReal(-1.00000000000000))*(x6012)*(x6013)))+(((IkReal(-1.00000000000000))*(sj14)*(x6008))));
evalcond[4]=((((sj9)*(x6019)))+(((IkReal(-1.00000000000000))*(x6021)*(x6022)))+(((x6009)*(x6010)))+(((x6017)*(x6025)))+(((IkReal(-1.00000000000000))*(sj13)*(x6020)*(x6024)))+(((IkReal(-1.00000000000000))*(sj13)*(x6012)*(x6014))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(sj13)*(x6009)))+(((x6010)*(x6023)))+(((IkReal(-1.00000000000000))*(sj13)*(x6008)*(x6020)))+(((IkReal(-1.00000000000000))*(x6019)*(x6021)))+(((IkReal(-1.00000000000000))*(sj13)*(x6011)*(x6020)))+(((IkReal(-1.00000000000000))*(x6012)*(x6022))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x6008)*(x6020)))+(((cj13)*(r01)*(x6009)))+(((IkReal(-1.00000000000000))*(cj13)*(x6011)*(x6020)))+(((r12)*(sj13)*(sj9)))+(((cj13)*(r11)*(x6023))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x6017)*(x6018)))+(((x6007)*(x6024)))+(((IkReal(-0.374290000000000))*(r10)*(x6009)))+(((sj9)*(x6026)))+(((IkReal(-1.00000000000000))*(py)*(x6021)))+(((IkReal(-1.00000000000000))*(x6009)*(x6016)))+(((IkReal(-0.374290000000000))*(cj9)*(x6013)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x6007)*(x6017)))+(((IkReal(0.0100000000000000))*(sj9)*(x6014))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x6008)*(x6018)))+(((IkReal(-0.374290000000000))*(r00)*(x6009)))+(((IkReal(-1.00000000000000))*(cj9)*(x6026)))+(((IkReal(-1.00000000000000))*(x6016)*(x6023)))+(((IkReal(-0.0100000000000000))*(r01)*(x6009)))+(((x6007)*(x6008)))+(((x6007)*(x6011)))+(((IkReal(-0.374290000000000))*(sj9)*(x6013)))+(((IkReal(-1.00000000000000))*(py)*(x6012)))+(((IkReal(-1.00000000000000))*(px)*(x6021))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6027=IKsin(j12);
IkReal x6028=((sj14)*(sj9));
IkReal x6029=((IkReal(1.00000000000000))*(sj13));
IkReal x6030=((cj13)*(sj14));
IkReal x6031=((cj9)*(r11));
IkReal x6032=((IkReal(1.00000000000000))*(cj13));
IkReal x6033=((cj9)*(r10));
IkReal x6034=((cj14)*(sj9));
IkReal x6035=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x6035)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6029)))+(((IkReal(-1.00000000000000))*(x6027)))+(((IkReal(-1.00000000000000))*(r21)*(x6030))));
evalcond[2]=((x6027)+(((r00)*(x6028)))+(((IkReal(-1.00000000000000))*(cj14)*(x6031)))+(((IkReal(-1.00000000000000))*(sj14)*(x6033)))+(((r01)*(x6034))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6035)))+(((IkReal(-1.00000000000000))*(cj14)*(x6032)*(x6033)))+(((cj13)*(r00)*(x6034)))+(((IkReal(-1.00000000000000))*(r01)*(x6028)*(x6032)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6029)))+(((x6030)*(x6031))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6036=((IkReal(0.0100000000000000))*(cj14));
IkReal x6037=((r10)*(sj9));
IkReal x6038=((cj9)*(sj14));
IkReal x6039=((r11)*(sj13));
IkReal x6040=((cj9)*(r00));
IkReal x6041=((IkReal(1.00000000000000))*(sj9));
IkReal x6042=((cj14)*(r11));
IkReal x6043=((r01)*(sj14));
IkReal x6044=((r21)*(sj14));
IkReal x6045=((IkReal(0.0100000000000000))*(r11));
IkReal x6046=((r00)*(sj9));
IkReal x6047=((IkReal(0.374290000000000))*(sj14));
IkReal x6048=((cj13)*(r02));
IkReal x6049=((IkReal(1.00000000000000))*(cj14));
IkReal x6050=((IkReal(1.00000000000000))*(cj9));
IkReal x6051=((cj13)*(r12));
IkReal x6052=((sj14)*(sj9));
IkReal x6053=((cj9)*(r10));
IkReal x6054=((cj14)*(sj13));
IkReal x6055=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x6054)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(sj13)*(x6044))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(0.0100000000000000))*(x6044)))+(((r20)*(x6047)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(x6036))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6049)))+(((IkReal(-1.00000000000000))*(r00)*(x6038)))+(((IkReal(-1.00000000000000))*(sj14)*(x6037)))+(((IkReal(-1.00000000000000))*(x6041)*(x6042))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x6041)*(x6043)))+(((IkReal(-1.00000000000000))*(x6050)*(x6051)))+(((IkReal(-1.00000000000000))*(sj13)*(x6049)*(x6053)))+(((x6038)*(x6039)))+(((sj9)*(x6048)))+(((x6046)*(x6054))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(sj13)*(x6038)))+(((IkReal(-1.00000000000000))*(sj13)*(x6040)*(x6049)))+(((IkReal(-1.00000000000000))*(sj13)*(x6037)*(x6049)))+(((IkReal(-1.00000000000000))*(x6048)*(x6050)))+(((IkReal(-1.00000000000000))*(x6041)*(x6051)))+(((x6039)*(x6052))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x6037)*(x6049)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x6052)))+(((cj13)*(r01)*(x6038)))+(((IkReal(-1.00000000000000))*(cj13)*(x6040)*(x6049)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x6036)*(x6053)))+(((x6046)*(x6047)))+(((IkReal(-0.374290000000000))*(r10)*(x6038)))+(((IkReal(-0.374290000000000))*(cj9)*(x6042)))+(((IkReal(0.0100000000000000))*(sj9)*(x6043)))+(((IkReal(-1.00000000000000))*(x6036)*(x6046)))+(((IkReal(-1.00000000000000))*(x6038)*(x6045)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x6050)))+(((sj9)*(x6055))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x6036)*(x6040)))+(((IkReal(-0.374290000000000))*(r00)*(x6038)))+(((IkReal(-1.00000000000000))*(cj9)*(x6055)))+(((IkReal(-0.0100000000000000))*(r01)*(x6038)))+(((IkReal(-1.00000000000000))*(x6037)*(x6047)))+(((IkReal(-1.00000000000000))*(x6045)*(x6052)))+(((IkReal(-0.374290000000000))*(sj9)*(x6042)))+(((IkReal(-1.00000000000000))*(py)*(x6041)))+(((x6036)*(x6037)))+(((IkReal(-1.00000000000000))*(px)*(x6050))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6056=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6056)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x6056)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6056)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x6056)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6056)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x6056)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6057=IKsin(j12);
IkReal x6058=IKcos(j12);
IkReal x6059=((sj14)*(sj9));
IkReal x6060=((IkReal(1.00000000000000))*(sj13));
IkReal x6061=((cj13)*(sj14));
IkReal x6062=((cj9)*(r11));
IkReal x6063=((IkReal(1.00000000000000))*(cj13));
IkReal x6064=((cj9)*(r10));
IkReal x6065=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(x6058)+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6060)))+(x6057)+(((IkReal(-1.00000000000000))*(r21)*(x6061))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x6064)))+(((r00)*(x6059)))+(x6057)+(((r01)*(x6065)))+(((IkReal(-1.00000000000000))*(cj14)*(x6062))));
evalcond[3]=((((cj13)*(r00)*(x6065)))+(((x6061)*(x6062)))+(((IkReal(-1.00000000000000))*(x6058)))+(((IkReal(-1.00000000000000))*(r01)*(x6059)*(x6063)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6060)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(cj14)*(x6063)*(x6064))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6066=((IkReal(0.0100000000000000))*(cj14));
IkReal x6067=((r10)*(sj9));
IkReal x6068=((cj9)*(r11));
IkReal x6069=((sj13)*(sj14));
IkReal x6070=((cj14)*(r21));
IkReal x6071=((cj9)*(r00));
IkReal x6072=((IkReal(0.374290000000000))*(cj14));
IkReal x6073=((cj9)*(r01));
IkReal x6074=((r01)*(sj9));
IkReal x6075=((IkReal(0.0100000000000000))*(sj14));
IkReal x6076=((IkReal(1.00000000000000))*(sj13));
IkReal x6077=((r00)*(sj9));
IkReal x6078=((IkReal(0.374290000000000))*(sj14));
IkReal x6079=((cj13)*(sj9));
IkReal x6080=((IkReal(1.00000000000000))*(cj13));
IkReal x6081=((IkReal(1.00000000000000))*(py));
IkReal x6082=((r11)*(sj9));
IkReal x6083=((cj9)*(r10));
IkReal x6084=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((x6070)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x6069)))+(((r20)*(x6084)))+(((cj13)*(r22))));
evalcond[3]=((pz)+(((IkReal(-1.00000000000000))*(r20)*(x6066)))+(((r20)*(x6078)))+(((r21)*(x6075)))+(((IkReal(0.374290000000000))*(x6070))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6076)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6080))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x6069)*(x6074)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x6080)))+(((IkReal(-1.00000000000000))*(cj14)*(x6076)*(x6083)))+(((x6077)*(x6084)))+(((r02)*(x6079)))+(((x6068)*(x6069))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x6067)*(x6076)))+(((x6069)*(x6082)))+(((IkReal(-1.00000000000000))*(cj14)*(x6071)*(x6076)))+(((x6069)*(x6073)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x6080)))+(((IkReal(-1.00000000000000))*(r12)*(x6079))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x6066)*(x6077)))+(((x6066)*(x6083)))+(((IkReal(-1.00000000000000))*(cj9)*(x6081)))+(((x6074)*(x6075)))+(((IkReal(-1.00000000000000))*(x6078)*(x6083)))+(((IkReal(-1.00000000000000))*(x6068)*(x6075)))+(((IkReal(-1.00000000000000))*(x6068)*(x6072)))+(((px)*(sj9)))+(((x6072)*(x6074)))+(((x6077)*(x6078))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x6067)*(x6078)))+(((IkReal(-1.00000000000000))*(sj9)*(x6081)))+(((x6066)*(x6067)))+(((IkReal(-1.00000000000000))*(x6072)*(x6073)))+(((IkReal(-1.00000000000000))*(x6075)*(x6082)))+(((IkReal(-1.00000000000000))*(x6073)*(x6075)))+(((x6066)*(x6071)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x6072)*(x6082)))+(((IkReal(-1.00000000000000))*(x6071)*(x6078))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6085=((cj14)*(r11));
IkReal x6086=((IkReal(1.00000000000000))*(sj9));
IkReal x6087=((cj14)*(r01));
IkReal x6088=((r00)*(sj14));
IkReal x6089=((r10)*(sj14));
IkReal x6090=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x6089)))+(((cj9)*(x6085)))+(((IkReal(-1.00000000000000))*(x6086)*(x6087)))+(((IkReal(-1.00000000000000))*(x6086)*(x6088))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x6085)*(x6086)))+(((IkReal(-1.00000000000000))*(x6087)*(x6090)))+(((IkReal(-1.00000000000000))*(x6086)*(x6089)))+(((IkReal(-1.00000000000000))*(x6088)*(x6090))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x6089)))+(((cj9)*(x6085)))+(((IkReal(-1.00000000000000))*(x6086)*(x6087)))+(((IkReal(-1.00000000000000))*(x6086)*(x6088)))))+IKsqr(((((IkReal(-1.00000000000000))*(x6085)*(x6086)))+(((IkReal(-1.00000000000000))*(x6087)*(x6090)))+(((IkReal(-1.00000000000000))*(x6086)*(x6089)))+(((IkReal(-1.00000000000000))*(x6088)*(x6090)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x6089)))+(((cj9)*(x6085)))+(((IkReal(-1.00000000000000))*(x6086)*(x6087)))+(((IkReal(-1.00000000000000))*(x6086)*(x6088)))), ((((IkReal(-1.00000000000000))*(x6085)*(x6086)))+(((IkReal(-1.00000000000000))*(x6087)*(x6090)))+(((IkReal(-1.00000000000000))*(x6086)*(x6089)))+(((IkReal(-1.00000000000000))*(x6088)*(x6090)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6091=IKsin(j12);
IkReal x6092=((cj13)*(r10));
IkReal x6093=((cj9)*(sj14));
IkReal x6094=((cj13)*(r01));
IkReal x6095=((IkReal(1.00000000000000))*(r10));
IkReal x6096=((cj14)*(r01));
IkReal x6097=((cj9)*(sj13));
IkReal x6098=((IkReal(1.00000000000000))*(cj9));
IkReal x6099=((sj14)*(sj9));
IkReal x6100=((sj13)*(sj9));
IkReal x6101=((cj13)*(r11));
IkReal x6102=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x6103=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6104=((cj13)*(cj14)*(r00));
evalcond[0]=((x6091)+(((IkReal(-1.00000000000000))*(x6093)*(x6095)))+(((r00)*(x6099)))+(((sj9)*(x6096)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6098))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x6093)))+(((IkReal(-1.00000000000000))*(x6095)*(x6099)))+(((IkReal(-1.00000000000000))*(x6096)*(x6098)))+(((IkReal(-1.00000000000000))*(r11)*(x6103)))+(((IkReal(-1.00000000000000))*(x6102))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6094)*(x6099)))+(((sj9)*(x6104)))+(((IkReal(-1.00000000000000))*(x6102)))+(((r12)*(x6097)))+(((x6093)*(x6101)))+(((IkReal(-1.00000000000000))*(r02)*(x6100)))+(((IkReal(-1.00000000000000))*(cj14)*(x6092)*(x6098))));
evalcond[3]=((((x6093)*(x6094)))+(((IkReal(-1.00000000000000))*(x6092)*(x6103)))+(((IkReal(-1.00000000000000))*(x6098)*(x6104)))+(((x6099)*(x6101)))+(((IkReal(-1.00000000000000))*(x6091)))+(((r02)*(x6097)))+(((r12)*(x6100))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6105=((IkReal(0.0100000000000000))*(cj14));
IkReal x6106=((r10)*(sj9));
IkReal x6107=((cj9)*(r11));
IkReal x6108=((sj13)*(sj14));
IkReal x6109=((cj14)*(r21));
IkReal x6110=((cj9)*(r00));
IkReal x6111=((IkReal(0.374290000000000))*(cj14));
IkReal x6112=((cj9)*(r01));
IkReal x6113=((r01)*(sj9));
IkReal x6114=((IkReal(0.0100000000000000))*(sj14));
IkReal x6115=((IkReal(1.00000000000000))*(sj13));
IkReal x6116=((r00)*(sj9));
IkReal x6117=((IkReal(0.374290000000000))*(sj14));
IkReal x6118=((cj13)*(sj9));
IkReal x6119=((IkReal(1.00000000000000))*(cj13));
IkReal x6120=((IkReal(1.00000000000000))*(py));
IkReal x6121=((r11)*(sj9));
IkReal x6122=((cj9)*(r10));
IkReal x6123=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((x6109)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x6108)))+(((r20)*(x6123)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x6117)))+(((IkReal(-1.00000000000000))*(r20)*(x6105)))+(pz)+(((r21)*(x6114)))+(((IkReal(0.374290000000000))*(x6109))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6115)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6119))));
evalcond[5]=((((r02)*(x6118)))+(((x6116)*(x6123)))+(((x6107)*(x6108)))+(((IkReal(-1.00000000000000))*(cj14)*(x6115)*(x6122)))+(((IkReal(-1.00000000000000))*(x6108)*(x6113)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x6119))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x6106)*(x6115)))+(((x6108)*(x6121)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x6119)))+(((IkReal(-1.00000000000000))*(cj14)*(x6110)*(x6115)))+(((x6108)*(x6112)))+(((IkReal(-1.00000000000000))*(r12)*(x6118))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x6113)*(x6114)))+(((IkReal(-1.00000000000000))*(cj9)*(x6120)))+(((IkReal(-1.00000000000000))*(x6117)*(x6122)))+(((x6105)*(x6122)))+(((x6116)*(x6117)))+(((IkReal(-1.00000000000000))*(x6107)*(x6111)))+(((IkReal(-1.00000000000000))*(x6107)*(x6114)))+(((IkReal(-1.00000000000000))*(x6105)*(x6116)))+(((x6111)*(x6113)))+(((px)*(sj9))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x6112)*(x6114)))+(((IkReal(-1.00000000000000))*(x6106)*(x6117)))+(((IkReal(-1.00000000000000))*(x6111)*(x6112)))+(((x6105)*(x6110)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x6120)))+(((IkReal(-1.00000000000000))*(x6114)*(x6121)))+(((IkReal(-1.00000000000000))*(x6110)*(x6117)))+(((IkReal(-1.00000000000000))*(x6111)*(x6121)))+(((x6105)*(x6106))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6124=((cj14)*(cj9));
IkReal x6125=((IkReal(1.00000000000000))*(sj9));
IkReal x6126=((r00)*(sj14));
IkReal x6127=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(x6125)*(x6126)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6125)))+(((r11)*(x6124)))+(((cj9)*(x6127))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x6124)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x6127)))+(((cj9)*(x6126))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x6125)*(x6126)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6125)))+(((r11)*(x6124)))+(((cj9)*(x6127)))))+IKsqr(((((r01)*(x6124)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x6127)))+(((cj9)*(x6126)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x6125)*(x6126)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6125)))+(((r11)*(x6124)))+(((cj9)*(x6127)))), ((((r01)*(x6124)))+(((cj14)*(r11)*(sj9)))+(((sj9)*(x6127)))+(((cj9)*(x6126)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6128=IKcos(j12);
IkReal x6129=IKsin(j12);
IkReal x6130=((r12)*(sj13));
IkReal x6131=((sj14)*(sj9));
IkReal x6132=((cj13)*(r11));
IkReal x6133=((cj9)*(sj14));
IkReal x6134=((IkReal(1.00000000000000))*(cj14));
IkReal x6135=((cj13)*(cj9));
IkReal x6136=((cj13)*(r01));
IkReal x6137=((cj14)*(sj9));
IkReal x6138=((IkReal(1.00000000000000))*(r10));
IkReal x6139=((r02)*(sj13));
evalcond[0]=((x6129)+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x6134)))+(((IkReal(-1.00000000000000))*(x6133)*(x6138)))+(((r01)*(x6137)))+(((r00)*(x6131))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6134)))+(((IkReal(-1.00000000000000))*(x6131)*(x6138)))+(x6128)+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6134)))+(((IkReal(-1.00000000000000))*(r00)*(x6133))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x6134)*(x6135)))+(((cj13)*(r00)*(x6137)))+(((IkReal(-1.00000000000000))*(sj9)*(x6139)))+(((cj9)*(x6130)))+(((x6132)*(x6133)))+(((IkReal(-1.00000000000000))*(x6128)))+(((IkReal(-1.00000000000000))*(x6131)*(x6136))));
evalcond[3]=((((x6131)*(x6132)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x6134)))+(x6129)+(((sj9)*(x6130)))+(((x6133)*(x6136)))+(((cj9)*(x6139)))+(((IkReal(-1.00000000000000))*(r00)*(x6134)*(x6135))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6140=((cj14)*(r11));
IkReal x6141=((IkReal(1.00000000000000))*(sj9));
IkReal x6142=((cj14)*(r01));
IkReal x6143=((r00)*(sj14));
IkReal x6144=((r10)*(sj14));
IkReal x6145=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x6140)))+(((cj9)*(x6144)))+(((IkReal(-1.00000000000000))*(x6141)*(x6143)))+(((IkReal(-1.00000000000000))*(x6141)*(x6142))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x6142)*(x6145)))+(((IkReal(-1.00000000000000))*(x6143)*(x6145)))+(((IkReal(-1.00000000000000))*(x6140)*(x6141)))+(((IkReal(-1.00000000000000))*(x6141)*(x6144))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x6140)))+(((cj9)*(x6144)))+(((IkReal(-1.00000000000000))*(x6141)*(x6143)))+(((IkReal(-1.00000000000000))*(x6141)*(x6142)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x6142)*(x6145)))+(((IkReal(-1.00000000000000))*(x6143)*(x6145)))+(((IkReal(-1.00000000000000))*(x6140)*(x6141)))+(((IkReal(-1.00000000000000))*(x6141)*(x6144)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x6140)))+(((cj9)*(x6144)))+(((IkReal(-1.00000000000000))*(x6141)*(x6143)))+(((IkReal(-1.00000000000000))*(x6141)*(x6142)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x6142)*(x6145)))+(((IkReal(-1.00000000000000))*(x6143)*(x6145)))+(((IkReal(-1.00000000000000))*(x6140)*(x6141)))+(((IkReal(-1.00000000000000))*(x6141)*(x6144)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6146=IKsin(j12);
IkReal x6147=IKcos(j12);
IkReal x6148=((IkReal(1.00000000000000))*(sj13));
IkReal x6149=((cj13)*(r10));
IkReal x6150=((cj9)*(sj14));
IkReal x6151=((cj13)*(r01));
IkReal x6152=((IkReal(1.00000000000000))*(r10));
IkReal x6153=((r12)*(sj13));
IkReal x6154=((cj13)*(sj14));
IkReal x6155=((cj14)*(r01));
IkReal x6156=((cj13)*(cj14));
IkReal x6157=((IkReal(1.00000000000000))*(cj9));
IkReal x6158=((sj14)*(sj9));
IkReal x6159=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6160=((IkReal(1.00000000000000))*(x6147));
IkReal x6161=((IkReal(1.00000000000000))*(x6146));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x6160)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x6154)))+(((IkReal(-1.00000000000000))*(sj10)*(x6161)))+(((r20)*(x6156)))+(((IkReal(-1.00000000000000))*(r22)*(x6148))));
evalcond[2]=((((r00)*(x6158)))+(((IkReal(-1.00000000000000))*(x6150)*(x6152)))+(x6146)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6157)))+(((sj9)*(x6155))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x6150)))+(((IkReal(-1.00000000000000))*(x6152)*(x6158)))+(((IkReal(-1.00000000000000))*(cj10)*(x6160)))+(((IkReal(-1.00000000000000))*(x6155)*(x6157)))+(((IkReal(-1.00000000000000))*(r11)*(x6159))));
evalcond[4]=((((cj13)*(r11)*(x6150)))+(((IkReal(-1.00000000000000))*(x6160)))+(((IkReal(-1.00000000000000))*(cj14)*(x6149)*(x6157)))+(((r00)*(sj9)*(x6156)))+(((IkReal(-1.00000000000000))*(x6151)*(x6158)))+(((cj9)*(x6153)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6148))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj10)*(x6161)))+(((sj9)*(x6153)))+(((IkReal(-1.00000000000000))*(x6149)*(x6159)))+(((x6150)*(x6151)))+(((r11)*(sj9)*(x6154)))+(((IkReal(-1.00000000000000))*(r00)*(x6156)*(x6157))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6162=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x6162)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6162))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x6162)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6162)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x6162)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6162)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6163=IKsin(j12);
IkReal x6164=IKcos(j12);
IkReal x6165=((IkReal(1.00000000000000))*(sj13));
IkReal x6166=((cj13)*(r10));
IkReal x6167=((cj9)*(sj14));
IkReal x6168=((cj13)*(r01));
IkReal x6169=((IkReal(1.00000000000000))*(r10));
IkReal x6170=((r12)*(sj13));
IkReal x6171=((cj13)*(sj14));
IkReal x6172=((cj14)*(r01));
IkReal x6173=((cj13)*(cj14));
IkReal x6174=((IkReal(1.00000000000000))*(cj9));
IkReal x6175=((sj14)*(sj9));
IkReal x6176=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6177=((IkReal(1.00000000000000))*(x6164));
IkReal x6178=((IkReal(1.00000000000000))*(x6163));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x6177)))+(((r20)*(sj14))));
evalcond[1]=((((r20)*(x6173)))+(((IkReal(-1.00000000000000))*(sj10)*(x6178)))+(((IkReal(-1.00000000000000))*(r22)*(x6165)))+(((IkReal(-1.00000000000000))*(r21)*(x6171))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6167)*(x6169)))+(x6163)+(((r00)*(x6175)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6174)))+(((sj9)*(x6172))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x6176)))+(((IkReal(-1.00000000000000))*(cj10)*(x6177)))+(((IkReal(-1.00000000000000))*(r00)*(x6167)))+(((IkReal(-1.00000000000000))*(x6172)*(x6174)))+(((IkReal(-1.00000000000000))*(x6169)*(x6175))));
evalcond[4]=((((cj13)*(r11)*(x6167)))+(((IkReal(-1.00000000000000))*(cj14)*(x6166)*(x6174)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6165)))+(((IkReal(-1.00000000000000))*(x6177)))+(((r00)*(sj9)*(x6173)))+(((cj9)*(x6170)))+(((IkReal(-1.00000000000000))*(x6168)*(x6175))));
evalcond[5]=((((x6167)*(x6168)))+(((IkReal(-1.00000000000000))*(x6166)*(x6176)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x6171)))+(((IkReal(-1.00000000000000))*(r00)*(x6173)*(x6174)))+(((IkReal(-1.00000000000000))*(cj10)*(x6178)))+(((sj9)*(x6170))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst30)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst30)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6179=IKsin(j12);
IkReal x6180=IKcos(j12);
IkReal x6181=((IkReal(1.00000000000000))*(sj13));
IkReal x6182=((cj13)*(r10));
IkReal x6183=((cj9)*(sj14));
IkReal x6184=((cj13)*(r01));
IkReal x6185=((IkReal(1.00000000000000))*(r10));
IkReal x6186=((r12)*(sj13));
IkReal x6187=((cj13)*(sj14));
IkReal x6188=((cj14)*(r01));
IkReal x6189=((cj13)*(cj14));
IkReal x6190=((IkReal(1.00000000000000))*(cj9));
IkReal x6191=((sj14)*(sj9));
IkReal x6192=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6193=((IkReal(1.00000000000000))*(x6180));
IkReal x6194=((IkReal(1.00000000000000))*(x6179));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x6193))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x6181)))+(((IkReal(-1.00000000000000))*(r21)*(x6187)))+(((IkReal(-1.00000000000000))*(sj10)*(x6194)))+(((r20)*(x6189))));
evalcond[2]=((x6179)+(((sj9)*(x6188)))+(((IkReal(-1.00000000000000))*(x6183)*(x6185)))+(((r00)*(x6191)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6190))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x6192)))+(((IkReal(-1.00000000000000))*(cj10)*(x6193)))+(((IkReal(-1.00000000000000))*(r00)*(x6183)))+(((IkReal(-1.00000000000000))*(x6185)*(x6191)))+(((IkReal(-1.00000000000000))*(x6188)*(x6190))));
evalcond[4]=((((cj9)*(x6186)))+(((cj13)*(r11)*(x6183)))+(((IkReal(-1.00000000000000))*(x6193)))+(((IkReal(-1.00000000000000))*(cj14)*(x6182)*(x6190)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6181)))+(((IkReal(-1.00000000000000))*(x6184)*(x6191)))+(((r00)*(sj9)*(x6189))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj10)*(x6194)))+(((IkReal(-1.00000000000000))*(r00)*(x6189)*(x6190)))+(((x6183)*(x6184)))+(((sj9)*(x6186)))+(((IkReal(-1.00000000000000))*(x6182)*(x6192)))+(((r11)*(sj9)*(x6187))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6195=(cj10)*(cj10);
IkReal x6196=(sj10)*(sj10);
IkReal x6197=((cj14)*(sj10));
IkReal x6198=((r11)*(sj9));
IkReal x6199=((sj10)*(sj14));
IkReal x6200=((r10)*(sj9));
IkReal x6201=((cj10)*(cj14));
IkReal x6202=((cj9)*(r00));
IkReal x6203=((cj9)*(r01));
IkReal x6204=((IkReal(1.00000000000000))*(cj10)*(sj14));
if( IKabs(((((IKabs(((((cj11)*(x6195)))+(((cj11)*(x6196))))) != 0)?((IkReal)1/(((((cj11)*(x6195)))+(((cj11)*(x6196)))))):(IkReal)1.0e30))*(((((x6199)*(x6200)))+(((x6199)*(x6202)))+(((r21)*(x6201)))+(((cj10)*(r20)*(sj14)))+(((x6197)*(x6203)))+(((x6197)*(x6198))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x6195)+(x6196))) != 0)?((IkReal)1/(((x6195)+(x6196)))):(IkReal)1.0e30))*(((((r20)*(x6199)))+(((IkReal(-1.00000000000000))*(x6202)*(x6204)))+(((IkReal(-1.00000000000000))*(x6201)*(x6203)))+(((r21)*(x6197)))+(((IkReal(-1.00000000000000))*(x6198)*(x6201)))+(((IkReal(-1.00000000000000))*(x6200)*(x6204))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj11)*(x6195)))+(((cj11)*(x6196))))) != 0)?((IkReal)1/(((((cj11)*(x6195)))+(((cj11)*(x6196)))))):(IkReal)1.0e30))*(((((x6199)*(x6200)))+(((x6199)*(x6202)))+(((r21)*(x6201)))+(((cj10)*(r20)*(sj14)))+(((x6197)*(x6203)))+(((x6197)*(x6198)))))))+IKsqr(((((IKabs(((x6195)+(x6196))) != 0)?((IkReal)1/(((x6195)+(x6196)))):(IkReal)1.0e30))*(((((r20)*(x6199)))+(((IkReal(-1.00000000000000))*(x6202)*(x6204)))+(((IkReal(-1.00000000000000))*(x6201)*(x6203)))+(((r21)*(x6197)))+(((IkReal(-1.00000000000000))*(x6198)*(x6201)))+(((IkReal(-1.00000000000000))*(x6200)*(x6204)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(((((cj11)*(x6195)))+(((cj11)*(x6196))))) != 0)?((IkReal)1/(((((cj11)*(x6195)))+(((cj11)*(x6196)))))):(IkReal)1.0e30))*(((((x6199)*(x6200)))+(((x6199)*(x6202)))+(((r21)*(x6201)))+(((cj10)*(r20)*(sj14)))+(((x6197)*(x6203)))+(((x6197)*(x6198)))))), ((((IKabs(((x6195)+(x6196))) != 0)?((IkReal)1/(((x6195)+(x6196)))):(IkReal)1.0e30))*(((((r20)*(x6199)))+(((IkReal(-1.00000000000000))*(x6202)*(x6204)))+(((IkReal(-1.00000000000000))*(x6201)*(x6203)))+(((r21)*(x6197)))+(((IkReal(-1.00000000000000))*(x6198)*(x6201)))+(((IkReal(-1.00000000000000))*(x6200)*(x6204)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[3];
IkReal x6205=IKsin(j12);
IkReal x6206=IKcos(j12);
IkReal x6207=((r00)*(sj14));
IkReal x6208=((cj14)*(sj9));
IkReal x6209=((IkReal(1.00000000000000))*(r11));
IkReal x6210=((IkReal(1.00000000000000))*(cj9));
IkReal x6211=((r10)*(sj14));
IkReal x6212=((IkReal(1.00000000000000))*(x6205));
IkReal x6213=((IkReal(1.00000000000000))*(x6206));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x6212)))+(((IkReal(-1.00000000000000))*(sj10)*(x6213)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x6209)))+(((r01)*(x6208)))+(((IkReal(-1.00000000000000))*(x6210)*(x6211)))+(((sj9)*(x6207)))+(((IkReal(-1.00000000000000))*(sj11)*(x6212))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj10)*(x6213)))+(((IkReal(-1.00000000000000))*(x6208)*(x6209)))+(((IkReal(-1.00000000000000))*(sj9)*(x6211)))+(((IkReal(-1.00000000000000))*(x6207)*(x6210)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6210)))+(((cj11)*(sj10)*(x6205))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14))))));
dummyeval[0]=(((r22)*(r22))+(((IkReal(-2.00000000000000))*(cj14)*(r20)*(r21)*(sj14)))+((((cj14)*(cj14))*((r20)*(r20))))+((((r21)*(r21))*((sj14)*(sj14)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x6214=((r22)*(sj14));
IkReal x6215=((IkReal(1.00000000000000))*(cj9));
IkReal x6216=((cj14)*(sj9));
IkReal x6217=((r21)*(sj14));
gconst3=IKsign(((((r01)*(sj9)*(x6214)))+(((r02)*(r20)*(x6216)))+(((cj9)*(r12)*(x6217)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x6215)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x6216)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r11)*(x6214)*(x6215)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6217)))));
IkReal x6218=((r22)*(sj14));
IkReal x6219=((IkReal(1.00000000000000))*(cj9));
IkReal x6220=((cj14)*(sj9));
IkReal x6221=((r21)*(sj14));
dummyeval[0]=((((r02)*(r20)*(x6220)))+(((cj9)*(r12)*(x6221)))+(((r01)*(sj9)*(x6218)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(r20)*(x6219)))+(((IkReal(-1.00000000000000))*(r11)*(x6218)*(x6219)))+(((IkReal(-1.00000000000000))*(r00)*(r22)*(x6220)))+(((cj14)*(cj9)*(r10)*(r22)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6221))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x6222=((IkReal(1.00000000000000))*(cj14));
IkReal x6223=((cj10)*(sj11)*(sj9));
IkReal x6224=((cj10)*(cj9)*(sj11));
if( IKabs(((gconst3)*(((((r02)*(x6223)))+(((cj11)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(x6224))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x6224)))+(((cj11)*(r21)*(sj14)))+(((r01)*(sj14)*(x6223)))+(((IkReal(-1.00000000000000))*(r00)*(x6222)*(x6223)))+(((IkReal(-1.00000000000000))*(cj11)*(r20)*(x6222)))+(((cj14)*(r10)*(x6224))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst3)*(((((r02)*(x6223)))+(((cj11)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(x6224)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x6224)))+(((cj11)*(r21)*(sj14)))+(((r01)*(sj14)*(x6223)))+(((IkReal(-1.00000000000000))*(r00)*(x6222)*(x6223)))+(((IkReal(-1.00000000000000))*(cj11)*(r20)*(x6222)))+(((cj14)*(r10)*(x6224)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x6225=IKsin(j13);
IkReal x6226=IKcos(j13);
IkReal x6227=((r11)*(sj14));
IkReal x6228=((IkReal(1.00000000000000))*(r02));
IkReal x6229=((r01)*(sj14));
IkReal x6230=((IkReal(1.00000000000000))*(sj12));
IkReal x6231=((cj14)*(r00));
IkReal x6232=((IkReal(1.00000000000000))*(r12));
IkReal x6233=((r21)*(sj14));
IkReal x6234=((cj11)*(cj12));
IkReal x6235=((cj14)*(r20));
IkReal x6236=((cj9)*(x6225));
IkReal x6237=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x6238=((sj9)*(x6225));
IkReal x6239=((sj9)*(x6226));
IkReal x6240=((cj9)*(x6226));
IkReal x6241=((IkReal(1.00000000000000))*(x6225));
evalcond[0]=((((x6225)*(x6235)))+(((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x6233)*(x6241)))+(((r22)*(x6226))));
evalcond[1]=((((x6226)*(x6235)))+(((IkReal(-1.00000000000000))*(sj10)*(x6230)))+(((cj10)*(x6234)))+(((IkReal(-1.00000000000000))*(x6226)*(x6233)))+(((IkReal(-1.00000000000000))*(r22)*(x6241))));
evalcond[2]=((((r02)*(x6239)))+(((IkReal(-1.00000000000000))*(x6232)*(x6240)))+(((x6231)*(x6238)))+(((IkReal(-1.00000000000000))*(x6229)*(x6238)))+(((IkReal(-1.00000000000000))*(x6236)*(x6237)))+(cj11)+(((x6227)*(x6236))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6237)*(x6240)))+(((r12)*(x6236)))+(((x6231)*(x6239)))+(((IkReal(-1.00000000000000))*(x6229)*(x6239)))+(((IkReal(-1.00000000000000))*(x6228)*(x6238)))+(((x6227)*(x6240)))+(((cj12)*(sj11))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6232)*(x6239)))+(((IkReal(-1.00000000000000))*(x6231)*(x6236)))+(((x6229)*(x6236)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x6228)*(x6240)))+(((x6227)*(x6238)))+(((IkReal(-1.00000000000000))*(x6237)*(x6238))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj10)*(x6230)))+(((r02)*(x6236)))+(((x6229)*(x6240)))+(((r12)*(x6238)))+(((IkReal(-1.00000000000000))*(x6231)*(x6240)))+(((IkReal(-1.00000000000000))*(sj10)*(x6234)))+(((x6227)*(x6239)))+(((IkReal(-1.00000000000000))*(x6237)*(x6239))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x6242=((cj10)*(sj11));
IkReal x6243=((r21)*(sj14));
IkReal x6244=((cj14)*(r20));
IkReal x6245=((cj10)*(cj11)*(cj12));
IkReal x6246=((IkReal(1.00000000000000))*(sj10)*(sj12));
if( IKabs(((gconst2)*(((((x6242)*(x6244)))+(((IkReal(-1.00000000000000))*(x6242)*(x6243)))+(((IkReal(-1.00000000000000))*(r22)*(x6246)))+(((r22)*(x6245))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x6244)*(x6245)))+(((x6243)*(x6245)))+(((sj10)*(sj12)*(x6244)))+(((r22)*(x6242)))+(((IkReal(-1.00000000000000))*(x6243)*(x6246))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst2)*(((((x6242)*(x6244)))+(((IkReal(-1.00000000000000))*(x6242)*(x6243)))+(((IkReal(-1.00000000000000))*(r22)*(x6246)))+(((r22)*(x6245)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x6244)*(x6245)))+(((x6243)*(x6245)))+(((sj10)*(sj12)*(x6244)))+(((r22)*(x6242)))+(((IkReal(-1.00000000000000))*(x6243)*(x6246)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x6247=IKsin(j13);
IkReal x6248=IKcos(j13);
IkReal x6249=((r11)*(sj14));
IkReal x6250=((IkReal(1.00000000000000))*(r02));
IkReal x6251=((r01)*(sj14));
IkReal x6252=((IkReal(1.00000000000000))*(sj12));
IkReal x6253=((cj14)*(r00));
IkReal x6254=((IkReal(1.00000000000000))*(r12));
IkReal x6255=((r21)*(sj14));
IkReal x6256=((cj11)*(cj12));
IkReal x6257=((cj14)*(r20));
IkReal x6258=((cj9)*(x6247));
IkReal x6259=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x6260=((sj9)*(x6247));
IkReal x6261=((sj9)*(x6248));
IkReal x6262=((cj9)*(x6248));
IkReal x6263=((IkReal(1.00000000000000))*(x6247));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x6255)*(x6263)))+(((r22)*(x6248)))+(((x6247)*(x6257))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x6252)))+(((IkReal(-1.00000000000000))*(x6248)*(x6255)))+(((IkReal(-1.00000000000000))*(r22)*(x6263)))+(((x6248)*(x6257)))+(((cj10)*(x6256))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6251)*(x6260)))+(((x6253)*(x6260)))+(((x6249)*(x6258)))+(((IkReal(-1.00000000000000))*(x6258)*(x6259)))+(cj11)+(((r02)*(x6261)))+(((IkReal(-1.00000000000000))*(x6254)*(x6262))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6251)*(x6261)))+(((x6253)*(x6261)))+(((x6249)*(x6262)))+(((IkReal(-1.00000000000000))*(x6259)*(x6262)))+(((cj12)*(sj11)))+(((r12)*(x6258)))+(((IkReal(-1.00000000000000))*(x6250)*(x6260))));
evalcond[4]=((((x6251)*(x6258)))+(((x6249)*(x6260)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x6259)*(x6260)))+(((IkReal(-1.00000000000000))*(x6253)*(x6258)))+(((IkReal(-1.00000000000000))*(x6250)*(x6262)))+(((IkReal(-1.00000000000000))*(x6254)*(x6261))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj10)*(x6256)))+(((x6251)*(x6262)))+(((x6249)*(x6261)))+(((IkReal(-1.00000000000000))*(x6259)*(x6261)))+(((IkReal(-1.00000000000000))*(x6253)*(x6262)))+(((IkReal(-1.00000000000000))*(cj10)*(x6252)))+(((r02)*(x6258)))+(((r12)*(x6260))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x6264=((cj10)*(sj11));
IkReal x6265=((sj10)*(sj11));
IkReal x6266=((IkReal(1.00000000000000))*(sj9));
IkReal x6267=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r02)*(x6264)*(x6267)))+(((r22)*(x6265)))+(((IkReal(-1.00000000000000))*(r12)*(x6264)*(x6266))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x6265)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x6264)*(x6266)))+(((cj14)*(r10)*(sj9)*(x6264)))+(((r21)*(sj14)*(x6265)))+(((cj14)*(cj9)*(r00)*(x6264)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x6264)*(x6267))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r02)*(x6264)*(x6267)))+(((r22)*(x6265)))+(((IkReal(-1.00000000000000))*(r12)*(x6264)*(x6266)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(cj14)*(r20)*(x6265)))+(((IkReal(-1.00000000000000))*(r11)*(sj14)*(x6264)*(x6266)))+(((cj14)*(r10)*(sj9)*(x6264)))+(((r21)*(sj14)*(x6265)))+(((cj14)*(cj9)*(r00)*(x6264)))+(((IkReal(-1.00000000000000))*(r01)*(sj14)*(x6264)*(x6267)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x6268=IKsin(j13);
IkReal x6269=IKcos(j13);
IkReal x6270=((r11)*(sj14));
IkReal x6271=((r01)*(sj14));
IkReal x6272=((cj14)*(r00));
IkReal x6273=((cj9)*(x6268));
IkReal x6274=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x6275=((sj9)*(x6268));
IkReal x6276=((sj9)*(x6269));
IkReal x6277=((IkReal(1.00000000000000))*(cj9)*(x6269));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((r22)*(x6269)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6268)))+(((cj14)*(r20)*(x6268))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x6273)*(x6274)))+(cj11)+(((r02)*(x6276)))+(((IkReal(-1.00000000000000))*(r12)*(x6277)))+(((x6270)*(x6273)))+(((IkReal(-1.00000000000000))*(x6271)*(x6275)))+(((x6272)*(x6275))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6274)*(x6275)))+(((IkReal(-1.00000000000000))*(x6272)*(x6273)))+(((IkReal(-1.00000000000000))*(r02)*(x6277)))+(((sj10)*(sj11)))+(((x6270)*(x6275)))+(((IkReal(-1.00000000000000))*(r12)*(x6276)))+(((x6271)*(x6273))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10))));
dummyeval[0]=(((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x6278=(cj10)*(cj10);
IkReal x6279=(sj10)*(sj10);
dummyeval[0]=((((cj11)*(x6279)))+(((cj11)*(x6278))));
dummyeval[1]=((x6279)+(x6278));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x6280=((IkReal(0.0100000000000000))*(cj14));
IkReal x6281=((r10)*(sj9));
IkReal x6282=((IkReal(1.00000000000000))*(sj9));
IkReal x6283=((IkReal(0.0100000000000000))*(sj14));
IkReal x6284=((cj9)*(r11));
IkReal x6285=((r00)*(sj9));
IkReal x6286=((IkReal(0.374290000000000))*(sj14));
IkReal x6287=((cj13)*(r02));
IkReal x6288=((cj9)*(r12));
IkReal x6289=((cj9)*(r00));
IkReal x6290=((r01)*(sj9));
IkReal x6291=((IkReal(0.374290000000000))*(cj14));
IkReal x6292=((IkReal(1.00000000000000))*(cj9));
IkReal x6293=((cj9)*(r10));
IkReal x6294=((r11)*(sj9));
IkReal x6295=((IkReal(1.00000000000000))*(sj13));
IkReal x6296=((cj14)*(sj13));
IkReal x6297=((cj13)*(sj14));
IkReal x6298=((cj13)*(cj14));
IkReal x6299=((r11)*(sj13)*(sj14));
IkReal x6300=((cj9)*(x6291));
IkReal x6301=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6295)))+(((r20)*(x6296)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x6280)))+(((IkReal(0.0690000000000000))*(cj10)))+(pz)+(((r20)*(x6286)))+(((IkReal(0.364420000000000))*(sj10)))+(((r21)*(x6283)))+(((r21)*(x6291))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6292)))+(((cj14)*(x6290)))+(((sj14)*(x6285)))+(((IkReal(-1.00000000000000))*(cj14)*(x6284))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj9)*(x6287)))+(((sj13)*(sj14)*(x6284)))+(((IkReal(-1.00000000000000))*(x6282)*(x6301)))+(((IkReal(-1.00000000000000))*(cj13)*(x6288)))+(((x6285)*(x6296)))+(((IkReal(-1.00000000000000))*(r10)*(x6292)*(x6296))));
evalcond[5]=((((x6284)*(x6297)))+(((IkReal(-1.00000000000000))*(r01)*(x6282)*(x6297)))+(((sj13)*(x6288)))+(((x6285)*(x6298)))+(((IkReal(-1.00000000000000))*(r10)*(x6292)*(x6298)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x6282))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x6289)*(x6295)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x6282)))+(((IkReal(-1.00000000000000))*(cj14)*(x6281)*(x6295)))+(((cj9)*(x6301)))+(((sj13)*(sj14)*(x6294)))+(((IkReal(-1.00000000000000))*(x6287)*(x6292))));
evalcond[7]=((((x6285)*(x6286)))+(((IkReal(-1.00000000000000))*(py)*(x6292)))+(((IkReal(-1.00000000000000))*(x6283)*(x6284)))+(((IkReal(-1.00000000000000))*(x6284)*(x6291)))+(((IkReal(-1.00000000000000))*(x6286)*(x6293)))+(((px)*(sj9)))+(((x6280)*(x6293)))+(((x6283)*(x6290)))+(((IkReal(-1.00000000000000))*(x6280)*(x6285)))+(((x6290)*(x6291))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x6282)))+(((IkReal(-1.00000000000000))*(x6283)*(x6294)))+(((IkReal(-1.00000000000000))*(px)*(x6292)))+(((IkReal(-1.00000000000000))*(r01)*(x6300)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-0.0690000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x6291)*(x6294)))+(((IkReal(-1.00000000000000))*(x6286)*(x6289)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6283)))+(((x6280)*(x6289)))+(((x6280)*(x6281)))+(((IkReal(-1.00000000000000))*(x6281)*(x6286))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6302=((cj14)*(sj10));
IkReal x6303=((r11)*(sj9));
IkReal x6304=((r20)*(sj14));
IkReal x6305=((IkReal(1.00000000000000))*(cj10));
IkReal x6306=((cj9)*(r01));
IkReal x6307=((r10)*(sj14)*(sj9));
IkReal x6308=((cj9)*(r00)*(sj14));
if( IKabs(((gconst6)*(((((cj10)*(x6304)))+(((x6302)*(x6306)))+(((x6302)*(x6303)))+(((sj10)*(x6308)))+(((sj10)*(x6307)))+(((cj10)*(cj14)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x6305)*(x6307)))+(((IkReal(-1.00000000000000))*(x6305)*(x6308)))+(((r21)*(x6302)))+(((sj10)*(x6304)))+(((IkReal(-1.00000000000000))*(cj14)*(x6303)*(x6305)))+(((IkReal(-1.00000000000000))*(cj14)*(x6305)*(x6306))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst6)*(((((cj10)*(x6304)))+(((x6302)*(x6306)))+(((x6302)*(x6303)))+(((sj10)*(x6308)))+(((sj10)*(x6307)))+(((cj10)*(cj14)*(r21)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x6305)*(x6307)))+(((IkReal(-1.00000000000000))*(x6305)*(x6308)))+(((r21)*(x6302)))+(((sj10)*(x6304)))+(((IkReal(-1.00000000000000))*(cj14)*(x6303)*(x6305)))+(((IkReal(-1.00000000000000))*(cj14)*(x6305)*(x6306)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6309=IKcos(j12);
IkReal x6310=IKsin(j12);
IkReal x6311=((cj13)*(sj14));
IkReal x6312=((r11)*(sj9));
IkReal x6313=((IkReal(1.00000000000000))*(cj10));
IkReal x6314=((cj9)*(r01));
IkReal x6315=((IkReal(1.00000000000000))*(cj14));
IkReal x6316=((cj9)*(r00));
IkReal x6317=((IkReal(1.00000000000000))*(sj14));
IkReal x6318=((r10)*(sj9));
IkReal x6319=((sj10)*(x6310));
IkReal x6320=((IkReal(1.00000000000000))*(sj10)*(x6309));
IkReal x6321=((x6310)*(x6313));
IkReal x6322=((x6321)+(x6320));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6322))));
evalcond[1]=((((cj10)*(x6309)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x6311)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x6319))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6312)*(x6315)))+(x6319)+(((IkReal(-1.00000000000000))*(x6309)*(x6313)))+(((IkReal(-1.00000000000000))*(x6316)*(x6317)))+(((IkReal(-1.00000000000000))*(x6314)*(x6315)))+(((IkReal(-1.00000000000000))*(x6317)*(x6318))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x6315)*(x6316)))+(((IkReal(-1.00000000000000))*(cj13)*(x6315)*(x6318)))+(((x6311)*(x6314)))+(((x6311)*(x6312)))+(((IkReal(-1.00000000000000))*(x6322)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6323=((cj10)*(cj13));
IkReal x6324=((r21)*(sj14));
IkReal x6325=((r22)*(sj13));
IkReal x6326=((IkReal(1.00000000000000))*(sj10));
IkReal x6327=((cj14)*(r20));
IkReal x6328=((cj14)*(r21));
IkReal x6329=((r20)*(sj14));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj13)*(x6324)*(x6326)))+(((IkReal(-1.00000000000000))*(x6325)*(x6326)))+(((cj10)*(x6329)))+(((cj10)*(x6328)))+(((cj13)*(sj10)*(x6327))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x6323)*(x6324)))+(((cj10)*(x6325)))+(((sj10)*(x6328)))+(((sj10)*(x6329)))+(((IkReal(-1.00000000000000))*(x6323)*(x6327))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(cj13)*(x6324)*(x6326)))+(((IkReal(-1.00000000000000))*(x6325)*(x6326)))+(((cj10)*(x6329)))+(((cj10)*(x6328)))+(((cj13)*(sj10)*(x6327)))))), ((gconst5)*(((((x6323)*(x6324)))+(((cj10)*(x6325)))+(((sj10)*(x6328)))+(((sj10)*(x6329)))+(((IkReal(-1.00000000000000))*(x6323)*(x6327)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6330=IKcos(j12);
IkReal x6331=IKsin(j12);
IkReal x6332=((cj13)*(sj14));
IkReal x6333=((r11)*(sj9));
IkReal x6334=((IkReal(1.00000000000000))*(cj10));
IkReal x6335=((cj9)*(r01));
IkReal x6336=((IkReal(1.00000000000000))*(cj14));
IkReal x6337=((cj9)*(r00));
IkReal x6338=((IkReal(1.00000000000000))*(sj14));
IkReal x6339=((r10)*(sj9));
IkReal x6340=((sj10)*(x6331));
IkReal x6341=((IkReal(1.00000000000000))*(sj10)*(x6330));
IkReal x6342=((x6331)*(x6334));
IkReal x6343=((x6341)+(x6342));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6343))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x6340)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((cj10)*(x6330)))+(((IkReal(-1.00000000000000))*(r21)*(x6332))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6333)*(x6336)))+(x6340)+(((IkReal(-1.00000000000000))*(x6330)*(x6334)))+(((IkReal(-1.00000000000000))*(x6337)*(x6338)))+(((IkReal(-1.00000000000000))*(x6335)*(x6336)))+(((IkReal(-1.00000000000000))*(x6338)*(x6339))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((x6332)*(x6335)))+(((x6332)*(x6333)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x6343)))+(((IkReal(-1.00000000000000))*(cj13)*(x6336)*(x6337)))+(((IkReal(-1.00000000000000))*(cj13)*(x6336)*(x6339))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x6344=((IkReal(0.0100000000000000))*(cj14));
IkReal x6345=((r10)*(sj9));
IkReal x6346=((IkReal(1.00000000000000))*(sj9));
IkReal x6347=((IkReal(0.0100000000000000))*(sj14));
IkReal x6348=((cj9)*(r11));
IkReal x6349=((r00)*(sj9));
IkReal x6350=((IkReal(0.374290000000000))*(sj14));
IkReal x6351=((cj13)*(r02));
IkReal x6352=((cj9)*(r12));
IkReal x6353=((cj9)*(r00));
IkReal x6354=((r01)*(sj9));
IkReal x6355=((IkReal(0.374290000000000))*(cj14));
IkReal x6356=((IkReal(1.00000000000000))*(cj9));
IkReal x6357=((cj9)*(r10));
IkReal x6358=((r11)*(sj9));
IkReal x6359=((IkReal(1.00000000000000))*(sj13));
IkReal x6360=((cj14)*(sj13));
IkReal x6361=((cj13)*(sj14));
IkReal x6362=((cj13)*(cj14));
IkReal x6363=((r11)*(sj13)*(sj14));
IkReal x6364=((cj9)*(x6355));
IkReal x6365=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x6360)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6359)))+(((cj13)*(r22))));
evalcond[2]=((((r21)*(x6355)))+(((r20)*(x6350)))+(((IkReal(-1.00000000000000))*(r20)*(x6344)))+(((r21)*(x6347)))+(pz)+(((IkReal(-0.0690000000000000))*(cj10)))+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6356)))+(((IkReal(-1.00000000000000))*(cj14)*(x6348)))+(((cj14)*(x6354)))+(((sj14)*(x6349))));
evalcond[4]=((IkReal(-1.00000000000000))+(((x6349)*(x6360)))+(((IkReal(-1.00000000000000))*(x6346)*(x6365)))+(((sj9)*(x6351)))+(((sj13)*(sj14)*(x6348)))+(((IkReal(-1.00000000000000))*(r10)*(x6356)*(x6360)))+(((IkReal(-1.00000000000000))*(cj13)*(x6352))));
evalcond[5]=((((x6349)*(x6362)))+(((IkReal(-1.00000000000000))*(r10)*(x6356)*(x6362)))+(((x6348)*(x6361)))+(((IkReal(-1.00000000000000))*(r01)*(x6346)*(x6361)))+(((sj13)*(x6352)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x6346))));
evalcond[6]=((((cj9)*(x6365)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x6346)))+(((IkReal(-1.00000000000000))*(x6351)*(x6356)))+(((IkReal(-1.00000000000000))*(cj14)*(x6353)*(x6359)))+(((IkReal(-1.00000000000000))*(cj14)*(x6345)*(x6359)))+(((sj13)*(sj14)*(x6358))));
evalcond[7]=((((x6349)*(x6350)))+(((IkReal(-1.00000000000000))*(x6347)*(x6348)))+(((IkReal(-1.00000000000000))*(x6350)*(x6357)))+(((x6347)*(x6354)))+(((IkReal(-1.00000000000000))*(x6344)*(x6349)))+(((x6344)*(x6357)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x6348)*(x6355)))+(((x6354)*(x6355)))+(((IkReal(-1.00000000000000))*(py)*(x6356))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x6344)*(x6345)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6347)))+(((IkReal(-1.00000000000000))*(x6355)*(x6358)))+(((IkReal(-1.00000000000000))*(x6347)*(x6358)))+(((IkReal(-1.00000000000000))*(x6350)*(x6353)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x6345)*(x6350)))+(((IkReal(0.0690000000000000))*(sj10)))+(((x6344)*(x6353)))+(((IkReal(-1.00000000000000))*(py)*(x6346)))+(((IkReal(-1.00000000000000))*(px)*(x6356)))+(((IkReal(-1.00000000000000))*(r01)*(x6364))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6366=((sj10)*(sj14));
IkReal x6367=((cj14)*(r21));
IkReal x6368=((cj10)*(sj14));
IkReal x6369=((IkReal(1.00000000000000))*(cj10));
IkReal x6370=((IkReal(1.00000000000000))*(sj10));
IkReal x6371=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x6372=((cj14)*(r11)*(sj9));
IkReal x6373=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x6374=((cj14)*(cj9)*(r01));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x6366)*(x6371)))+(((IkReal(-1.00000000000000))*(x6366)*(x6373)))+(((IkReal(-1.00000000000000))*(r20)*(x6368)))+(((IkReal(-1.00000000000000))*(x6370)*(x6372)))+(((IkReal(-1.00000000000000))*(x6370)*(x6374)))+(((IkReal(-1.00000000000000))*(x6367)*(x6369))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x6368)*(x6373)))+(((IkReal(-1.00000000000000))*(x6368)*(x6371)))+(((r20)*(x6366)))+(((sj10)*(x6367)))+(((IkReal(-1.00000000000000))*(x6369)*(x6374)))+(((IkReal(-1.00000000000000))*(x6369)*(x6372))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x6366)*(x6371)))+(((IkReal(-1.00000000000000))*(x6366)*(x6373)))+(((IkReal(-1.00000000000000))*(r20)*(x6368)))+(((IkReal(-1.00000000000000))*(x6370)*(x6372)))+(((IkReal(-1.00000000000000))*(x6370)*(x6374)))+(((IkReal(-1.00000000000000))*(x6367)*(x6369)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(x6368)*(x6373)))+(((IkReal(-1.00000000000000))*(x6368)*(x6371)))+(((r20)*(x6366)))+(((sj10)*(x6367)))+(((IkReal(-1.00000000000000))*(x6369)*(x6374)))+(((IkReal(-1.00000000000000))*(x6369)*(x6372)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6375=IKsin(j12);
IkReal x6376=IKcos(j12);
IkReal x6377=((cj13)*(sj14));
IkReal x6378=((r11)*(sj9));
IkReal x6379=((cj13)*(cj14));
IkReal x6380=((IkReal(1.00000000000000))*(cj14));
IkReal x6381=((IkReal(1.00000000000000))*(cj10));
IkReal x6382=((cj9)*(r01));
IkReal x6383=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x6384=((sj10)*(x6376));
IkReal x6385=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x6386=((IkReal(1.00000000000000))*(sj10)*(x6375));
IkReal x6387=((x6376)*(x6381));
IkReal x6388=((x6387)+(x6386));
evalcond[0]=((((IkReal(-1.00000000000000))*(x6384)))+(((cj10)*(x6375)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x6388)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r20)*(x6379)))+(((IkReal(-1.00000000000000))*(r21)*(x6377))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6388)))+(((IkReal(-1.00000000000000))*(x6380)*(x6382)))+(((IkReal(-1.00000000000000))*(x6378)*(x6380)))+(((IkReal(-1.00000000000000))*(sj14)*(x6383)))+(((IkReal(-1.00000000000000))*(sj14)*(x6385))));
evalcond[3]=((((x6377)*(x6378)))+(x6384)+(((IkReal(-1.00000000000000))*(x6379)*(x6385)))+(((IkReal(-1.00000000000000))*(x6379)*(x6383)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x6375)*(x6381)))+(((x6377)*(x6382)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6389=((r21)*(sj10));
IkReal x6390=((r20)*(sj14));
IkReal x6391=((IkReal(1.00000000000000))*(cj10));
IkReal x6392=((IkReal(1.00000000000000))*(r22)*(sj13));
IkReal x6393=((IkReal(1.00000000000000))*(cj13)*(sj14));
IkReal x6394=((cj13)*(cj14)*(r20));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj14)*(r21)*(x6391)))+(((IkReal(-1.00000000000000))*(x6390)*(x6391)))+(((sj10)*(x6394)))+(((IkReal(-1.00000000000000))*(x6389)*(x6393)))+(((IkReal(-1.00000000000000))*(sj10)*(x6392))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj14)*(x6389)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x6391)))+(((cj10)*(x6394)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x6391)))+(((sj10)*(x6390))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj14)*(r21)*(x6391)))+(((IkReal(-1.00000000000000))*(x6390)*(x6391)))+(((sj10)*(x6394)))+(((IkReal(-1.00000000000000))*(x6389)*(x6393)))+(((IkReal(-1.00000000000000))*(sj10)*(x6392)))))), ((gconst7)*(((((cj14)*(x6389)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x6391)))+(((cj10)*(x6394)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x6391)))+(((sj10)*(x6390)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6395=IKsin(j12);
IkReal x6396=IKcos(j12);
IkReal x6397=((cj13)*(sj14));
IkReal x6398=((r11)*(sj9));
IkReal x6399=((cj13)*(cj14));
IkReal x6400=((IkReal(1.00000000000000))*(cj14));
IkReal x6401=((IkReal(1.00000000000000))*(cj10));
IkReal x6402=((cj9)*(r01));
IkReal x6403=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x6404=((sj10)*(x6396));
IkReal x6405=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x6406=((IkReal(1.00000000000000))*(sj10)*(x6395));
IkReal x6407=((x6396)*(x6401));
IkReal x6408=((x6406)+(x6407));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6404)))+(((cj10)*(x6395))));
evalcond[1]=((((r20)*(x6399)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x6408)))+(((IkReal(-1.00000000000000))*(r21)*(x6397))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x6403)))+(((IkReal(-1.00000000000000))*(sj14)*(x6405)))+(((IkReal(-1.00000000000000))*(x6400)*(x6402)))+(((IkReal(-1.00000000000000))*(x6408)))+(((IkReal(-1.00000000000000))*(x6398)*(x6400))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((x6397)*(x6398)))+(x6404)+(((x6397)*(x6402)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(x6399)*(x6405)))+(((IkReal(-1.00000000000000))*(x6399)*(x6403)))+(((IkReal(-1.00000000000000))*(x6395)*(x6401))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x6409=((IkReal(0.0100000000000000))*(cj14));
IkReal x6410=((r10)*(sj9));
IkReal x6411=((cj9)*(r11));
IkReal x6412=((sj13)*(sj14));
IkReal x6413=((cj9)*(r00));
IkReal x6414=((IkReal(0.374290000000000))*(cj14));
IkReal x6415=((cj9)*(r01));
IkReal x6416=((r01)*(sj9));
IkReal x6417=((IkReal(0.0100000000000000))*(sj14));
IkReal x6418=((IkReal(0.374290000000000))*(sj14));
IkReal x6419=((r00)*(sj9));
IkReal x6420=((cj13)*(r02));
IkReal x6421=((cj9)*(r10));
IkReal x6422=((IkReal(1.00000000000000))*(sj9));
IkReal x6423=((IkReal(1.00000000000000))*(cj9));
IkReal x6424=((cj13)*(r12));
IkReal x6425=((r11)*(sj9));
IkReal x6426=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x6426)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(r21)*(x6412)))+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x6418)))+(((r21)*(x6414)))+(((r21)*(x6417)))+(((IkReal(-1.00000000000000))*(r20)*(x6409)))+(((IkReal(0.0690000000000000))*(cj11)))+(pz));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6421)*(x6426)))+(((IkReal(-1.00000000000000))*(x6412)*(x6416)))+(((sj9)*(x6420)))+(((x6411)*(x6412)))+(cj11)+(((x6419)*(x6426)))+(((IkReal(-1.00000000000000))*(x6423)*(x6424))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6422)*(x6424)))+(((x6412)*(x6425)))+(((IkReal(-1.00000000000000))*(x6413)*(x6426)))+(((IkReal(-1.00000000000000))*(x6410)*(x6426)))+(((x6412)*(x6415)))+(((IkReal(-1.00000000000000))*(x6420)*(x6423))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x6418)*(x6421)))+(((x6409)*(x6421)))+(((x6416)*(x6417)))+(((x6414)*(x6416)))+(((IkReal(0.0690000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(py)*(x6423)))+(((IkReal(-1.00000000000000))*(x6409)*(x6419)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x6411)*(x6414)))+(((IkReal(-1.00000000000000))*(x6411)*(x6417)))+(((x6418)*(x6419))));
evalcond[6]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x6414)*(x6415)))+(((IkReal(-1.00000000000000))*(x6417)*(x6425)))+(((IkReal(-1.00000000000000))*(x6415)*(x6417)))+(((IkReal(-1.00000000000000))*(x6414)*(x6425)))+(((x6409)*(x6413)))+(((x6409)*(x6410)))+(((IkReal(-1.00000000000000))*(py)*(x6422)))+(((IkReal(-1.00000000000000))*(x6413)*(x6418)))+(((IkReal(-1.00000000000000))*(px)*(x6423)))+(((IkReal(-1.00000000000000))*(x6410)*(x6418))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x6427=((IkReal(0.0100000000000000))*(cj14));
IkReal x6428=((r10)*(sj9));
IkReal x6429=((cj9)*(r11));
IkReal x6430=((sj13)*(sj14));
IkReal x6431=((cj9)*(r00));
IkReal x6432=((IkReal(0.374290000000000))*(cj14));
IkReal x6433=((cj9)*(r01));
IkReal x6434=((r01)*(sj9));
IkReal x6435=((IkReal(0.0100000000000000))*(sj14));
IkReal x6436=((r00)*(sj9));
IkReal x6437=((IkReal(0.374290000000000))*(sj14));
IkReal x6438=((cj13)*(r02));
IkReal x6439=((cj9)*(r12));
IkReal x6440=((IkReal(1.00000000000000))*(sj9));
IkReal x6441=((IkReal(1.00000000000000))*(cj9));
IkReal x6442=((r11)*(sj9));
IkReal x6443=((cj9)*(r10));
IkReal x6444=((cj14)*(sj13));
IkReal x6445=((IkReal(1.00000000000000))*(cj13));
IkReal x6446=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((cj13)*(r22)))+(((r20)*(x6444)))+(((IkReal(-1.00000000000000))*(r21)*(x6430))));
evalcond[2]=((IkReal(0.0690000000000000))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x6427)))+(((r20)*(x6437)))+(((r21)*(x6432)))+(((r21)*(x6435))));
evalcond[3]=((((cj14)*(x6434)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6441)))+(((IkReal(-1.00000000000000))*(cj14)*(x6429)))+(((sj14)*(x6436))));
evalcond[4]=((IkReal(1.00000000000000))+(((x6429)*(x6430)))+(((IkReal(-1.00000000000000))*(x6439)*(x6445)))+(((sj9)*(x6438)))+(((IkReal(-1.00000000000000))*(x6430)*(x6434)))+(((x6436)*(x6444)))+(((IkReal(-1.00000000000000))*(r10)*(x6441)*(x6444))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj14)*(x6434)*(x6445)))+(((cj13)*(sj14)*(x6429)))+(((sj13)*(x6439)))+(((x6436)*(x6446)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x6440)))+(((IkReal(-1.00000000000000))*(r10)*(x6441)*(x6446))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x6428)*(x6444)))+(((x6430)*(x6442)))+(((IkReal(-1.00000000000000))*(x6438)*(x6441)))+(((IkReal(-1.00000000000000))*(x6431)*(x6444)))+(((x6430)*(x6433)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x6440))));
evalcond[7]=((((x6434)*(x6435)))+(((IkReal(-1.00000000000000))*(py)*(x6441)))+(((IkReal(-1.00000000000000))*(x6427)*(x6436)))+(((x6432)*(x6434)))+(((IkReal(-1.00000000000000))*(x6437)*(x6443)))+(((x6436)*(x6437)))+(((IkReal(-1.00000000000000))*(x6429)*(x6432)))+(((IkReal(-1.00000000000000))*(x6429)*(x6435)))+(((px)*(sj9)))+(((x6427)*(x6443))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(py)*(x6440)))+(((IkReal(-1.00000000000000))*(x6431)*(x6437)))+(((IkReal(-1.00000000000000))*(x6432)*(x6442)))+(((IkReal(-1.00000000000000))*(x6433)*(x6435)))+(((IkReal(-1.00000000000000))*(x6432)*(x6433)))+(((IkReal(-1.00000000000000))*(x6428)*(x6437)))+(((x6427)*(x6428)))+(((IkReal(-1.00000000000000))*(px)*(x6441)))+(((IkReal(-1.00000000000000))*(x6435)*(x6442)))+(((x6427)*(x6431))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6447=IKcos(j12);
IkReal x6448=((cj13)*(sj9));
IkReal x6449=((IkReal(1.00000000000000))*(cj14));
IkReal x6450=((cj13)*(sj14));
IkReal x6451=((cj9)*(r00));
IkReal x6452=((cj9)*(r01));
IkReal x6453=((IkReal(1.00000000000000))*(sj14));
IkReal x6454=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6454))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x6447)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x6450))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6451)*(x6453)))+(((IkReal(-1.00000000000000))*(x6449)*(x6452)))+(((IkReal(-1.00000000000000))*(x6447)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6449)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6453))));
evalcond[3]=((((r11)*(sj14)*(x6448)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r10)*(x6448)*(x6449)))+(((x6450)*(x6452)))+(((IkReal(-1.00000000000000))*(x6454)))+(((IkReal(-1.00000000000000))*(cj13)*(x6449)*(x6451)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6455=((IkReal(0.0100000000000000))*(cj14));
IkReal x6456=((r10)*(sj9));
IkReal x6457=((cj9)*(r11));
IkReal x6458=((sj13)*(sj14));
IkReal x6459=((cj9)*(r00));
IkReal x6460=((IkReal(0.374290000000000))*(cj14));
IkReal x6461=((cj9)*(r01));
IkReal x6462=((r01)*(sj9));
IkReal x6463=((IkReal(0.0100000000000000))*(sj14));
IkReal x6464=((r00)*(sj9));
IkReal x6465=((IkReal(0.374290000000000))*(sj14));
IkReal x6466=((cj13)*(r02));
IkReal x6467=((cj9)*(r12));
IkReal x6468=((IkReal(1.00000000000000))*(sj9));
IkReal x6469=((IkReal(1.00000000000000))*(cj9));
IkReal x6470=((r11)*(sj9));
IkReal x6471=((cj9)*(r10));
IkReal x6472=((cj14)*(sj13));
IkReal x6473=((IkReal(1.00000000000000))*(cj13));
IkReal x6474=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x6472)))+(((IkReal(-1.00000000000000))*(r21)*(x6458)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x6455)))+(((r21)*(x6463)))+(((r21)*(x6460)))+(pz)+(((r20)*(x6465))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6469)))+(((sj14)*(x6464)))+(((cj14)*(x6462)))+(((IkReal(-1.00000000000000))*(cj14)*(x6457))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x6467)*(x6473)))+(((IkReal(-1.00000000000000))*(r10)*(x6469)*(x6472)))+(((x6457)*(x6458)))+(((sj9)*(x6466)))+(((x6464)*(x6472)))+(((IkReal(-1.00000000000000))*(x6458)*(x6462))));
evalcond[5]=((((cj13)*(sj14)*(x6457)))+(((IkReal(-1.00000000000000))*(r10)*(x6469)*(x6474)))+(((sj13)*(x6467)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x6468)))+(((IkReal(-1.00000000000000))*(sj14)*(x6462)*(x6473)))+(((x6464)*(x6474))));
evalcond[6]=((((x6458)*(x6470)))+(((IkReal(-1.00000000000000))*(x6466)*(x6469)))+(((IkReal(-1.00000000000000))*(x6459)*(x6472)))+(((x6458)*(x6461)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x6468)))+(((IkReal(-1.00000000000000))*(x6456)*(x6472))));
evalcond[7]=((((x6464)*(x6465)))+(((IkReal(-1.00000000000000))*(x6457)*(x6460)))+(((IkReal(-1.00000000000000))*(x6457)*(x6463)))+(((x6460)*(x6462)))+(((IkReal(-1.00000000000000))*(x6455)*(x6464)))+(((x6462)*(x6463)))+(((px)*(sj9)))+(((x6455)*(x6471)))+(((IkReal(-1.00000000000000))*(x6465)*(x6471)))+(((IkReal(-1.00000000000000))*(py)*(x6469))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(px)*(x6469)))+(((x6455)*(x6456)))+(((x6455)*(x6459)))+(((IkReal(-1.00000000000000))*(x6460)*(x6470)))+(((IkReal(-1.00000000000000))*(x6461)*(x6463)))+(((IkReal(-1.00000000000000))*(x6456)*(x6465)))+(((IkReal(-1.00000000000000))*(x6463)*(x6470)))+(((IkReal(-1.00000000000000))*(x6460)*(x6461)))+(((IkReal(-1.00000000000000))*(x6459)*(x6465)))+(((IkReal(-1.00000000000000))*(py)*(x6468))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6475=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x6475))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6475))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x6475)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6475)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x6475)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6475)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6476=IKsin(j12);
IkReal x6477=((cj13)*(sj9));
IkReal x6478=((IkReal(1.00000000000000))*(cj14));
IkReal x6479=((cj13)*(sj14));
IkReal x6480=((cj9)*(r00));
IkReal x6481=((cj9)*(r01));
IkReal x6482=((IkReal(1.00000000000000))*(sj14));
IkReal x6483=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x6476));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x6479)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x6483)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6482)))+(((IkReal(-1.00000000000000))*(x6478)*(x6481)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6478)))+(((IkReal(-1.00000000000000))*(x6483)))+(((IkReal(-1.00000000000000))*(x6480)*(x6482))));
evalcond[3]=((((x6479)*(x6481)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x6478)*(x6480)))+(((r11)*(sj14)*(x6477)))+(((IkReal(-1.00000000000000))*(r10)*(x6477)*(x6478)))+(((IkReal(-1.00000000000000))*(x6476)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6484=((IkReal(0.0100000000000000))*(cj14));
IkReal x6485=((r10)*(sj9));
IkReal x6486=((cj9)*(r11));
IkReal x6487=((sj13)*(sj14));
IkReal x6488=((cj14)*(r21));
IkReal x6489=((cj9)*(r00));
IkReal x6490=((IkReal(0.374290000000000))*(cj14));
IkReal x6491=((cj9)*(r01));
IkReal x6492=((r01)*(sj9));
IkReal x6493=((IkReal(0.0100000000000000))*(sj14));
IkReal x6494=((IkReal(1.00000000000000))*(sj13));
IkReal x6495=((r00)*(sj9));
IkReal x6496=((IkReal(0.374290000000000))*(sj14));
IkReal x6497=((cj13)*(sj9));
IkReal x6498=((IkReal(1.00000000000000))*(cj13));
IkReal x6499=((IkReal(1.00000000000000))*(py));
IkReal x6500=((r11)*(sj9));
IkReal x6501=((cj9)*(r10));
IkReal x6502=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x6488));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x6502)))+(((IkReal(-1.00000000000000))*(r21)*(x6487)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(0.374290000000000))*(x6488)))+(((r20)*(x6496)))+(pz)+(((r21)*(x6493)))+(((IkReal(-1.00000000000000))*(r20)*(x6484))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6494)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6498))));
evalcond[5]=((((x6486)*(x6487)))+(((r02)*(x6497)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x6498)))+(((x6495)*(x6502)))+(((IkReal(-1.00000000000000))*(x6487)*(x6492)))+(((IkReal(-1.00000000000000))*(cj14)*(x6494)*(x6501))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x6497)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x6498)))+(((IkReal(-1.00000000000000))*(cj14)*(x6489)*(x6494)))+(((x6487)*(x6491)))+(((x6487)*(x6500)))+(((IkReal(-1.00000000000000))*(cj14)*(x6485)*(x6494))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x6492)*(x6493)))+(((IkReal(-1.00000000000000))*(cj9)*(x6499)))+(((IkReal(-1.00000000000000))*(x6486)*(x6493)))+(((IkReal(-1.00000000000000))*(x6486)*(x6490)))+(((x6495)*(x6496)))+(((IkReal(-1.00000000000000))*(x6496)*(x6501)))+(((px)*(sj9)))+(((x6484)*(x6501)))+(((x6490)*(x6492)))+(((IkReal(-1.00000000000000))*(x6484)*(x6495))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x6489)*(x6496)))+(((IkReal(-1.00000000000000))*(x6490)*(x6500)))+(((IkReal(-1.00000000000000))*(sj9)*(x6499)))+(((IkReal(-1.00000000000000))*(x6490)*(x6491)))+(((x6484)*(x6489)))+(((x6484)*(x6485)))+(((IkReal(-1.00000000000000))*(x6491)*(x6493)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x6493)*(x6500)))+(((IkReal(-1.00000000000000))*(x6485)*(x6496))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6503=((r00)*(sj14));
IkReal x6504=((cj14)*(sj9));
IkReal x6505=((IkReal(1.00000000000000))*(r11));
IkReal x6506=((IkReal(1.00000000000000))*(cj9));
IkReal x6507=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x6505)))+(((IkReal(-1.00000000000000))*(x6506)*(x6507)))+(((r01)*(x6504)))+(((sj9)*(x6503))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj9)*(x6507)))+(((IkReal(-1.00000000000000))*(x6503)*(x6506)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6506)))+(((IkReal(-1.00000000000000))*(x6504)*(x6505))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x6505)))+(((IkReal(-1.00000000000000))*(x6506)*(x6507)))+(((r01)*(x6504)))+(((sj9)*(x6503)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj9)*(x6507)))+(((IkReal(-1.00000000000000))*(x6503)*(x6506)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6506)))+(((IkReal(-1.00000000000000))*(x6504)*(x6505)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x6505)))+(((IkReal(-1.00000000000000))*(x6506)*(x6507)))+(((r01)*(x6504)))+(((sj9)*(x6503)))), ((((IkReal(-1.00000000000000))*(sj9)*(x6507)))+(((IkReal(-1.00000000000000))*(x6503)*(x6506)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6506)))+(((IkReal(-1.00000000000000))*(x6504)*(x6505)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6508=IKcos(j12);
IkReal x6509=((cj9)*(sj14));
IkReal x6510=((IkReal(1.00000000000000))*(r00));
IkReal x6511=((cj14)*(sj9));
IkReal x6512=((IkReal(1.00000000000000))*(r11));
IkReal x6513=((cj13)*(r01));
IkReal x6514=((IkReal(1.00000000000000))*(r10));
IkReal x6515=((cj9)*(sj13));
IkReal x6516=((cj14)*(cj9));
IkReal x6517=((sj14)*(sj9));
IkReal x6518=((sj13)*(sj9));
IkReal x6519=((cj13)*(r11));
IkReal x6520=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x6512)*(x6516)))+(((r00)*(x6517)))+(((r01)*(x6511)))+(((IkReal(-1.00000000000000))*(x6520)))+(((IkReal(-1.00000000000000))*(x6509)*(x6514))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x6516)))+(((IkReal(-1.00000000000000))*(x6514)*(x6517)))+(((IkReal(-1.00000000000000))*(x6508)))+(((IkReal(-1.00000000000000))*(x6509)*(x6510)))+(((IkReal(-1.00000000000000))*(x6511)*(x6512))));
evalcond[2]=((((x6509)*(x6519)))+(((IkReal(-1.00000000000000))*(x6513)*(x6517)))+(((IkReal(-1.00000000000000))*(cj13)*(x6514)*(x6516)))+(((r12)*(x6515)))+(x6508)+(((IkReal(-1.00000000000000))*(r02)*(x6518)))+(((cj13)*(r00)*(x6511))));
evalcond[3]=((((x6509)*(x6513)))+(((IkReal(-1.00000000000000))*(cj13)*(x6510)*(x6516)))+(((IkReal(-1.00000000000000))*(cj13)*(x6511)*(x6514)))+(((x6517)*(x6519)))+(((r12)*(x6518)))+(((IkReal(-1.00000000000000))*(x6520)))+(((r02)*(x6515))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6521=((IkReal(0.0100000000000000))*(cj14));
IkReal x6522=((r10)*(sj9));
IkReal x6523=((cj9)*(r11));
IkReal x6524=((sj13)*(sj14));
IkReal x6525=((cj14)*(r21));
IkReal x6526=((cj9)*(r00));
IkReal x6527=((IkReal(0.374290000000000))*(cj14));
IkReal x6528=((cj9)*(r01));
IkReal x6529=((r01)*(sj9));
IkReal x6530=((IkReal(0.0100000000000000))*(sj14));
IkReal x6531=((IkReal(1.00000000000000))*(sj13));
IkReal x6532=((r00)*(sj9));
IkReal x6533=((IkReal(0.374290000000000))*(sj14));
IkReal x6534=((cj13)*(sj9));
IkReal x6535=((IkReal(1.00000000000000))*(cj13));
IkReal x6536=((IkReal(1.00000000000000))*(py));
IkReal x6537=((r11)*(sj9));
IkReal x6538=((cj9)*(r10));
IkReal x6539=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x6525));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x6524)))+(((r20)*(x6539)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x6530)))+(((IkReal(0.374290000000000))*(x6525)))+(((IkReal(-1.00000000000000))*(r20)*(x6521)))+(pz)+(((r20)*(x6533))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6535)))+(((IkReal(-1.00000000000000))*(r22)*(x6531))));
evalcond[5]=((((r02)*(x6534)))+(((IkReal(-1.00000000000000))*(x6524)*(x6529)))+(((IkReal(-1.00000000000000))*(cj14)*(x6531)*(x6538)))+(((x6532)*(x6539)))+(((x6523)*(x6524)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x6535))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x6526)*(x6531)))+(((x6524)*(x6528)))+(((IkReal(-1.00000000000000))*(r12)*(x6534)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x6535)))+(((x6524)*(x6537)))+(((IkReal(-1.00000000000000))*(cj14)*(x6522)*(x6531))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x6521)*(x6538)))+(((IkReal(-1.00000000000000))*(x6523)*(x6530)))+(((x6527)*(x6529)))+(((IkReal(-1.00000000000000))*(x6533)*(x6538)))+(((x6532)*(x6533)))+(((px)*(sj9)))+(((x6529)*(x6530)))+(((IkReal(-1.00000000000000))*(x6523)*(x6527)))+(((IkReal(-1.00000000000000))*(x6521)*(x6532)))+(((IkReal(-1.00000000000000))*(cj9)*(x6536))));
evalcond[8]=((IkReal(0.433420000000000))+(((x6521)*(x6522)))+(((x6521)*(x6526)))+(((IkReal(-1.00000000000000))*(sj9)*(x6536)))+(((IkReal(-1.00000000000000))*(x6522)*(x6533)))+(((IkReal(-1.00000000000000))*(x6526)*(x6533)))+(((IkReal(-1.00000000000000))*(x6527)*(x6528)))+(((IkReal(-1.00000000000000))*(x6528)*(x6530)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x6530)*(x6537)))+(((IkReal(-1.00000000000000))*(x6527)*(x6537))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6540=((cj14)*(r11));
IkReal x6541=((IkReal(1.00000000000000))*(sj9));
IkReal x6542=((cj14)*(r01));
IkReal x6543=((r00)*(sj14));
IkReal x6544=((r10)*(sj14));
IkReal x6545=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x6541)*(x6543)))+(((IkReal(-1.00000000000000))*(x6541)*(x6542)))+(((cj9)*(x6544)))+(((cj9)*(x6540))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x6540)*(x6541)))+(((IkReal(-1.00000000000000))*(x6541)*(x6544)))+(((IkReal(-1.00000000000000))*(x6542)*(x6545)))+(((IkReal(-1.00000000000000))*(x6543)*(x6545))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x6541)*(x6543)))+(((IkReal(-1.00000000000000))*(x6541)*(x6542)))+(((cj9)*(x6544)))+(((cj9)*(x6540)))))+IKsqr(((((IkReal(-1.00000000000000))*(x6540)*(x6541)))+(((IkReal(-1.00000000000000))*(x6541)*(x6544)))+(((IkReal(-1.00000000000000))*(x6542)*(x6545)))+(((IkReal(-1.00000000000000))*(x6543)*(x6545)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x6541)*(x6543)))+(((IkReal(-1.00000000000000))*(x6541)*(x6542)))+(((cj9)*(x6544)))+(((cj9)*(x6540)))), ((((IkReal(-1.00000000000000))*(x6540)*(x6541)))+(((IkReal(-1.00000000000000))*(x6541)*(x6544)))+(((IkReal(-1.00000000000000))*(x6542)*(x6545)))+(((IkReal(-1.00000000000000))*(x6543)*(x6545)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6546=IKsin(j12);
IkReal x6547=((cj13)*(r10));
IkReal x6548=((cj9)*(sj14));
IkReal x6549=((cj13)*(r01));
IkReal x6550=((IkReal(1.00000000000000))*(r10));
IkReal x6551=((cj14)*(r01));
IkReal x6552=((cj9)*(sj13));
IkReal x6553=((IkReal(1.00000000000000))*(cj9));
IkReal x6554=((sj14)*(sj9));
IkReal x6555=((sj13)*(sj9));
IkReal x6556=((cj13)*(r11));
IkReal x6557=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x6558=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6559=((cj13)*(cj14)*(r00));
evalcond[0]=((((sj9)*(x6551)))+(x6546)+(((IkReal(-1.00000000000000))*(x6548)*(x6550)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6553)))+(((r00)*(x6554))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x6548)))+(((IkReal(-1.00000000000000))*(x6551)*(x6553)))+(((IkReal(-1.00000000000000))*(x6557)))+(((IkReal(-1.00000000000000))*(x6550)*(x6554)))+(((IkReal(-1.00000000000000))*(r11)*(x6558))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6549)*(x6554)))+(((IkReal(-1.00000000000000))*(x6557)))+(((sj9)*(x6559)))+(((IkReal(-1.00000000000000))*(r02)*(x6555)))+(((r12)*(x6552)))+(((IkReal(-1.00000000000000))*(cj14)*(x6547)*(x6553)))+(((x6548)*(x6556))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6553)*(x6559)))+(((r02)*(x6552)))+(((IkReal(-1.00000000000000))*(x6547)*(x6558)))+(((r12)*(x6555)))+(((x6554)*(x6556)))+(((IkReal(-1.00000000000000))*(x6546)))+(((x6548)*(x6549))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6560=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6560)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6560)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6560)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6560)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6560)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6560)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6561=IKsin(j12);
IkReal x6562=IKcos(j12);
IkReal x6563=((IkReal(1.00000000000000))*(sj13));
IkReal x6564=((cj13)*(r10));
IkReal x6565=((cj9)*(sj14));
IkReal x6566=((cj13)*(r01));
IkReal x6567=((IkReal(1.00000000000000))*(r10));
IkReal x6568=((r12)*(sj13));
IkReal x6569=((cj13)*(sj14));
IkReal x6570=((cj14)*(r01));
IkReal x6571=((cj13)*(cj14));
IkReal x6572=((IkReal(1.00000000000000))*(cj9));
IkReal x6573=((sj14)*(sj9));
IkReal x6574=((IkReal(1.00000000000000))*(x6561));
IkReal x6575=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj11)*(x6574)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x6563)))+(((IkReal(-1.00000000000000))*(r21)*(x6569)))+(((r20)*(x6571)))+(((cj11)*(x6562))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6565)*(x6567)))+(((IkReal(-1.00000000000000))*(sj11)*(x6574)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6572)))+(((r00)*(x6573)))+(((sj9)*(x6570))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x6565)))+(((IkReal(-1.00000000000000))*(x6567)*(x6573)))+(((IkReal(-1.00000000000000))*(x6562)))+(((IkReal(-1.00000000000000))*(r11)*(x6575)))+(((IkReal(-1.00000000000000))*(x6570)*(x6572))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6566)*(x6573)))+(((IkReal(-1.00000000000000))*(cj14)*(x6564)*(x6572)))+(((sj11)*(x6562)))+(((cj13)*(r11)*(x6565)))+(((cj9)*(x6568)))+(((r00)*(sj9)*(x6571)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6563))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((x6565)*(x6566)))+(((IkReal(-1.00000000000000))*(x6574)))+(((r11)*(sj9)*(x6569)))+(((sj9)*(x6568)))+(((IkReal(-1.00000000000000))*(r00)*(x6571)*(x6572)))+(((IkReal(-1.00000000000000))*(x6564)*(x6575))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6576=((IkReal(1.00000000000000))*(cj14));
IkReal x6577=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x6577)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6576)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6576)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6577))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x6577)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6576)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6576)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6577)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x6577)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6576)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6576)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6577)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6578=IKsin(j12);
IkReal x6579=IKcos(j12);
IkReal x6580=((IkReal(1.00000000000000))*(sj13));
IkReal x6581=((cj13)*(r10));
IkReal x6582=((cj9)*(sj14));
IkReal x6583=((cj13)*(r01));
IkReal x6584=((IkReal(1.00000000000000))*(r10));
IkReal x6585=((r12)*(sj13));
IkReal x6586=((cj13)*(sj14));
IkReal x6587=((cj14)*(r01));
IkReal x6588=((cj13)*(cj14));
IkReal x6589=((IkReal(1.00000000000000))*(cj9));
IkReal x6590=((sj14)*(sj9));
IkReal x6591=((IkReal(1.00000000000000))*(x6578));
IkReal x6592=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x6591))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x6580)))+(((r20)*(x6588)))+(((cj11)*(x6579)))+(((IkReal(-1.00000000000000))*(r21)*(x6586))));
evalcond[2]=((((r00)*(x6590)))+(((IkReal(-1.00000000000000))*(x6582)*(x6584)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6589)))+(((sj9)*(x6587)))+(((IkReal(-1.00000000000000))*(sj11)*(x6591))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x6582)))+(((IkReal(-1.00000000000000))*(r11)*(x6592)))+(((IkReal(-1.00000000000000))*(x6587)*(x6589)))+(((IkReal(-1.00000000000000))*(x6579)))+(((IkReal(-1.00000000000000))*(x6584)*(x6590))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6583)*(x6590)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6580)))+(((cj13)*(r11)*(x6582)))+(((IkReal(-1.00000000000000))*(cj14)*(x6581)*(x6589)))+(((sj11)*(x6579)))+(((cj9)*(x6585)))+(((r00)*(sj9)*(x6588))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x6588)*(x6589)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x6581)*(x6592)))+(((x6582)*(x6583)))+(((sj9)*(x6585)))+(((r11)*(sj9)*(x6586)))+(((IkReal(-1.00000000000000))*(x6591))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6593=IKsin(j12);
IkReal x6594=IKcos(j12);
IkReal x6595=((IkReal(1.00000000000000))*(sj13));
IkReal x6596=((cj13)*(r10));
IkReal x6597=((cj9)*(sj14));
IkReal x6598=((cj13)*(r01));
IkReal x6599=((IkReal(1.00000000000000))*(r10));
IkReal x6600=((r12)*(sj13));
IkReal x6601=((cj13)*(sj14));
IkReal x6602=((cj14)*(r01));
IkReal x6603=((cj13)*(cj14));
IkReal x6604=((IkReal(1.00000000000000))*(cj9));
IkReal x6605=((sj14)*(sj9));
IkReal x6606=((IkReal(1.00000000000000))*(x6593));
IkReal x6607=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x6606))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x6601)))+(((cj11)*(x6594)))+(((r20)*(x6603)))+(((IkReal(-1.00000000000000))*(r22)*(x6595))));
evalcond[2]=((((r00)*(x6605)))+(((IkReal(-1.00000000000000))*(sj11)*(x6606)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6604)))+(((sj9)*(x6602)))+(((IkReal(-1.00000000000000))*(x6597)*(x6599))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6599)*(x6605)))+(((IkReal(-1.00000000000000))*(r00)*(x6597)))+(((IkReal(-1.00000000000000))*(x6602)*(x6604)))+(((IkReal(-1.00000000000000))*(r11)*(x6607)))+(((IkReal(-1.00000000000000))*(x6594))));
evalcond[4]=((((cj9)*(x6600)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6595)))+(((cj13)*(r11)*(x6597)))+(((sj11)*(x6594)))+(((r00)*(sj9)*(x6603)))+(((IkReal(-1.00000000000000))*(x6598)*(x6605)))+(((IkReal(-1.00000000000000))*(cj14)*(x6596)*(x6604))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x6596)*(x6607)))+(((r11)*(sj9)*(x6601)))+(((x6597)*(x6598)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x6603)*(x6604)))+(((sj9)*(x6600)))+(((IkReal(-1.00000000000000))*(x6606))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x6608=((IkReal(0.0100000000000000))*(cj14));
IkReal x6609=((r10)*(sj9));
IkReal x6610=((cj9)*(r11));
IkReal x6611=((sj13)*(sj14));
IkReal x6612=((cj9)*(r00));
IkReal x6613=((IkReal(0.374290000000000))*(cj14));
IkReal x6614=((cj9)*(r01));
IkReal x6615=((r01)*(sj9));
IkReal x6616=((IkReal(0.0100000000000000))*(sj14));
IkReal x6617=((r00)*(sj9));
IkReal x6618=((IkReal(0.374290000000000))*(sj14));
IkReal x6619=((cj13)*(r02));
IkReal x6620=((IkReal(1.00000000000000))*(sj9));
IkReal x6621=((IkReal(1.00000000000000))*(cj9));
IkReal x6622=((cj13)*(r12));
IkReal x6623=((r11)*(sj9));
IkReal x6624=((cj9)*(r10));
IkReal x6625=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((sj11)+(((IkReal(-1.00000000000000))*(r21)*(x6611)))+(((cj13)*(r22)))+(((r20)*(x6625))));
evalcond[2]=((((r21)*(x6616)))+(((r21)*(x6613)))+(pz)+(((IkReal(-0.0690000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(r20)*(x6608)))+(((r20)*(x6618))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x6621)*(x6625)))+(((IkReal(-1.00000000000000))*(x6611)*(x6615)))+(((sj9)*(x6619)))+(((IkReal(-1.00000000000000))*(x6621)*(x6622)))+(cj11)+(((x6610)*(x6611)))+(((x6617)*(x6625))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6612)*(x6625)))+(((x6611)*(x6623)))+(((IkReal(-1.00000000000000))*(x6620)*(x6622)))+(((IkReal(-1.00000000000000))*(x6619)*(x6621)))+(((x6611)*(x6614)))+(((IkReal(-1.00000000000000))*(x6609)*(x6625))));
evalcond[5]=((((x6613)*(x6615)))+(((IkReal(-1.00000000000000))*(x6608)*(x6617)))+(((IkReal(-1.00000000000000))*(x6618)*(x6624)))+(((x6608)*(x6624)))+(((IkReal(-1.00000000000000))*(x6610)*(x6616)))+(((IkReal(-1.00000000000000))*(x6610)*(x6613)))+(((IkReal(0.0690000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(py)*(x6621)))+(((x6617)*(x6618)))+(((px)*(sj9)))+(((x6615)*(x6616))));
evalcond[6]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x6613)*(x6614)))+(((IkReal(-1.00000000000000))*(x6612)*(x6618)))+(((IkReal(-1.00000000000000))*(x6614)*(x6616)))+(((IkReal(-1.00000000000000))*(x6609)*(x6618)))+(((x6608)*(x6612)))+(((IkReal(-1.00000000000000))*(x6616)*(x6623)))+(((IkReal(-1.00000000000000))*(py)*(x6620)))+(((x6608)*(x6609)))+(((IkReal(-1.00000000000000))*(px)*(x6621)))+(((IkReal(-1.00000000000000))*(x6613)*(x6623))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x6626=((IkReal(0.0100000000000000))*(cj14));
IkReal x6627=((r10)*(sj9));
IkReal x6628=((cj9)*(r11));
IkReal x6629=((sj13)*(sj14));
IkReal x6630=((cj9)*(r00));
IkReal x6631=((IkReal(0.374290000000000))*(cj14));
IkReal x6632=((cj9)*(r01));
IkReal x6633=((r01)*(sj9));
IkReal x6634=((IkReal(0.0100000000000000))*(sj14));
IkReal x6635=((r00)*(sj9));
IkReal x6636=((IkReal(0.374290000000000))*(sj14));
IkReal x6637=((cj13)*(r02));
IkReal x6638=((cj9)*(r12));
IkReal x6639=((IkReal(1.00000000000000))*(sj9));
IkReal x6640=((IkReal(1.00000000000000))*(cj9));
IkReal x6641=((r11)*(sj9));
IkReal x6642=((cj9)*(r10));
IkReal x6643=((cj14)*(sj13));
IkReal x6644=((IkReal(1.00000000000000))*(cj13));
IkReal x6645=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x6643)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x6629))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((r21)*(x6631)))+(((r21)*(x6634)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x6626)))+(((r20)*(x6636))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x6628)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6640)))+(((cj14)*(x6633)))+(((sj14)*(x6635))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x6638)*(x6644)))+(((IkReal(-1.00000000000000))*(x6629)*(x6633)))+(((sj9)*(x6637)))+(((x6635)*(x6643)))+(((x6628)*(x6629)))+(((IkReal(-1.00000000000000))*(r10)*(x6640)*(x6643))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj13)*(x6639)))+(((sj13)*(x6638)))+(((x6635)*(x6645)))+(((IkReal(-1.00000000000000))*(sj14)*(x6633)*(x6644)))+(((cj13)*(sj14)*(x6628)))+(((IkReal(-1.00000000000000))*(r10)*(x6640)*(x6645))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x6637)*(x6640)))+(((IkReal(-1.00000000000000))*(x6627)*(x6643)))+(((x6629)*(x6632)))+(((x6629)*(x6641)))+(((IkReal(-1.00000000000000))*(x6630)*(x6643)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x6639))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x6628)*(x6631)))+(((IkReal(-1.00000000000000))*(x6628)*(x6634)))+(((x6626)*(x6642)))+(((IkReal(-1.00000000000000))*(x6636)*(x6642)))+(((x6635)*(x6636)))+(((IkReal(-1.00000000000000))*(py)*(x6640)))+(((x6633)*(x6634)))+(((px)*(sj9)))+(((x6631)*(x6633)))+(((IkReal(-1.00000000000000))*(x6626)*(x6635))));
evalcond[8]=((IkReal(-0.295420000000000))+(((x6626)*(x6627)))+(((x6626)*(x6630)))+(((IkReal(-1.00000000000000))*(x6634)*(x6641)))+(((IkReal(-1.00000000000000))*(py)*(x6639)))+(((IkReal(-1.00000000000000))*(x6630)*(x6636)))+(((IkReal(-1.00000000000000))*(x6632)*(x6634)))+(((IkReal(-1.00000000000000))*(px)*(x6640)))+(((IkReal(-1.00000000000000))*(x6627)*(x6636)))+(((IkReal(-1.00000000000000))*(x6631)*(x6632)))+(((IkReal(-1.00000000000000))*(x6631)*(x6641))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6646=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x6646))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6646)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x6646)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6646)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x6646)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6646)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6647=IKcos(j12);
IkReal x6648=IKsin(j12);
IkReal x6649=((cj13)*(sj9));
IkReal x6650=((IkReal(1.00000000000000))*(cj14));
IkReal x6651=((cj13)*(sj14));
IkReal x6652=((cj9)*(r00));
IkReal x6653=((cj9)*(r01));
IkReal x6654=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(x6648)+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x6651)))+(((IkReal(-1.00000000000000))*(x6647)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6652)*(x6654)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6654)))+(x6647)+(((IkReal(-1.00000000000000))*(x6650)*(x6653)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6650))));
evalcond[3]=((x6648)+(((cj9)*(r02)*(sj13)))+(((r11)*(sj14)*(x6649)))+(((IkReal(-1.00000000000000))*(cj13)*(x6650)*(x6652)))+(((IkReal(-1.00000000000000))*(r10)*(x6649)*(x6650)))+(((x6651)*(x6653)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6655=((IkReal(0.0100000000000000))*(cj14));
IkReal x6656=((r10)*(sj9));
IkReal x6657=((cj9)*(r11));
IkReal x6658=((sj13)*(sj14));
IkReal x6659=((cj9)*(r00));
IkReal x6660=((IkReal(0.374290000000000))*(cj14));
IkReal x6661=((cj9)*(r01));
IkReal x6662=((r01)*(sj9));
IkReal x6663=((IkReal(0.0100000000000000))*(sj14));
IkReal x6664=((r00)*(sj9));
IkReal x6665=((IkReal(0.374290000000000))*(sj14));
IkReal x6666=((cj13)*(r02));
IkReal x6667=((cj9)*(r12));
IkReal x6668=((IkReal(1.00000000000000))*(sj9));
IkReal x6669=((IkReal(1.00000000000000))*(cj9));
IkReal x6670=((r11)*(sj9));
IkReal x6671=((cj9)*(r10));
IkReal x6672=((cj14)*(sj13));
IkReal x6673=((IkReal(1.00000000000000))*(cj13));
IkReal x6674=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x6672)))+(((IkReal(-1.00000000000000))*(r21)*(x6658)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x6655)))+(((r20)*(x6665)))+(pz)+(((r21)*(x6660)))+(((r21)*(x6663))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x6657)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6669)))+(((cj14)*(x6662)))+(((sj14)*(x6664))));
evalcond[4]=((IkReal(-1.00000000000000))+(((x6664)*(x6672)))+(((IkReal(-1.00000000000000))*(x6658)*(x6662)))+(((x6657)*(x6658)))+(((IkReal(-1.00000000000000))*(r10)*(x6669)*(x6672)))+(((IkReal(-1.00000000000000))*(x6667)*(x6673)))+(((sj9)*(x6666))));
evalcond[5]=((((x6664)*(x6674)))+(((cj13)*(sj14)*(x6657)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x6668)))+(((IkReal(-1.00000000000000))*(sj14)*(x6662)*(x6673)))+(((IkReal(-1.00000000000000))*(r10)*(x6669)*(x6674)))+(((sj13)*(x6667))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x6668)))+(((x6658)*(x6670)))+(((IkReal(-1.00000000000000))*(x6656)*(x6672)))+(((x6658)*(x6661)))+(((IkReal(-1.00000000000000))*(x6659)*(x6672)))+(((IkReal(-1.00000000000000))*(x6666)*(x6669))));
evalcond[7]=((((x6664)*(x6665)))+(((x6660)*(x6662)))+(((IkReal(-1.00000000000000))*(x6657)*(x6660)))+(((IkReal(-1.00000000000000))*(x6657)*(x6663)))+(((IkReal(-1.00000000000000))*(py)*(x6669)))+(((IkReal(-1.00000000000000))*(x6665)*(x6671)))+(((IkReal(-1.00000000000000))*(x6655)*(x6664)))+(((x6655)*(x6671)))+(((px)*(sj9)))+(((x6662)*(x6663))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x6661)*(x6663)))+(((IkReal(-1.00000000000000))*(py)*(x6668)))+(((IkReal(-1.00000000000000))*(x6660)*(x6661)))+(((IkReal(-1.00000000000000))*(x6660)*(x6670)))+(((IkReal(-1.00000000000000))*(px)*(x6669)))+(((IkReal(-1.00000000000000))*(x6659)*(x6665)))+(((IkReal(-1.00000000000000))*(x6663)*(x6670)))+(((x6655)*(x6659)))+(((x6655)*(x6656)))+(((IkReal(-1.00000000000000))*(x6656)*(x6665))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6675=IKcos(j12);
IkReal x6676=IKsin(j12);
IkReal x6677=((cj13)*(sj9));
IkReal x6678=((IkReal(1.00000000000000))*(cj14));
IkReal x6679=((cj13)*(sj14));
IkReal x6680=((cj9)*(r00));
IkReal x6681=((cj9)*(r01));
IkReal x6682=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6676))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(x6675)+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x6679))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6680)*(x6682)))+(((IkReal(-1.00000000000000))*(x6678)*(x6681)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6682)))+(x6675)+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6678))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x6677)*(x6678)))+(((IkReal(-1.00000000000000))*(cj13)*(x6678)*(x6680)))+(x6676)+(((cj9)*(r02)*(sj13)))+(((r11)*(sj14)*(x6677)))+(((x6679)*(x6681)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6683=((IkReal(0.0100000000000000))*(cj14));
IkReal x6684=((r10)*(sj9));
IkReal x6685=((cj9)*(r11));
IkReal x6686=((sj13)*(sj14));
IkReal x6687=((cj14)*(r21));
IkReal x6688=((cj9)*(r00));
IkReal x6689=((IkReal(0.374290000000000))*(cj14));
IkReal x6690=((cj9)*(r01));
IkReal x6691=((r01)*(sj9));
IkReal x6692=((IkReal(0.0100000000000000))*(sj14));
IkReal x6693=((IkReal(1.00000000000000))*(sj13));
IkReal x6694=((r00)*(sj9));
IkReal x6695=((IkReal(0.374290000000000))*(sj14));
IkReal x6696=((cj13)*(sj9));
IkReal x6697=((IkReal(1.00000000000000))*(cj13));
IkReal x6698=((IkReal(1.00000000000000))*(py));
IkReal x6699=((r11)*(sj9));
IkReal x6700=((cj9)*(r10));
IkReal x6701=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x6687)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x6701)))+(((IkReal(-1.00000000000000))*(r21)*(x6686)))+(((cj13)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x6683)))+(((IkReal(0.374290000000000))*(x6687)))+(((r21)*(x6692)))+(pz)+(((r20)*(x6695))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6697)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6693))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj14)*(x6693)*(x6700)))+(((x6694)*(x6701)))+(((IkReal(-1.00000000000000))*(x6686)*(x6691)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x6697)))+(((x6685)*(x6686)))+(((r02)*(x6696))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x6688)*(x6693)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x6697)))+(((IkReal(-1.00000000000000))*(cj14)*(x6684)*(x6693)))+(((IkReal(-1.00000000000000))*(r12)*(x6696)))+(((x6686)*(x6690)))+(((x6686)*(x6699))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x6685)*(x6692)))+(((IkReal(-1.00000000000000))*(x6695)*(x6700)))+(((x6689)*(x6691)))+(((IkReal(-1.00000000000000))*(x6683)*(x6694)))+(((x6691)*(x6692)))+(((px)*(sj9)))+(((x6694)*(x6695)))+(((IkReal(-1.00000000000000))*(x6685)*(x6689)))+(((x6683)*(x6700)))+(((IkReal(-1.00000000000000))*(cj9)*(x6698))));
evalcond[8]=((IkReal(-0.295420000000000))+(((x6683)*(x6684)))+(((x6683)*(x6688)))+(((IkReal(-1.00000000000000))*(x6684)*(x6695)))+(((IkReal(-1.00000000000000))*(x6688)*(x6695)))+(((IkReal(-1.00000000000000))*(x6689)*(x6699)))+(((IkReal(-1.00000000000000))*(x6689)*(x6690)))+(((IkReal(-1.00000000000000))*(x6690)*(x6692)))+(((IkReal(-1.00000000000000))*(x6692)*(x6699)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x6698))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6702=((r00)*(sj14));
IkReal x6703=((cj14)*(r01));
IkReal x6704=((cj14)*(r11));
IkReal x6705=((r10)*(sj14));
IkReal x6706=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x6705)*(x6706)))+(((IkReal(-1.00000000000000))*(x6704)*(x6706)))+(((sj9)*(x6702)))+(((sj9)*(x6703))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x6702)))+(((cj9)*(x6703)))+(((sj9)*(x6704)))+(((sj9)*(x6705))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x6705)*(x6706)))+(((IkReal(-1.00000000000000))*(x6704)*(x6706)))+(((sj9)*(x6702)))+(((sj9)*(x6703)))))+IKsqr(((((cj9)*(x6702)))+(((cj9)*(x6703)))+(((sj9)*(x6704)))+(((sj9)*(x6705)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x6705)*(x6706)))+(((IkReal(-1.00000000000000))*(x6704)*(x6706)))+(((sj9)*(x6702)))+(((sj9)*(x6703)))), ((((cj9)*(x6702)))+(((cj9)*(x6703)))+(((sj9)*(x6704)))+(((sj9)*(x6705)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6707=IKcos(j12);
IkReal x6708=IKsin(j12);
IkReal x6709=((sj13)*(sj9));
IkReal x6710=((sj14)*(sj9));
IkReal x6711=((cj13)*(r11));
IkReal x6712=((cj9)*(sj14));
IkReal x6713=((cj13)*(r10));
IkReal x6714=((cj13)*(r01));
IkReal x6715=((cj13)*(r00));
IkReal x6716=((cj14)*(sj9));
IkReal x6717=((IkReal(1.00000000000000))*(r10));
IkReal x6718=((cj9)*(sj13));
IkReal x6719=((IkReal(1.00000000000000))*(x6716));
IkReal x6720=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x6712)*(x6717)))+(((IkReal(-1.00000000000000))*(r11)*(x6720)))+(((r01)*(x6716)))+(((IkReal(-1.00000000000000))*(x6708)))+(((r00)*(x6710))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x6712)))+(x6707)+(((IkReal(-1.00000000000000))*(x6710)*(x6717)))+(((IkReal(-1.00000000000000))*(r11)*(x6719)))+(((IkReal(-1.00000000000000))*(r01)*(x6720))));
evalcond[2]=((((x6715)*(x6716)))+(((x6711)*(x6712)))+(((IkReal(-1.00000000000000))*(x6713)*(x6720)))+(((IkReal(-1.00000000000000))*(r02)*(x6709)))+(x6707)+(((IkReal(-1.00000000000000))*(x6710)*(x6714)))+(((r12)*(x6718))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6713)*(x6719)))+(x6708)+(((r02)*(x6718)))+(((x6712)*(x6714)))+(((x6710)*(x6711)))+(((IkReal(-1.00000000000000))*(x6715)*(x6720)))+(((r12)*(x6709))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6721=((IkReal(0.0100000000000000))*(cj14));
IkReal x6722=((r10)*(sj9));
IkReal x6723=((cj9)*(r11));
IkReal x6724=((sj13)*(sj14));
IkReal x6725=((cj14)*(r21));
IkReal x6726=((cj9)*(r00));
IkReal x6727=((IkReal(0.374290000000000))*(cj14));
IkReal x6728=((cj9)*(r01));
IkReal x6729=((r01)*(sj9));
IkReal x6730=((IkReal(0.0100000000000000))*(sj14));
IkReal x6731=((IkReal(1.00000000000000))*(sj13));
IkReal x6732=((r00)*(sj9));
IkReal x6733=((IkReal(0.374290000000000))*(sj14));
IkReal x6734=((cj13)*(sj9));
IkReal x6735=((IkReal(1.00000000000000))*(cj13));
IkReal x6736=((IkReal(1.00000000000000))*(py));
IkReal x6737=((r11)*(sj9));
IkReal x6738=((cj9)*(r10));
IkReal x6739=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x6725)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x6739)))+(((IkReal(-1.00000000000000))*(r21)*(x6724)))+(((cj13)*(r22))));
evalcond[3]=((((r21)*(x6730)))+(((IkReal(-1.00000000000000))*(r20)*(x6721)))+(((IkReal(0.374290000000000))*(x6725)))+(pz)+(((r20)*(x6733))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x6731)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x6735))));
evalcond[5]=((((x6732)*(x6739)))+(((IkReal(-1.00000000000000))*(cj14)*(x6731)*(x6738)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x6735)))+(((x6723)*(x6724)))+(((IkReal(-1.00000000000000))*(x6724)*(x6729)))+(((r02)*(x6734))));
evalcond[6]=((((x6724)*(x6728)))+(((IkReal(-1.00000000000000))*(cj14)*(x6722)*(x6731)))+(((x6724)*(x6737)))+(((IkReal(-1.00000000000000))*(cj14)*(x6726)*(x6731)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x6735)))+(((IkReal(-1.00000000000000))*(r12)*(x6734))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x6732)*(x6733)))+(((x6729)*(x6730)))+(((IkReal(-1.00000000000000))*(x6723)*(x6730)))+(((IkReal(-1.00000000000000))*(x6723)*(x6727)))+(((IkReal(-1.00000000000000))*(x6733)*(x6738)))+(((IkReal(-1.00000000000000))*(x6721)*(x6732)))+(((x6721)*(x6738)))+(((px)*(sj9)))+(((x6727)*(x6729)))+(((IkReal(-1.00000000000000))*(cj9)*(x6736))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x6730)*(x6737)))+(((IkReal(-1.00000000000000))*(x6727)*(x6737)))+(((IkReal(-1.00000000000000))*(x6728)*(x6730)))+(((IkReal(-1.00000000000000))*(x6726)*(x6733)))+(((IkReal(-1.00000000000000))*(sj9)*(x6736)))+(((IkReal(-1.00000000000000))*(x6722)*(x6733)))+(((x6721)*(x6726)))+(((x6721)*(x6722)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x6727)*(x6728))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6740=((cj14)*(cj9));
IkReal x6741=((IkReal(1.00000000000000))*(sj9));
IkReal x6742=((r00)*(sj14));
IkReal x6743=((r10)*(sj14));
if( IKabs(((((r11)*(x6740)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6741)))+(((cj9)*(x6743)))+(((IkReal(-1.00000000000000))*(x6741)*(x6742))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((cj9)*(x6742)))+(((r01)*(x6740)))+(((sj9)*(x6743))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r11)*(x6740)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6741)))+(((cj9)*(x6743)))+(((IkReal(-1.00000000000000))*(x6741)*(x6742)))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((cj9)*(x6742)))+(((r01)*(x6740)))+(((sj9)*(x6743)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((r11)*(x6740)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x6741)))+(((cj9)*(x6743)))+(((IkReal(-1.00000000000000))*(x6741)*(x6742)))), ((((cj14)*(r11)*(sj9)))+(((cj9)*(x6742)))+(((r01)*(x6740)))+(((sj9)*(x6743)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6744=IKcos(j12);
IkReal x6745=IKsin(j12);
IkReal x6746=((r12)*(sj13));
IkReal x6747=((sj14)*(sj9));
IkReal x6748=((cj13)*(r11));
IkReal x6749=((cj9)*(sj14));
IkReal x6750=((IkReal(1.00000000000000))*(cj14));
IkReal x6751=((cj13)*(cj9));
IkReal x6752=((cj13)*(r01));
IkReal x6753=((cj14)*(sj9));
IkReal x6754=((IkReal(1.00000000000000))*(r10));
IkReal x6755=((r02)*(sj13));
evalcond[0]=((((r01)*(x6753)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x6750)))+(x6745)+(((IkReal(-1.00000000000000))*(x6749)*(x6754)))+(((r00)*(x6747))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x6749)))+(x6744)+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6750)))+(((IkReal(-1.00000000000000))*(x6747)*(x6754)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6750))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6744)))+(((cj13)*(r00)*(x6753)))+(((x6748)*(x6749)))+(((cj9)*(x6746)))+(((IkReal(-1.00000000000000))*(x6747)*(x6752)))+(((IkReal(-1.00000000000000))*(r10)*(x6750)*(x6751)))+(((IkReal(-1.00000000000000))*(sj9)*(x6755))));
evalcond[3]=((((x6747)*(x6748)))+(x6745)+(((IkReal(-1.00000000000000))*(r00)*(x6750)*(x6751)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x6750)))+(((x6749)*(x6752)))+(((cj9)*(x6755)))+(((sj9)*(x6746))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6756=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x6756)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x6756))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x6756)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x6756)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x6756)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x6756)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6757=IKsin(j12);
IkReal x6758=IKcos(j12);
IkReal x6759=((IkReal(1.00000000000000))*(sj13));
IkReal x6760=((cj13)*(r10));
IkReal x6761=((cj9)*(sj14));
IkReal x6762=((cj13)*(r01));
IkReal x6763=((IkReal(1.00000000000000))*(r10));
IkReal x6764=((r12)*(sj13));
IkReal x6765=((cj13)*(sj14));
IkReal x6766=((cj14)*(r01));
IkReal x6767=((cj13)*(cj14));
IkReal x6768=((IkReal(1.00000000000000))*(cj9));
IkReal x6769=((sj14)*(sj9));
IkReal x6770=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x6757))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj11)*(x6758)))+(((r20)*(x6767)))+(((IkReal(-1.00000000000000))*(r22)*(x6759)))+(((IkReal(-1.00000000000000))*(r21)*(x6765))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6768)))+(((r00)*(x6769)))+(((sj9)*(x6766)))+(((IkReal(-1.00000000000000))*(sj11)*(x6757)))+(((IkReal(-1.00000000000000))*(x6761)*(x6763))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6766)*(x6768)))+(((IkReal(-1.00000000000000))*(r11)*(x6770)))+(x6758)+(((IkReal(-1.00000000000000))*(r00)*(x6761)))+(((IkReal(-1.00000000000000))*(x6763)*(x6769))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6759)))+(((IkReal(-1.00000000000000))*(x6762)*(x6769)))+(((IkReal(-1.00000000000000))*(cj14)*(x6760)*(x6768)))+(((r00)*(sj9)*(x6767)))+(((sj11)*(x6758)))+(((cj9)*(x6764)))+(((cj13)*(r11)*(x6761))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x6760)*(x6770)))+(((cj9)*(r02)*(sj13)))+(x6757)+(((sj9)*(x6764)))+(((x6761)*(x6762)))+(((r11)*(sj9)*(x6765)))+(((IkReal(-1.00000000000000))*(r00)*(x6767)*(x6768))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6771=IKsin(j12);
IkReal x6772=IKcos(j12);
IkReal x6773=((IkReal(1.00000000000000))*(sj13));
IkReal x6774=((cj13)*(r10));
IkReal x6775=((cj9)*(sj14));
IkReal x6776=((cj13)*(r01));
IkReal x6777=((IkReal(1.00000000000000))*(r10));
IkReal x6778=((r12)*(sj13));
IkReal x6779=((cj13)*(sj14));
IkReal x6780=((cj14)*(r01));
IkReal x6781=((cj13)*(cj14));
IkReal x6782=((IkReal(1.00000000000000))*(cj9));
IkReal x6783=((sj14)*(sj9));
IkReal x6784=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x6771))));
evalcond[1]=((((r20)*(x6781)))+(((IkReal(-1.00000000000000))*(r22)*(x6773)))+(((IkReal(-1.00000000000000))*(cj11)*(x6772)))+(((IkReal(-1.00000000000000))*(r21)*(x6779))));
evalcond[2]=((((sj9)*(x6780)))+(((IkReal(-1.00000000000000))*(sj11)*(x6771)))+(((IkReal(-1.00000000000000))*(x6775)*(x6777)))+(((r00)*(x6783)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6782))));
evalcond[3]=((x6772)+(((IkReal(-1.00000000000000))*(r11)*(x6784)))+(((IkReal(-1.00000000000000))*(r00)*(x6775)))+(((IkReal(-1.00000000000000))*(x6780)*(x6782)))+(((IkReal(-1.00000000000000))*(x6777)*(x6783))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6773)))+(((sj11)*(x6772)))+(((IkReal(-1.00000000000000))*(x6776)*(x6783)))+(((r00)*(sj9)*(x6781)))+(((cj13)*(r11)*(x6775)))+(((cj9)*(x6778)))+(((IkReal(-1.00000000000000))*(cj14)*(x6774)*(x6782))));
evalcond[5]=((((x6775)*(x6776)))+(((cj9)*(r02)*(sj13)))+(x6771)+(((IkReal(-1.00000000000000))*(x6774)*(x6784)))+(((sj9)*(x6778)))+(((r11)*(sj9)*(x6779)))+(((IkReal(-1.00000000000000))*(r00)*(x6781)*(x6782))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6785=((IkReal(1.00000000000000))*(r21));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj14)*(x6785)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6785))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(cj14)*(x6785)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((gconst10)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x6785)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6786=IKsin(j12);
IkReal x6787=IKcos(j12);
IkReal x6788=((IkReal(1.00000000000000))*(sj13));
IkReal x6789=((cj13)*(r10));
IkReal x6790=((cj9)*(sj14));
IkReal x6791=((cj13)*(r01));
IkReal x6792=((IkReal(1.00000000000000))*(r10));
IkReal x6793=((r12)*(sj13));
IkReal x6794=((cj13)*(sj14));
IkReal x6795=((cj14)*(r01));
IkReal x6796=((cj13)*(cj14));
IkReal x6797=((IkReal(1.00000000000000))*(cj9));
IkReal x6798=((sj14)*(sj9));
IkReal x6799=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj11)*(x6786))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj11)*(x6787)))+(((r20)*(x6796)))+(((IkReal(-1.00000000000000))*(r21)*(x6794)))+(((IkReal(-1.00000000000000))*(r22)*(x6788))));
evalcond[2]=((((r00)*(x6798)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6797)))+(((IkReal(-1.00000000000000))*(sj11)*(x6786)))+(((IkReal(-1.00000000000000))*(x6790)*(x6792)))+(((sj9)*(x6795))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x6799)))+(((IkReal(-1.00000000000000))*(x6792)*(x6798)))+(((IkReal(-1.00000000000000))*(x6795)*(x6797)))+(x6787)+(((IkReal(-1.00000000000000))*(r00)*(x6790))));
evalcond[4]=((((cj13)*(r11)*(x6790)))+(((IkReal(-1.00000000000000))*(x6791)*(x6798)))+(((cj9)*(x6793)))+(((IkReal(-1.00000000000000))*(cj14)*(x6789)*(x6797)))+(((sj11)*(x6787)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6788)))+(((r00)*(sj9)*(x6796))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x6789)*(x6799)))+(((IkReal(-1.00000000000000))*(r00)*(x6796)*(x6797)))+(((cj9)*(r02)*(sj13)))+(x6786)+(((r11)*(sj9)*(x6794)))+(((sj9)*(x6793)))+(((x6790)*(x6791))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x6800=((cj9)*(r11));
IkReal x6801=((sj13)*(sj14));
IkReal x6802=((IkReal(0.0100000000000000))*(cj14));
IkReal x6803=((cj9)*(r00));
IkReal x6804=((IkReal(0.374290000000000))*(cj14));
IkReal x6805=((r10)*(sj9));
IkReal x6806=((r01)*(sj9));
IkReal x6807=((IkReal(0.0100000000000000))*(sj14));
IkReal x6808=((r00)*(sj9));
IkReal x6809=((IkReal(0.374290000000000))*(sj14));
IkReal x6810=((cj13)*(sj9));
IkReal x6811=((cj9)*(r01));
IkReal x6812=((IkReal(1.00000000000000))*(py));
IkReal x6813=((r11)*(sj9));
IkReal x6814=((cj9)*(r10));
IkReal x6815=((cj14)*(sj13));
IkReal x6816=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x6801)))+(((IkReal(-1.00000000000000))*(cj10)))+(((cj13)*(r22)))+(((r20)*(x6815))));
evalcond[2]=((((r21)*(x6807)))+(((r21)*(x6804)))+(((r20)*(x6809)))+(pz)+(((IkReal(0.364420000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r20)*(x6802))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6801)*(x6806)))+(((x6800)*(x6801)))+(((r02)*(x6810)))+(((IkReal(-1.00000000000000))*(r12)*(x6816)))+(((x6808)*(x6815)))+(((IkReal(-1.00000000000000))*(x6814)*(x6815))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6805)*(x6815)))+(((IkReal(-1.00000000000000))*(x6803)*(x6815)))+(((IkReal(-1.00000000000000))*(r12)*(x6810)))+(sj10)+(((x6801)*(x6811)))+(((x6801)*(x6813)))+(((IkReal(-1.00000000000000))*(r02)*(x6816))));
evalcond[5]=((IkReal(0.0690000000000000))+(((x6808)*(x6809)))+(((x6802)*(x6814)))+(((IkReal(-1.00000000000000))*(x6809)*(x6814)))+(((IkReal(-1.00000000000000))*(cj9)*(x6812)))+(((IkReal(-1.00000000000000))*(x6802)*(x6808)))+(((x6804)*(x6806)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x6800)*(x6807)))+(((IkReal(-1.00000000000000))*(x6800)*(x6804)))+(((x6806)*(x6807))));
evalcond[6]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x6803)*(x6809)))+(((IkReal(-1.00000000000000))*(x6807)*(x6811)))+(((IkReal(-1.00000000000000))*(x6807)*(x6813)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(sj9)*(x6812)))+(((IkReal(-1.00000000000000))*(x6805)*(x6809)))+(((IkReal(-1.00000000000000))*(x6804)*(x6811)))+(((IkReal(-1.00000000000000))*(x6804)*(x6813)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((x6802)*(x6805)))+(((x6802)*(x6803))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x6817=((IkReal(0.0100000000000000))*(cj14));
IkReal x6818=((r10)*(sj9));
IkReal x6819=((cj9)*(sj14));
IkReal x6820=((r11)*(sj13));
IkReal x6821=((cj9)*(r00));
IkReal x6822=((IkReal(1.00000000000000))*(sj9));
IkReal x6823=((cj14)*(r11));
IkReal x6824=((r01)*(sj14));
IkReal x6825=((r21)*(sj14));
IkReal x6826=((IkReal(0.0100000000000000))*(r11));
IkReal x6827=((r00)*(sj9));
IkReal x6828=((IkReal(0.374290000000000))*(sj14));
IkReal x6829=((cj13)*(r02));
IkReal x6830=((IkReal(1.00000000000000))*(cj14));
IkReal x6831=((IkReal(1.00000000000000))*(cj9));
IkReal x6832=((cj13)*(r12));
IkReal x6833=((sj14)*(sj9));
IkReal x6834=((cj9)*(r10));
IkReal x6835=((cj14)*(sj13));
IkReal x6836=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x6825)))+(((r20)*(x6835)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x6817)))+(((r20)*(x6828)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x6825))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x6818)))+(((IkReal(-1.00000000000000))*(x6822)*(x6823)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6830)))+(((IkReal(-1.00000000000000))*(r00)*(x6819))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj13)*(x6830)*(x6834)))+(((sj9)*(x6829)))+(((x6819)*(x6820)))+(((x6827)*(x6835)))+(((IkReal(-1.00000000000000))*(x6831)*(x6832)))+(((IkReal(-1.00000000000000))*(sj13)*(x6822)*(x6824))));
evalcond[5]=((IkReal(1.00000000000000))+(((x6820)*(x6833)))+(((r01)*(sj13)*(x6819)))+(((IkReal(-1.00000000000000))*(x6829)*(x6831)))+(((IkReal(-1.00000000000000))*(sj13)*(x6818)*(x6830)))+(((IkReal(-1.00000000000000))*(x6822)*(x6832)))+(((IkReal(-1.00000000000000))*(sj13)*(x6821)*(x6830))));
evalcond[6]=((((cj13)*(r11)*(x6833)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x6819)))+(((IkReal(-1.00000000000000))*(cj13)*(x6821)*(x6830)))+(((IkReal(-1.00000000000000))*(cj13)*(x6818)*(x6830)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x6817)*(x6827)))+(((IkReal(-0.374290000000000))*(cj9)*(x6823)))+(((x6817)*(x6834)))+(((IkReal(-1.00000000000000))*(py)*(x6831)))+(((IkReal(-0.374290000000000))*(r10)*(x6819)))+(((sj9)*(x6836)))+(((IkReal(0.0100000000000000))*(sj9)*(x6824)))+(((px)*(sj9)))+(((x6827)*(x6828)))+(((IkReal(-1.00000000000000))*(x6819)*(x6826))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x6836)))+(((x6817)*(x6821)))+(((IkReal(-1.00000000000000))*(x6826)*(x6833)))+(((IkReal(-0.0100000000000000))*(r01)*(x6819)))+(((IkReal(-1.00000000000000))*(x6818)*(x6828)))+(((IkReal(-1.00000000000000))*(py)*(x6822)))+(((IkReal(-1.00000000000000))*(px)*(x6831)))+(((IkReal(-0.374290000000000))*(r00)*(x6819)))+(((IkReal(-0.374290000000000))*(sj9)*(x6823)))+(((x6817)*(x6818))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6837=IKcos(j12);
IkReal x6838=((sj14)*(sj9));
IkReal x6839=((IkReal(1.00000000000000))*(sj13));
IkReal x6840=((cj13)*(sj14));
IkReal x6841=((cj9)*(r11));
IkReal x6842=((IkReal(1.00000000000000))*(cj13));
IkReal x6843=((cj9)*(r10));
IkReal x6844=((cj14)*(sj9));
IkReal x6845=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6837))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x6845)))+(((IkReal(-1.00000000000000))*(r22)*(x6839)))+(((IkReal(-1.00000000000000))*(r21)*(x6840))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6845)))+(((r00)*(x6838)))+(((IkReal(-1.00000000000000))*(sj14)*(x6843)))+(((IkReal(-1.00000000000000))*(cj14)*(x6841)))+(((r01)*(x6844))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj14)*(x6842)*(x6843)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6839)))+(((IkReal(-1.00000000000000))*(r01)*(x6838)*(x6842)))+(((cj13)*(r00)*(x6844)))+(x6837)+(((x6840)*(x6841)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6846=((IkReal(0.0100000000000000))*(cj14));
IkReal x6847=((r10)*(sj9));
IkReal x6848=((cj9)*(sj14));
IkReal x6849=((r11)*(sj13));
IkReal x6850=((cj9)*(r00));
IkReal x6851=((IkReal(1.00000000000000))*(sj9));
IkReal x6852=((cj14)*(r11));
IkReal x6853=((r01)*(sj14));
IkReal x6854=((r21)*(sj14));
IkReal x6855=((IkReal(0.0100000000000000))*(r11));
IkReal x6856=((r00)*(sj9));
IkReal x6857=((IkReal(0.374290000000000))*(sj14));
IkReal x6858=((cj13)*(r02));
IkReal x6859=((IkReal(1.00000000000000))*(cj14));
IkReal x6860=((IkReal(1.00000000000000))*(cj9));
IkReal x6861=((cj13)*(r12));
IkReal x6862=((sj14)*(sj9));
IkReal x6863=((cj9)*(r10));
IkReal x6864=((cj14)*(sj13));
IkReal x6865=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x6854)))+(((r20)*(x6864)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(0.0100000000000000))*(x6854)))+(((IkReal(-1.00000000000000))*(r20)*(x6846)))+(pz)+(((r20)*(x6857)))+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj14)*(x6847)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6859)))+(((IkReal(-1.00000000000000))*(x6851)*(x6852)))+(((IkReal(-1.00000000000000))*(r00)*(x6848))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6860)*(x6861)))+(((x6848)*(x6849)))+(((IkReal(-1.00000000000000))*(sj13)*(x6859)*(x6863)))+(((sj9)*(x6858)))+(((x6856)*(x6864)))+(((IkReal(-1.00000000000000))*(sj13)*(x6851)*(x6853))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(sj13)*(x6848)))+(((x6849)*(x6862)))+(((IkReal(-1.00000000000000))*(x6851)*(x6861)))+(((IkReal(-1.00000000000000))*(sj13)*(x6850)*(x6859)))+(((IkReal(-1.00000000000000))*(x6858)*(x6860)))+(((IkReal(-1.00000000000000))*(sj13)*(x6847)*(x6859))));
evalcond[6]=((((cj13)*(r11)*(x6862)))+(((IkReal(-1.00000000000000))*(cj13)*(x6847)*(x6859)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x6848)))+(((IkReal(-1.00000000000000))*(cj13)*(x6850)*(x6859)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x6856)*(x6857)))+(((IkReal(-0.374290000000000))*(r10)*(x6848)))+(((IkReal(-1.00000000000000))*(x6846)*(x6856)))+(((IkReal(-0.374290000000000))*(cj9)*(x6852)))+(((sj9)*(x6865)))+(((x6846)*(x6863)))+(((IkReal(0.0100000000000000))*(sj9)*(x6853)))+(((IkReal(-1.00000000000000))*(x6848)*(x6855)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x6860))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.374290000000000))*(r00)*(x6848)))+(((IkReal(-1.00000000000000))*(x6847)*(x6857)))+(((IkReal(-1.00000000000000))*(py)*(x6851)))+(((IkReal(-1.00000000000000))*(x6855)*(x6862)))+(((x6846)*(x6847)))+(((IkReal(-1.00000000000000))*(cj9)*(x6865)))+(((IkReal(-1.00000000000000))*(px)*(x6860)))+(((IkReal(-0.0100000000000000))*(r01)*(x6848)))+(((IkReal(-0.374290000000000))*(sj9)*(x6852)))+(((x6846)*(x6850))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6866=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6866)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x6866)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6866)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x6866)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6866)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x6866)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6867=IKsin(j12);
IkReal x6868=IKcos(j12);
IkReal x6869=((sj14)*(sj9));
IkReal x6870=((IkReal(1.00000000000000))*(sj13));
IkReal x6871=((cj13)*(sj14));
IkReal x6872=((cj9)*(r11));
IkReal x6873=((IkReal(1.00000000000000))*(cj13));
IkReal x6874=((cj9)*(r10));
IkReal x6875=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x6868));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6870)))+(((IkReal(-1.00000000000000))*(r21)*(x6871)))+(x6867));
evalcond[2]=((((IkReal(-1.00000000000000))*(x6867)))+(((IkReal(-1.00000000000000))*(sj14)*(x6874)))+(((r00)*(x6869)))+(((r01)*(x6875)))+(((IkReal(-1.00000000000000))*(cj14)*(x6872))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x6869)*(x6873)))+(((IkReal(-1.00000000000000))*(cj14)*(x6873)*(x6874)))+(((cj13)*(r00)*(x6875)))+(x6868)+(((cj9)*(r12)*(sj13)))+(((x6871)*(x6872)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6870))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6876=((IkReal(1.00000000000000))*(sj14));
IkReal x6877=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x6876))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6877)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x6876)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6877)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6876))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x6876)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6877)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x6876)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6877)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6876)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x6876)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x6877)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x6876)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6877)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x6876)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6878=IKsin(j12);
IkReal x6879=IKcos(j12);
IkReal x6880=((IkReal(1.00000000000000))*(sj13));
IkReal x6881=((cj13)*(r10));
IkReal x6882=((IkReal(1.00000000000000))*(cj10));
IkReal x6883=((cj9)*(sj14));
IkReal x6884=((cj13)*(r01));
IkReal x6885=((IkReal(1.00000000000000))*(r10));
IkReal x6886=((cj9)*(sj13));
IkReal x6887=((cj13)*(sj14));
IkReal x6888=((cj14)*(r01));
IkReal x6889=((cj13)*(cj14));
IkReal x6890=((IkReal(1.00000000000000))*(cj9));
IkReal x6891=((sj14)*(sj9));
IkReal x6892=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6893=((IkReal(1.00000000000000))*(x6878));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x6879))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj10)*(x6893)))+(((r20)*(x6889)))+(((IkReal(-1.00000000000000))*(r21)*(x6887)))+(((IkReal(-1.00000000000000))*(r22)*(x6880))));
evalcond[2]=((((sj9)*(x6888)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6890)))+(((IkReal(-1.00000000000000))*(x6893)))+(((IkReal(-1.00000000000000))*(x6883)*(x6885)))+(((r00)*(x6891))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6888)*(x6890)))+(((IkReal(-1.00000000000000))*(x6885)*(x6891)))+(((IkReal(-1.00000000000000))*(r11)*(x6892)))+(((IkReal(-1.00000000000000))*(x6879)*(x6882)))+(((IkReal(-1.00000000000000))*(r00)*(x6883))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6884)*(x6891)))+(x6879)+(((IkReal(-1.00000000000000))*(cj14)*(x6881)*(x6890)))+(((cj13)*(r11)*(x6883)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6880)))+(((r00)*(sj9)*(x6889)))+(((r12)*(x6886))));
evalcond[5]=((((r02)*(x6886)))+(((IkReal(-1.00000000000000))*(x6878)*(x6882)))+(((IkReal(-1.00000000000000))*(r00)*(x6889)*(x6890)))+(((IkReal(-1.00000000000000))*(x6881)*(x6892)))+(((r12)*(sj13)*(sj9)))+(((r11)*(sj9)*(x6887)))+(((x6883)*(x6884))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6894=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6894)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6894)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6894)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6894)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6894)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x6894)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6895=IKsin(j12);
IkReal x6896=IKcos(j12);
IkReal x6897=((IkReal(1.00000000000000))*(sj13));
IkReal x6898=((cj13)*(r10));
IkReal x6899=((IkReal(1.00000000000000))*(cj10));
IkReal x6900=((cj9)*(sj14));
IkReal x6901=((cj13)*(r01));
IkReal x6902=((IkReal(1.00000000000000))*(r10));
IkReal x6903=((cj9)*(sj13));
IkReal x6904=((cj13)*(sj14));
IkReal x6905=((cj14)*(r01));
IkReal x6906=((cj13)*(cj14));
IkReal x6907=((IkReal(1.00000000000000))*(cj9));
IkReal x6908=((sj14)*(sj9));
IkReal x6909=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6910=((IkReal(1.00000000000000))*(x6895));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x6896))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x6904)))+(((IkReal(-1.00000000000000))*(sj10)*(x6910)))+(((r20)*(x6906)))+(((IkReal(-1.00000000000000))*(r22)*(x6897))));
evalcond[2]=((((r00)*(x6908)))+(((IkReal(-1.00000000000000))*(x6900)*(x6902)))+(((sj9)*(x6905)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6907)))+(((IkReal(-1.00000000000000))*(x6910))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6896)*(x6899)))+(((IkReal(-1.00000000000000))*(r11)*(x6909)))+(((IkReal(-1.00000000000000))*(x6905)*(x6907)))+(((IkReal(-1.00000000000000))*(r00)*(x6900)))+(((IkReal(-1.00000000000000))*(x6902)*(x6908))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6901)*(x6908)))+(((IkReal(-1.00000000000000))*(cj14)*(x6898)*(x6907)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6897)))+(x6896)+(((cj13)*(r11)*(x6900)))+(((r12)*(x6903)))+(((r00)*(sj9)*(x6906))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x6895)*(x6899)))+(((x6900)*(x6901)))+(((IkReal(-1.00000000000000))*(x6898)*(x6909)))+(((r02)*(x6903)))+(((IkReal(-1.00000000000000))*(r00)*(x6906)*(x6907)))+(((r12)*(sj13)*(sj9)))+(((r11)*(sj9)*(x6904))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x6911=IKsin(j12);
IkReal x6912=IKcos(j12);
IkReal x6913=((IkReal(1.00000000000000))*(sj13));
IkReal x6914=((cj13)*(r10));
IkReal x6915=((IkReal(1.00000000000000))*(cj10));
IkReal x6916=((cj9)*(sj14));
IkReal x6917=((cj13)*(r01));
IkReal x6918=((IkReal(1.00000000000000))*(r10));
IkReal x6919=((cj9)*(sj13));
IkReal x6920=((cj13)*(sj14));
IkReal x6921=((cj14)*(r01));
IkReal x6922=((cj13)*(cj14));
IkReal x6923=((IkReal(1.00000000000000))*(cj9));
IkReal x6924=((sj14)*(sj9));
IkReal x6925=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x6926=((IkReal(1.00000000000000))*(x6911));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x6912)))+(((r20)*(sj14))));
evalcond[1]=((((r20)*(x6922)))+(((IkReal(-1.00000000000000))*(r22)*(x6913)))+(((IkReal(-1.00000000000000))*(r21)*(x6920)))+(((IkReal(-1.00000000000000))*(sj10)*(x6926))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x6923)))+(((r00)*(x6924)))+(((sj9)*(x6921)))+(((IkReal(-1.00000000000000))*(x6916)*(x6918)))+(((IkReal(-1.00000000000000))*(x6926))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x6912)*(x6915)))+(((IkReal(-1.00000000000000))*(r00)*(x6916)))+(((IkReal(-1.00000000000000))*(r11)*(x6925)))+(((IkReal(-1.00000000000000))*(x6921)*(x6923)))+(((IkReal(-1.00000000000000))*(x6918)*(x6924))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6913)))+(((r00)*(sj9)*(x6922)))+(((r12)*(x6919)))+(((IkReal(-1.00000000000000))*(x6917)*(x6924)))+(((IkReal(-1.00000000000000))*(cj14)*(x6914)*(x6923)))+(x6912)+(((cj13)*(r11)*(x6916))));
evalcond[5]=((((r11)*(sj9)*(x6920)))+(((IkReal(-1.00000000000000))*(r00)*(x6922)*(x6923)))+(((x6916)*(x6917)))+(((IkReal(-1.00000000000000))*(x6911)*(x6915)))+(((r02)*(x6919)))+(((IkReal(-1.00000000000000))*(x6914)*(x6925)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x6927=((IkReal(0.0100000000000000))*(cj14));
IkReal x6928=((r10)*(sj9));
IkReal x6929=((cj9)*(r11));
IkReal x6930=((sj13)*(sj14));
IkReal x6931=((cj9)*(r00));
IkReal x6932=((IkReal(0.374290000000000))*(cj14));
IkReal x6933=((cj9)*(r01));
IkReal x6934=((r01)*(sj9));
IkReal x6935=((IkReal(0.0100000000000000))*(sj14));
IkReal x6936=((r00)*(sj9));
IkReal x6937=((IkReal(0.374290000000000))*(sj14));
IkReal x6938=((cj13)*(sj9));
IkReal x6939=((IkReal(1.00000000000000))*(py));
IkReal x6940=((r11)*(sj9));
IkReal x6941=((cj9)*(r10));
IkReal x6942=((cj14)*(sj13));
IkReal x6943=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x6930)))+(cj10)+(((r20)*(x6942)))+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x6937)))+(pz)+(((IkReal(0.364420000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r20)*(x6927)))+(((r21)*(x6935)))+(((r21)*(x6932))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x6943)))+(((x6936)*(x6942)))+(((IkReal(-1.00000000000000))*(x6941)*(x6942)))+(((r02)*(x6938)))+(((x6929)*(x6930)))+(((IkReal(-1.00000000000000))*(x6930)*(x6934))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6931)*(x6942)))+(((IkReal(-1.00000000000000))*(x6928)*(x6942)))+(((IkReal(-1.00000000000000))*(r02)*(x6943)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r12)*(x6938)))+(((x6930)*(x6933)))+(((x6930)*(x6940))));
evalcond[5]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x6939)))+(((x6932)*(x6934)))+(((x6927)*(x6941)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x6929)*(x6935)))+(((IkReal(-1.00000000000000))*(x6929)*(x6932)))+(((IkReal(-1.00000000000000))*(x6937)*(x6941)))+(((x6934)*(x6935)))+(((x6936)*(x6937)))+(((IkReal(-1.00000000000000))*(x6927)*(x6936))));
evalcond[6]=((IkReal(0.0690000000000000))+(((x6927)*(x6931)))+(((IkReal(-1.00000000000000))*(x6932)*(x6933)))+(((x6927)*(x6928)))+(((IkReal(-1.00000000000000))*(x6932)*(x6940)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(x6928)*(x6937)))+(((IkReal(-1.00000000000000))*(sj9)*(x6939)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x6935)*(x6940)))+(((IkReal(-1.00000000000000))*(x6931)*(x6937)))+(((IkReal(-1.00000000000000))*(x6933)*(x6935))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x6944=((IkReal(0.0100000000000000))*(cj14));
IkReal x6945=((r10)*(sj9));
IkReal x6946=((cj9)*(sj14));
IkReal x6947=((r11)*(sj13));
IkReal x6948=((cj9)*(r00));
IkReal x6949=((IkReal(1.00000000000000))*(sj9));
IkReal x6950=((cj14)*(r11));
IkReal x6951=((r01)*(sj14));
IkReal x6952=((r21)*(sj14));
IkReal x6953=((IkReal(0.0100000000000000))*(r11));
IkReal x6954=((r00)*(sj9));
IkReal x6955=((IkReal(0.374290000000000))*(sj14));
IkReal x6956=((cj13)*(r02));
IkReal x6957=((IkReal(1.00000000000000))*(cj14));
IkReal x6958=((IkReal(1.00000000000000))*(cj9));
IkReal x6959=((cj13)*(r12));
IkReal x6960=((sj14)*(sj9));
IkReal x6961=((cj9)*(r10));
IkReal x6962=((cj14)*(sj13));
IkReal x6963=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x6952)))+(((r20)*(x6962)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x6944)))+(((r20)*(x6955)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x6952))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x6946)))+(((IkReal(-1.00000000000000))*(sj14)*(x6945)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6957)))+(((IkReal(-1.00000000000000))*(x6949)*(x6950))));
evalcond[4]=((((x6954)*(x6962)))+(((IkReal(-1.00000000000000))*(sj13)*(x6957)*(x6961)))+(((sj9)*(x6956)))+(((x6946)*(x6947)))+(((IkReal(-1.00000000000000))*(x6958)*(x6959)))+(((IkReal(-1.00000000000000))*(sj13)*(x6949)*(x6951))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x6948)*(x6957)))+(((IkReal(-1.00000000000000))*(x6956)*(x6958)))+(((IkReal(-1.00000000000000))*(sj13)*(x6945)*(x6957)))+(((r01)*(sj13)*(x6946)))+(((IkReal(-1.00000000000000))*(x6949)*(x6959)))+(((x6947)*(x6960))));
evalcond[6]=((((cj13)*(r11)*(x6960)))+(((cj13)*(r01)*(x6946)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x6945)*(x6957)))+(((IkReal(-1.00000000000000))*(cj13)*(x6948)*(x6957)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-0.374290000000000))*(r10)*(x6946)))+(((x6944)*(x6961)))+(((IkReal(0.0100000000000000))*(sj9)*(x6951)))+(((IkReal(-0.374290000000000))*(cj9)*(x6950)))+(((IkReal(-1.00000000000000))*(x6944)*(x6954)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x6946)*(x6953)))+(((sj9)*(x6963)))+(((x6954)*(x6955)))+(((IkReal(-1.00000000000000))*(py)*(x6958))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(py)*(x6949)))+(((IkReal(-1.00000000000000))*(x6953)*(x6960)))+(((x6944)*(x6948)))+(((x6944)*(x6945)))+(((IkReal(-0.0100000000000000))*(r01)*(x6946)))+(((IkReal(-1.00000000000000))*(px)*(x6958)))+(((IkReal(-1.00000000000000))*(x6945)*(x6955)))+(((IkReal(-0.374290000000000))*(r00)*(x6946)))+(((IkReal(-1.00000000000000))*(cj9)*(x6963)))+(((IkReal(-0.374290000000000))*(sj9)*(x6950))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6964=IKsin(j12);
IkReal x6965=((sj14)*(sj9));
IkReal x6966=((IkReal(1.00000000000000))*(sj13));
IkReal x6967=((cj13)*(sj14));
IkReal x6968=((cj9)*(r11));
IkReal x6969=((IkReal(1.00000000000000))*(cj13));
IkReal x6970=((cj9)*(r10));
IkReal x6971=((cj14)*(sj9));
IkReal x6972=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x6972))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x6964)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x6967)))+(((IkReal(-1.00000000000000))*(r22)*(x6966))));
evalcond[2]=((((r00)*(x6965)))+(((r01)*(x6971)))+(((IkReal(-1.00000000000000))*(cj14)*(x6968)))+(((IkReal(-1.00000000000000))*(sj14)*(x6970)))+(x6964));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x6965)*(x6969)))+(((x6967)*(x6968)))+(((cj13)*(r00)*(x6971)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6966)))+(((IkReal(-1.00000000000000))*(x6972)))+(((IkReal(-1.00000000000000))*(cj14)*(x6969)*(x6970)))+(((cj9)*(r12)*(sj13))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x6973=((IkReal(0.0100000000000000))*(cj14));
IkReal x6974=((r10)*(sj9));
IkReal x6975=((cj9)*(sj14));
IkReal x6976=((r11)*(sj13));
IkReal x6977=((cj9)*(r00));
IkReal x6978=((IkReal(1.00000000000000))*(sj9));
IkReal x6979=((cj14)*(r11));
IkReal x6980=((r01)*(sj14));
IkReal x6981=((r21)*(sj14));
IkReal x6982=((IkReal(0.0100000000000000))*(r11));
IkReal x6983=((r00)*(sj9));
IkReal x6984=((IkReal(0.374290000000000))*(sj14));
IkReal x6985=((cj13)*(r02));
IkReal x6986=((IkReal(1.00000000000000))*(cj14));
IkReal x6987=((IkReal(1.00000000000000))*(cj9));
IkReal x6988=((cj13)*(r12));
IkReal x6989=((sj14)*(sj9));
IkReal x6990=((cj9)*(r10));
IkReal x6991=((cj14)*(sj13));
IkReal x6992=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x6981)))+(((r20)*(x6991)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x6973)))+(((IkReal(0.0100000000000000))*(x6981)))+(((r20)*(x6984)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x6975)))+(((IkReal(-1.00000000000000))*(sj14)*(x6974)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x6986)))+(((IkReal(-1.00000000000000))*(x6978)*(x6979))));
evalcond[4]=((((x6975)*(x6976)))+(((IkReal(-1.00000000000000))*(x6987)*(x6988)))+(((IkReal(-1.00000000000000))*(sj13)*(x6986)*(x6990)))+(((x6983)*(x6991)))+(((sj9)*(x6985)))+(((IkReal(-1.00000000000000))*(sj13)*(x6978)*(x6980))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x6978)*(x6988)))+(((IkReal(-1.00000000000000))*(sj13)*(x6974)*(x6986)))+(((IkReal(-1.00000000000000))*(x6985)*(x6987)))+(((IkReal(-1.00000000000000))*(sj13)*(x6977)*(x6986)))+(((x6976)*(x6989)))+(((r01)*(sj13)*(x6975))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x6974)*(x6986)))+(((cj13)*(r01)*(x6975)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x6989)))+(((IkReal(-1.00000000000000))*(cj13)*(x6977)*(x6986)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-0.374290000000000))*(r10)*(x6975)))+(((IkReal(-1.00000000000000))*(x6975)*(x6982)))+(((x6983)*(x6984)))+(((x6973)*(x6990)))+(((IkReal(-1.00000000000000))*(x6973)*(x6983)))+(((IkReal(0.0100000000000000))*(sj9)*(x6980)))+(((IkReal(-0.374290000000000))*(cj9)*(x6979)))+(((px)*(sj9)))+(((sj9)*(x6992)))+(((IkReal(-1.00000000000000))*(py)*(x6987))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(px)*(x6987)))+(((IkReal(-0.0100000000000000))*(r01)*(x6975)))+(((IkReal(-0.374290000000000))*(sj9)*(x6979)))+(((IkReal(-0.374290000000000))*(r00)*(x6975)))+(((IkReal(-1.00000000000000))*(cj9)*(x6992)))+(((IkReal(-1.00000000000000))*(x6982)*(x6989)))+(((IkReal(-1.00000000000000))*(x6974)*(x6984)))+(((IkReal(-1.00000000000000))*(py)*(x6978)))+(((x6973)*(x6974)))+(((x6973)*(x6977))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x6993=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6993)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x6993))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6993)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x6993)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x6993)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x6993)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x6994=IKsin(j12);
IkReal x6995=IKcos(j12);
IkReal x6996=((sj14)*(sj9));
IkReal x6997=((IkReal(1.00000000000000))*(sj13));
IkReal x6998=((cj13)*(sj14));
IkReal x6999=((cj9)*(r11));
IkReal x7000=((IkReal(1.00000000000000))*(cj13));
IkReal x7001=((cj9)*(r10));
IkReal x7002=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x6995));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x6997)))+(((IkReal(-1.00000000000000))*(r21)*(x6998)))+(x6994));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x7001)))+(x6994)+(((r00)*(x6996)))+(((r01)*(x7002)))+(((IkReal(-1.00000000000000))*(cj14)*(x6999))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x6997)))+(((IkReal(-1.00000000000000))*(x6995)))+(((cj13)*(r00)*(x7002)))+(((IkReal(-1.00000000000000))*(r01)*(x6996)*(x7000)))+(((IkReal(-1.00000000000000))*(cj14)*(x7000)*(x7001)))+(((cj9)*(r12)*(sj13)))+(((x6998)*(x6999))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7003=((cj14)*(r11));
IkReal x7004=((IkReal(1.00000000000000))*(sj9));
IkReal x7005=((cj14)*(r01));
IkReal x7006=((r00)*(sj14));
IkReal x7007=((r10)*(sj14));
IkReal x7008=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x7004)*(x7005)))+(((IkReal(-1.00000000000000))*(x7004)*(x7006)))+(((cj9)*(x7003)))+(((cj9)*(x7007))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7003)*(x7004)))+(((IkReal(-1.00000000000000))*(x7005)*(x7008)))+(((IkReal(-1.00000000000000))*(x7006)*(x7008)))+(((IkReal(-1.00000000000000))*(x7004)*(x7007))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x7004)*(x7005)))+(((IkReal(-1.00000000000000))*(x7004)*(x7006)))+(((cj9)*(x7003)))+(((cj9)*(x7007)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7003)*(x7004)))+(((IkReal(-1.00000000000000))*(x7005)*(x7008)))+(((IkReal(-1.00000000000000))*(x7006)*(x7008)))+(((IkReal(-1.00000000000000))*(x7004)*(x7007)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x7004)*(x7005)))+(((IkReal(-1.00000000000000))*(x7004)*(x7006)))+(((cj9)*(x7003)))+(((cj9)*(x7007)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7003)*(x7004)))+(((IkReal(-1.00000000000000))*(x7005)*(x7008)))+(((IkReal(-1.00000000000000))*(x7006)*(x7008)))+(((IkReal(-1.00000000000000))*(x7004)*(x7007)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7009=IKsin(j12);
IkReal x7010=IKcos(j12);
IkReal x7011=((IkReal(1.00000000000000))*(sj13));
IkReal x7012=((cj13)*(r10));
IkReal x7013=((cj9)*(sj14));
IkReal x7014=((cj13)*(r01));
IkReal x7015=((IkReal(1.00000000000000))*(r10));
IkReal x7016=((r12)*(sj13));
IkReal x7017=((cj13)*(sj14));
IkReal x7018=((cj14)*(r01));
IkReal x7019=((cj13)*(cj14));
IkReal x7020=((IkReal(1.00000000000000))*(cj9));
IkReal x7021=((sj14)*(sj9));
IkReal x7022=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7023=((IkReal(1.00000000000000))*(x7010));
IkReal x7024=((IkReal(1.00000000000000))*(x7009));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7023))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x7011)))+(((IkReal(-1.00000000000000))*(r21)*(x7017)))+(((IkReal(-1.00000000000000))*(sj10)*(x7024)))+(((r20)*(x7019))));
evalcond[2]=((x7009)+(((sj9)*(x7018)))+(((r00)*(x7021)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7020)))+(((IkReal(-1.00000000000000))*(x7013)*(x7015))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x7022)))+(((IkReal(-1.00000000000000))*(cj10)*(x7023)))+(((IkReal(-1.00000000000000))*(x7018)*(x7020)))+(((IkReal(-1.00000000000000))*(x7015)*(x7021)))+(((IkReal(-1.00000000000000))*(r00)*(x7013))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7011)))+(((r00)*(sj9)*(x7019)))+(((cj13)*(r11)*(x7013)))+(((IkReal(-1.00000000000000))*(x7014)*(x7021)))+(((cj9)*(x7016)))+(((IkReal(-1.00000000000000))*(x7023)))+(((IkReal(-1.00000000000000))*(cj14)*(x7012)*(x7020))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj10)*(x7024)))+(((x7013)*(x7014)))+(((sj9)*(x7016)))+(((IkReal(-1.00000000000000))*(r00)*(x7019)*(x7020)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x7012)*(x7022)))+(((r11)*(sj9)*(x7017))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7025=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x7025)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7025))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x7025)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7025)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(sj14)*(x7025)))+(((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7025)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7026=IKsin(j12);
IkReal x7027=IKcos(j12);
IkReal x7028=((IkReal(1.00000000000000))*(sj13));
IkReal x7029=((cj13)*(r10));
IkReal x7030=((cj9)*(sj14));
IkReal x7031=((cj13)*(r01));
IkReal x7032=((IkReal(1.00000000000000))*(r10));
IkReal x7033=((r12)*(sj13));
IkReal x7034=((cj13)*(sj14));
IkReal x7035=((cj14)*(r01));
IkReal x7036=((cj13)*(cj14));
IkReal x7037=((IkReal(1.00000000000000))*(cj9));
IkReal x7038=((sj14)*(sj9));
IkReal x7039=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7040=((IkReal(1.00000000000000))*(x7027));
IkReal x7041=((IkReal(1.00000000000000))*(x7026));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7040))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x7028)))+(((IkReal(-1.00000000000000))*(sj10)*(x7041)))+(((r20)*(x7036)))+(((IkReal(-1.00000000000000))*(r21)*(x7034))));
evalcond[2]=((x7026)+(((r00)*(x7038)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7037)))+(((IkReal(-1.00000000000000))*(x7030)*(x7032)))+(((sj9)*(x7035))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x7039)))+(((IkReal(-1.00000000000000))*(cj10)*(x7040)))+(((IkReal(-1.00000000000000))*(x7035)*(x7037)))+(((IkReal(-1.00000000000000))*(r00)*(x7030)))+(((IkReal(-1.00000000000000))*(x7032)*(x7038))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x7040)))+(((cj9)*(x7033)))+(((IkReal(-1.00000000000000))*(cj14)*(x7029)*(x7037)))+(((IkReal(-1.00000000000000))*(x7031)*(x7038)))+(((cj13)*(r11)*(x7030)))+(((r00)*(sj9)*(x7036)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7028))));
evalcond[5]=((((x7030)*(x7031)))+(((IkReal(-1.00000000000000))*(cj10)*(x7041)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x7034)))+(((IkReal(-1.00000000000000))*(x7029)*(x7039)))+(((IkReal(-1.00000000000000))*(r00)*(x7036)*(x7037)))+(((sj9)*(x7033))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7042=IKsin(j12);
IkReal x7043=IKcos(j12);
IkReal x7044=((IkReal(1.00000000000000))*(sj13));
IkReal x7045=((cj13)*(r10));
IkReal x7046=((cj9)*(sj14));
IkReal x7047=((cj13)*(r01));
IkReal x7048=((IkReal(1.00000000000000))*(r10));
IkReal x7049=((r12)*(sj13));
IkReal x7050=((cj13)*(sj14));
IkReal x7051=((cj14)*(r01));
IkReal x7052=((cj13)*(cj14));
IkReal x7053=((IkReal(1.00000000000000))*(cj9));
IkReal x7054=((sj14)*(sj9));
IkReal x7055=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7056=((IkReal(1.00000000000000))*(x7043));
IkReal x7057=((IkReal(1.00000000000000))*(x7042));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7056))));
evalcond[1]=((((r20)*(x7052)))+(((IkReal(-1.00000000000000))*(r22)*(x7044)))+(((IkReal(-1.00000000000000))*(r21)*(x7050)))+(((IkReal(-1.00000000000000))*(sj10)*(x7057))));
evalcond[2]=((x7042)+(((IkReal(-1.00000000000000))*(x7046)*(x7048)))+(((sj9)*(x7051)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7053)))+(((r00)*(x7054))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7048)*(x7054)))+(((IkReal(-1.00000000000000))*(r00)*(x7046)))+(((IkReal(-1.00000000000000))*(cj10)*(x7056)))+(((IkReal(-1.00000000000000))*(r11)*(x7055)))+(((IkReal(-1.00000000000000))*(x7051)*(x7053))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7044)))+(((cj9)*(x7049)))+(((IkReal(-1.00000000000000))*(cj14)*(x7045)*(x7053)))+(((cj13)*(r11)*(x7046)))+(((IkReal(-1.00000000000000))*(x7047)*(x7054)))+(((IkReal(-1.00000000000000))*(x7056)))+(((r00)*(sj9)*(x7052))));
evalcond[5]=((((x7046)*(x7047)))+(((r11)*(sj9)*(x7050)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj10)*(x7057)))+(((IkReal(-1.00000000000000))*(r00)*(x7052)*(x7053)))+(((IkReal(-1.00000000000000))*(x7045)*(x7055)))+(((sj9)*(x7049))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7058=((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30);
IkReal x7059=((cj14)*(r11));
IkReal x7060=((r10)*(sj14));
IkReal x7061=((IkReal(1.00000000000000))*(cj9));
IkReal x7062=((cj10)*(cj11)*(cj9));
IkReal x7063=((r00)*(sj14)*(sj9));
IkReal x7064=((cj14)*(r01)*(sj9));
IkReal x7065=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((x7058)*(((((IkReal(-1.00000000000000))*(x7059)*(x7061)))+(x7064)+(x7063)+(((IkReal(-1.00000000000000))*(x7060)*(x7061))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7058)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7063)*(x7065)))+(((x7059)*(x7062)))+(((IkReal(-1.00000000000000))*(x7064)*(x7065)))+(((x7060)*(x7062)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7058)*(((((IkReal(-1.00000000000000))*(x7059)*(x7061)))+(x7064)+(x7063)+(((IkReal(-1.00000000000000))*(x7060)*(x7061)))))))+IKsqr(((x7058)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7063)*(x7065)))+(((x7059)*(x7062)))+(((IkReal(-1.00000000000000))*(x7064)*(x7065)))+(((x7060)*(x7062)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((x7058)*(((((IkReal(-1.00000000000000))*(x7059)*(x7061)))+(x7064)+(x7063)+(((IkReal(-1.00000000000000))*(x7060)*(x7061)))))), ((x7058)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7063)*(x7065)))+(((x7059)*(x7062)))+(((IkReal(-1.00000000000000))*(x7064)*(x7065)))+(((x7060)*(x7062)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7066=IKcos(j12);
IkReal x7067=IKsin(j12);
IkReal x7068=((IkReal(1.00000000000000))*(sj13));
IkReal x7069=((cj13)*(r10));
IkReal x7070=((cj9)*(sj14));
IkReal x7071=((cj13)*(r01));
IkReal x7072=((IkReal(1.00000000000000))*(r10));
IkReal x7073=((r12)*(sj13));
IkReal x7074=((cj13)*(sj14));
IkReal x7075=((cj11)*(sj10));
IkReal x7076=((cj14)*(r01));
IkReal x7077=((IkReal(1.00000000000000))*(cj9));
IkReal x7078=((sj14)*(sj9));
IkReal x7079=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7080=((cj10)*(x7066));
IkReal x7081=((IkReal(1.00000000000000))*(x7067));
IkReal x7082=((IkReal(1.00000000000000))*(x7066));
IkReal x7083=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj10)*(x7082)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x7081)))+(((r20)*(sj14))));
evalcond[1]=((((cj11)*(x7080)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(sj10)*(x7081)))+(((IkReal(-1.00000000000000))*(r22)*(x7068)))+(((IkReal(-1.00000000000000))*(r21)*(x7074))));
evalcond[2]=((((sj9)*(x7076)))+(((IkReal(-1.00000000000000))*(x7070)*(x7072)))+(((r00)*(x7078)))+(((IkReal(-1.00000000000000))*(sj11)*(x7081)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7077))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7080)))+(((x7067)*(x7075)))+(((IkReal(-1.00000000000000))*(x7076)*(x7077)))+(((IkReal(-1.00000000000000))*(x7072)*(x7078)))+(((IkReal(-1.00000000000000))*(r11)*(x7079)))+(((IkReal(-1.00000000000000))*(r00)*(x7070))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x7069)*(x7077)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7068)))+(((sj9)*(x7083)))+(((cj9)*(x7073)))+(((sj11)*(x7066)))+(((cj13)*(r11)*(x7070)))+(((IkReal(-1.00000000000000))*(x7071)*(x7078))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7069)*(x7079)))+(((r11)*(sj9)*(x7074)))+(((x7070)*(x7071)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x7073)))+(((IkReal(-1.00000000000000))*(x7075)*(x7082)))+(((IkReal(-1.00000000000000))*(cj10)*(x7081)))+(((IkReal(-1.00000000000000))*(x7077)*(x7083))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7084=(cj10)*(cj10);
IkReal x7085=(sj10)*(sj10);
IkReal x7086=((cj14)*(sj10));
IkReal x7087=((r11)*(sj9));
IkReal x7088=((sj10)*(sj14));
IkReal x7089=((r10)*(sj9));
IkReal x7090=((cj10)*(cj14));
IkReal x7091=((cj9)*(r00));
IkReal x7092=((cj9)*(r01));
IkReal x7093=((IkReal(1.00000000000000))*(cj10)*(sj14));
if( IKabs(((((IKabs(((((cj11)*(x7085)))+(((cj11)*(x7084))))) != 0)?((IkReal)1/(((((cj11)*(x7085)))+(((cj11)*(x7084)))))):(IkReal)1.0e30))*(((((r21)*(x7090)))+(((cj10)*(r20)*(sj14)))+(((x7086)*(x7092)))+(((x7088)*(x7091)))+(((x7088)*(x7089)))+(((x7086)*(x7087))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x7085)+(x7084))) != 0)?((IkReal)1/(((x7085)+(x7084)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7089)*(x7093)))+(((r21)*(x7086)))+(((IkReal(-1.00000000000000))*(x7091)*(x7093)))+(((r20)*(x7088)))+(((IkReal(-1.00000000000000))*(x7090)*(x7092)))+(((IkReal(-1.00000000000000))*(x7087)*(x7090))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj11)*(x7085)))+(((cj11)*(x7084))))) != 0)?((IkReal)1/(((((cj11)*(x7085)))+(((cj11)*(x7084)))))):(IkReal)1.0e30))*(((((r21)*(x7090)))+(((cj10)*(r20)*(sj14)))+(((x7086)*(x7092)))+(((x7088)*(x7091)))+(((x7088)*(x7089)))+(((x7086)*(x7087)))))))+IKsqr(((((IKabs(((x7085)+(x7084))) != 0)?((IkReal)1/(((x7085)+(x7084)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7089)*(x7093)))+(((r21)*(x7086)))+(((IkReal(-1.00000000000000))*(x7091)*(x7093)))+(((r20)*(x7088)))+(((IkReal(-1.00000000000000))*(x7090)*(x7092)))+(((IkReal(-1.00000000000000))*(x7087)*(x7090)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(((((cj11)*(x7085)))+(((cj11)*(x7084))))) != 0)?((IkReal)1/(((((cj11)*(x7085)))+(((cj11)*(x7084)))))):(IkReal)1.0e30))*(((((r21)*(x7090)))+(((cj10)*(r20)*(sj14)))+(((x7086)*(x7092)))+(((x7088)*(x7091)))+(((x7088)*(x7089)))+(((x7086)*(x7087)))))), ((((IKabs(((x7085)+(x7084))) != 0)?((IkReal)1/(((x7085)+(x7084)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7089)*(x7093)))+(((r21)*(x7086)))+(((IkReal(-1.00000000000000))*(x7091)*(x7093)))+(((r20)*(x7088)))+(((IkReal(-1.00000000000000))*(x7090)*(x7092)))+(((IkReal(-1.00000000000000))*(x7087)*(x7090)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7094=IKcos(j12);
IkReal x7095=IKsin(j12);
IkReal x7096=((IkReal(1.00000000000000))*(sj13));
IkReal x7097=((cj13)*(r10));
IkReal x7098=((cj9)*(sj14));
IkReal x7099=((cj13)*(r01));
IkReal x7100=((IkReal(1.00000000000000))*(r10));
IkReal x7101=((r12)*(sj13));
IkReal x7102=((cj13)*(sj14));
IkReal x7103=((cj11)*(sj10));
IkReal x7104=((cj14)*(r01));
IkReal x7105=((IkReal(1.00000000000000))*(cj9));
IkReal x7106=((sj14)*(sj9));
IkReal x7107=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7108=((cj10)*(x7094));
IkReal x7109=((IkReal(1.00000000000000))*(x7095));
IkReal x7110=((IkReal(1.00000000000000))*(x7094));
IkReal x7111=((cj13)*(cj14)*(r00));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x7109)))+(((IkReal(-1.00000000000000))*(sj10)*(x7110))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7102)))+(((cj13)*(cj14)*(r20)))+(((cj11)*(x7108)))+(((IkReal(-1.00000000000000))*(r22)*(x7096)))+(((IkReal(-1.00000000000000))*(sj10)*(x7109))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x7109)))+(((IkReal(-1.00000000000000))*(x7098)*(x7100)))+(((sj9)*(x7104)))+(((r00)*(x7106)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7105))));
evalcond[3]=((((x7095)*(x7103)))+(((IkReal(-1.00000000000000))*(x7108)))+(((IkReal(-1.00000000000000))*(r11)*(x7107)))+(((IkReal(-1.00000000000000))*(x7100)*(x7106)))+(((IkReal(-1.00000000000000))*(r00)*(x7098)))+(((IkReal(-1.00000000000000))*(x7104)*(x7105))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7096)))+(((cj9)*(x7101)))+(((cj13)*(r11)*(x7098)))+(((IkReal(-1.00000000000000))*(x7099)*(x7106)))+(((sj9)*(x7111)))+(((IkReal(-1.00000000000000))*(cj14)*(x7097)*(x7105)))+(((sj11)*(x7094))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7103)*(x7110)))+(((cj9)*(r02)*(sj13)))+(((x7098)*(x7099)))+(((IkReal(-1.00000000000000))*(cj10)*(x7109)))+(((r11)*(sj9)*(x7102)))+(((sj9)*(x7101)))+(((IkReal(-1.00000000000000))*(x7105)*(x7111)))+(((IkReal(-1.00000000000000))*(x7097)*(x7107))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7112=((cj14)*(r21));
IkReal x7113=((cj10)*(cj11));
IkReal x7114=((sj10)*(sj14));
IkReal x7115=((r22)*(sj13));
IkReal x7116=((IkReal(1.00000000000000))*(cj13));
IkReal x7117=((cj14)*(r20));
if( IKabs(((gconst4)*(((((r20)*(sj14)*(x7113)))+(((cj13)*(sj10)*(x7117)))+(((IkReal(-1.00000000000000))*(r21)*(x7114)*(x7116)))+(((x7112)*(x7113)))+(((IkReal(-1.00000000000000))*(sj10)*(x7115))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x7113)*(x7115)))+(((IkReal(-1.00000000000000))*(x7113)*(x7116)*(x7117)))+(((cj13)*(r21)*(sj14)*(x7113)))+(((sj10)*(x7112)))+(((r20)*(x7114))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst4)*(((((r20)*(sj14)*(x7113)))+(((cj13)*(sj10)*(x7117)))+(((IkReal(-1.00000000000000))*(r21)*(x7114)*(x7116)))+(((x7112)*(x7113)))+(((IkReal(-1.00000000000000))*(sj10)*(x7115)))))), ((gconst4)*(((((x7113)*(x7115)))+(((IkReal(-1.00000000000000))*(x7113)*(x7116)*(x7117)))+(((cj13)*(r21)*(sj14)*(x7113)))+(((sj10)*(x7112)))+(((r20)*(x7114)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7118=IKcos(j12);
IkReal x7119=IKsin(j12);
IkReal x7120=((IkReal(1.00000000000000))*(sj13));
IkReal x7121=((cj13)*(r10));
IkReal x7122=((cj9)*(sj14));
IkReal x7123=((cj13)*(r01));
IkReal x7124=((IkReal(1.00000000000000))*(r10));
IkReal x7125=((r12)*(sj13));
IkReal x7126=((cj13)*(sj14));
IkReal x7127=((cj11)*(sj10));
IkReal x7128=((cj14)*(r01));
IkReal x7129=((IkReal(1.00000000000000))*(cj9));
IkReal x7130=((sj14)*(sj9));
IkReal x7131=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7132=((cj10)*(x7118));
IkReal x7133=((IkReal(1.00000000000000))*(x7119));
IkReal x7134=((IkReal(1.00000000000000))*(x7118));
IkReal x7135=((cj13)*(cj14)*(r00));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7134)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x7133))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7120)))+(((IkReal(-1.00000000000000))*(r21)*(x7126)))+(((cj11)*(x7132)))+(((IkReal(-1.00000000000000))*(sj10)*(x7133))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7129)))+(((IkReal(-1.00000000000000))*(sj11)*(x7133)))+(((IkReal(-1.00000000000000))*(x7122)*(x7124)))+(((r00)*(x7130)))+(((sj9)*(x7128))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x7131)))+(((IkReal(-1.00000000000000))*(x7124)*(x7130)))+(((x7119)*(x7127)))+(((IkReal(-1.00000000000000))*(x7128)*(x7129)))+(((IkReal(-1.00000000000000))*(r00)*(x7122)))+(((IkReal(-1.00000000000000))*(x7132))));
evalcond[4]=((((cj13)*(r11)*(x7122)))+(((IkReal(-1.00000000000000))*(cj14)*(x7121)*(x7129)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7120)))+(((sj9)*(x7135)))+(((IkReal(-1.00000000000000))*(x7123)*(x7130)))+(((cj9)*(x7125)))+(((sj11)*(x7118))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7127)*(x7134)))+(((IkReal(-1.00000000000000))*(cj10)*(x7133)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x7121)*(x7131)))+(((sj9)*(x7125)))+(((r11)*(sj9)*(x7126)))+(((IkReal(-1.00000000000000))*(x7129)*(x7135)))+(((x7122)*(x7123))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x7136=((IkReal(1.00000000000000))*(sj9));
IkReal x7137=((cj10)*(sj11));
IkReal x7138=((IkReal(1.00000000000000))*(cj11));
IkReal x7139=((sj14)*(x7137));
if( IKabs(((gconst0)*(((((cj9)*(r12)*(x7137)))+(((IkReal(-1.00000000000000))*(r02)*(x7136)*(x7137)))+(((IkReal(-1.00000000000000))*(r22)*(x7138))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj9)*(r11)*(x7139)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7138)))+(((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r01)*(x7136)*(x7139)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r10)*(x7137)))+(((cj14)*(r00)*(sj9)*(x7137))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst0)*(((((cj9)*(r12)*(x7137)))+(((IkReal(-1.00000000000000))*(r02)*(x7136)*(x7137)))+(((IkReal(-1.00000000000000))*(r22)*(x7138)))))), ((gconst0)*(((((cj9)*(r11)*(x7139)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7138)))+(((cj11)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r01)*(x7136)*(x7139)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r10)*(x7137)))+(((cj14)*(r00)*(sj9)*(x7137)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x7140=IKsin(j13);
IkReal x7141=IKcos(j13);
IkReal x7142=((r11)*(sj14));
IkReal x7143=((r01)*(sj14));
IkReal x7144=((cj14)*(r00));
IkReal x7145=((cj9)*(x7140));
IkReal x7146=((IkReal(1.00000000000000))*(cj14)*(r10));
IkReal x7147=((sj9)*(x7140));
IkReal x7148=((sj9)*(x7141));
IkReal x7149=((IkReal(1.00000000000000))*(cj9)*(x7141));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(sj11)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7140)))+(((r22)*(x7141)))+(((cj14)*(r20)*(x7140))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x7143)*(x7147)))+(((IkReal(-1.00000000000000))*(x7145)*(x7146)))+(((x7144)*(x7147)))+(cj11)+(((r02)*(x7148)))+(((IkReal(-1.00000000000000))*(r12)*(x7149)))+(((x7142)*(x7145))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x7148)))+(((IkReal(-1.00000000000000))*(x7144)*(x7145)))+(((sj10)*(sj11)))+(((IkReal(-1.00000000000000))*(x7146)*(x7147)))+(((IkReal(-1.00000000000000))*(r02)*(x7149)))+(((x7142)*(x7147)))+(((x7143)*(x7145))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10))));
dummyeval[0]=(((((cj10)*(cj10))*((cj11)*(cj11))))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x7150=(cj10)*(cj10);
IkReal x7151=(sj10)*(sj10);
dummyeval[0]=((((cj11)*(x7151)))+(((cj11)*(x7150))));
dummyeval[1]=((x7151)+(x7150));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x7152=((IkReal(0.0100000000000000))*(cj14));
IkReal x7153=((r10)*(sj9));
IkReal x7154=((IkReal(1.00000000000000))*(sj9));
IkReal x7155=((IkReal(0.0100000000000000))*(sj14));
IkReal x7156=((cj9)*(r11));
IkReal x7157=((r00)*(sj9));
IkReal x7158=((IkReal(0.374290000000000))*(sj14));
IkReal x7159=((cj13)*(r02));
IkReal x7160=((cj9)*(r12));
IkReal x7161=((cj9)*(r00));
IkReal x7162=((r01)*(sj9));
IkReal x7163=((IkReal(0.374290000000000))*(cj14));
IkReal x7164=((IkReal(1.00000000000000))*(cj9));
IkReal x7165=((cj9)*(r10));
IkReal x7166=((r11)*(sj9));
IkReal x7167=((IkReal(1.00000000000000))*(sj13));
IkReal x7168=((cj14)*(sj13));
IkReal x7169=((cj13)*(sj14));
IkReal x7170=((cj13)*(cj14));
IkReal x7171=((r11)*(sj13)*(sj14));
IkReal x7172=((cj9)*(x7163));
IkReal x7173=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7167)))+(((r20)*(x7168)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(0.0690000000000000))*(cj10)))+(((r20)*(x7158)))+(((r21)*(x7155)))+(pz)+(((r21)*(x7163)))+(((IkReal(0.364420000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r20)*(x7152))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7164)))+(((sj14)*(x7157)))+(((cj14)*(x7162)))+(((IkReal(-1.00000000000000))*(cj14)*(x7156))));
evalcond[4]=((IkReal(1.00000000000000))+(((sj9)*(x7159)))+(((sj13)*(sj14)*(x7156)))+(((IkReal(-1.00000000000000))*(cj13)*(x7160)))+(((IkReal(-1.00000000000000))*(r10)*(x7164)*(x7168)))+(((x7157)*(x7168)))+(((IkReal(-1.00000000000000))*(x7154)*(x7173))));
evalcond[5]=((((sj13)*(x7160)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x7154)))+(((x7157)*(x7170)))+(((IkReal(-1.00000000000000))*(r10)*(x7164)*(x7170)))+(((IkReal(-1.00000000000000))*(r01)*(x7154)*(x7169)))+(((x7156)*(x7169))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj14)*(x7161)*(x7167)))+(((IkReal(-1.00000000000000))*(cj14)*(x7153)*(x7167)))+(((IkReal(-1.00000000000000))*(x7159)*(x7164)))+(((sj13)*(sj14)*(x7166)))+(((cj9)*(x7173)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x7154))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x7156)*(x7163)))+(((x7162)*(x7163)))+(((IkReal(-1.00000000000000))*(py)*(x7164)))+(((IkReal(-1.00000000000000))*(x7152)*(x7157)))+(((IkReal(-1.00000000000000))*(x7155)*(x7156)))+(((IkReal(-1.00000000000000))*(x7158)*(x7165)))+(((x7155)*(x7162)))+(((x7152)*(x7165)))+(((px)*(sj9)))+(((x7157)*(x7158))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7155)*(x7166)))+(((IkReal(-1.00000000000000))*(x7153)*(x7158)))+(((IkReal(-1.00000000000000))*(py)*(x7154)))+(((IkReal(-1.00000000000000))*(x7163)*(x7166)))+(((IkReal(-1.00000000000000))*(x7158)*(x7161)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7155)))+(((IkReal(-1.00000000000000))*(px)*(x7164)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-0.0690000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r01)*(x7172)))+(((x7152)*(x7161)))+(((x7152)*(x7153))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7174=((cj14)*(sj10));
IkReal x7175=((r11)*(sj9));
IkReal x7176=((r20)*(sj14));
IkReal x7177=((IkReal(1.00000000000000))*(cj10));
IkReal x7178=((cj9)*(r01));
IkReal x7179=((r10)*(sj14)*(sj9));
IkReal x7180=((cj9)*(r00)*(sj14));
if( IKabs(((gconst6)*(((((cj10)*(x7176)))+(((sj10)*(x7179)))+(((cj10)*(cj14)*(r21)))+(((sj10)*(x7180)))+(((x7174)*(x7178)))+(((x7174)*(x7175))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x7177)*(x7179)))+(((r21)*(x7174)))+(((IkReal(-1.00000000000000))*(x7177)*(x7180)))+(((sj10)*(x7176)))+(((IkReal(-1.00000000000000))*(cj14)*(x7175)*(x7177)))+(((IkReal(-1.00000000000000))*(cj14)*(x7177)*(x7178))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst6)*(((((cj10)*(x7176)))+(((sj10)*(x7179)))+(((cj10)*(cj14)*(r21)))+(((sj10)*(x7180)))+(((x7174)*(x7178)))+(((x7174)*(x7175)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x7177)*(x7179)))+(((r21)*(x7174)))+(((IkReal(-1.00000000000000))*(x7177)*(x7180)))+(((sj10)*(x7176)))+(((IkReal(-1.00000000000000))*(cj14)*(x7175)*(x7177)))+(((IkReal(-1.00000000000000))*(cj14)*(x7177)*(x7178)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7181=IKcos(j12);
IkReal x7182=IKsin(j12);
IkReal x7183=((cj13)*(sj14));
IkReal x7184=((r11)*(sj9));
IkReal x7185=((IkReal(1.00000000000000))*(cj10));
IkReal x7186=((cj9)*(r01));
IkReal x7187=((IkReal(1.00000000000000))*(cj14));
IkReal x7188=((cj9)*(r00));
IkReal x7189=((IkReal(1.00000000000000))*(sj14));
IkReal x7190=((r10)*(sj9));
IkReal x7191=((sj10)*(x7182));
IkReal x7192=((IkReal(1.00000000000000))*(sj10)*(x7181));
IkReal x7193=((x7182)*(x7185));
IkReal x7194=((x7193)+(x7192));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x7194)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7183)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((cj10)*(x7181)))+(((IkReal(-1.00000000000000))*(x7191))));
evalcond[2]=((x7191)+(((IkReal(-1.00000000000000))*(x7189)*(x7190)))+(((IkReal(-1.00000000000000))*(x7184)*(x7187)))+(((IkReal(-1.00000000000000))*(x7186)*(x7187)))+(((IkReal(-1.00000000000000))*(x7188)*(x7189)))+(((IkReal(-1.00000000000000))*(x7181)*(x7185))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7194)))+(((cj9)*(r02)*(sj13)))+(((x7183)*(x7186)))+(((x7183)*(x7184)))+(((IkReal(-1.00000000000000))*(cj13)*(x7187)*(x7190)))+(((IkReal(-1.00000000000000))*(cj13)*(x7187)*(x7188)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7195=((cj10)*(cj13));
IkReal x7196=((r21)*(sj14));
IkReal x7197=((r22)*(sj13));
IkReal x7198=((IkReal(1.00000000000000))*(sj10));
IkReal x7199=((cj14)*(r20));
IkReal x7200=((cj14)*(r21));
IkReal x7201=((r20)*(sj14));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj13)*(x7196)*(x7198)))+(((cj10)*(x7201)))+(((cj10)*(x7200)))+(((IkReal(-1.00000000000000))*(x7197)*(x7198)))+(((cj13)*(sj10)*(x7199))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x7195)*(x7199)))+(((x7195)*(x7196)))+(((sj10)*(x7200)))+(((sj10)*(x7201)))+(((cj10)*(x7197))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(cj13)*(x7196)*(x7198)))+(((cj10)*(x7201)))+(((cj10)*(x7200)))+(((IkReal(-1.00000000000000))*(x7197)*(x7198)))+(((cj13)*(sj10)*(x7199)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x7195)*(x7199)))+(((x7195)*(x7196)))+(((sj10)*(x7200)))+(((sj10)*(x7201)))+(((cj10)*(x7197)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7202=IKcos(j12);
IkReal x7203=IKsin(j12);
IkReal x7204=((cj13)*(sj14));
IkReal x7205=((r11)*(sj9));
IkReal x7206=((IkReal(1.00000000000000))*(cj10));
IkReal x7207=((cj9)*(r01));
IkReal x7208=((IkReal(1.00000000000000))*(cj14));
IkReal x7209=((cj9)*(r00));
IkReal x7210=((IkReal(1.00000000000000))*(sj14));
IkReal x7211=((r10)*(sj9));
IkReal x7212=((sj10)*(x7203));
IkReal x7213=((IkReal(1.00000000000000))*(sj10)*(x7202));
IkReal x7214=((x7203)*(x7206));
IkReal x7215=((x7213)+(x7214));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x7215))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((cj10)*(x7202)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x7212)))+(((IkReal(-1.00000000000000))*(r21)*(x7204))));
evalcond[2]=((x7212)+(((IkReal(-1.00000000000000))*(x7207)*(x7208)))+(((IkReal(-1.00000000000000))*(x7205)*(x7208)))+(((IkReal(-1.00000000000000))*(x7202)*(x7206)))+(((IkReal(-1.00000000000000))*(x7209)*(x7210)))+(((IkReal(-1.00000000000000))*(x7210)*(x7211))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x7208)*(x7209)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x7215)))+(((x7204)*(x7207)))+(((x7204)*(x7205)))+(((IkReal(-1.00000000000000))*(cj13)*(x7208)*(x7211)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x7216=((IkReal(0.0100000000000000))*(cj14));
IkReal x7217=((r10)*(sj9));
IkReal x7218=((IkReal(1.00000000000000))*(sj9));
IkReal x7219=((IkReal(0.0100000000000000))*(sj14));
IkReal x7220=((cj9)*(r11));
IkReal x7221=((r00)*(sj9));
IkReal x7222=((IkReal(0.374290000000000))*(sj14));
IkReal x7223=((cj13)*(r02));
IkReal x7224=((cj9)*(r12));
IkReal x7225=((cj9)*(r00));
IkReal x7226=((r01)*(sj9));
IkReal x7227=((IkReal(0.374290000000000))*(cj14));
IkReal x7228=((IkReal(1.00000000000000))*(cj9));
IkReal x7229=((cj9)*(r10));
IkReal x7230=((r11)*(sj9));
IkReal x7231=((IkReal(1.00000000000000))*(sj13));
IkReal x7232=((cj14)*(sj13));
IkReal x7233=((cj13)*(sj14));
IkReal x7234=((cj13)*(cj14));
IkReal x7235=((r11)*(sj13)*(sj14));
IkReal x7236=((cj9)*(x7227));
IkReal x7237=((r01)*(sj13)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7232)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7231)))+(((cj13)*(r22))));
evalcond[2]=((((r21)*(x7227)))+(((r20)*(x7222)))+(((r21)*(x7219)))+(pz)+(((IkReal(-0.0690000000000000))*(cj10)))+(((IkReal(0.364420000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(r20)*(x7216))));
evalcond[3]=((((sj14)*(x7221)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7228)))+(((IkReal(-1.00000000000000))*(cj14)*(x7220)))+(((cj14)*(x7226))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj13)*(x7224)))+(((x7221)*(x7232)))+(((IkReal(-1.00000000000000))*(x7218)*(x7237)))+(((sj9)*(x7223)))+(((sj13)*(sj14)*(x7220)))+(((IkReal(-1.00000000000000))*(r10)*(x7228)*(x7232))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x7218)*(x7233)))+(((x7221)*(x7234)))+(((sj13)*(x7224)))+(((x7220)*(x7233)))+(((IkReal(-1.00000000000000))*(r10)*(x7228)*(x7234)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x7218))));
evalcond[6]=((((cj9)*(x7237)))+(((IkReal(-1.00000000000000))*(cj14)*(x7217)*(x7231)))+(((IkReal(-1.00000000000000))*(cj14)*(x7225)*(x7231)))+(((sj13)*(sj14)*(x7230)))+(((IkReal(-1.00000000000000))*(x7223)*(x7228)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x7218))));
evalcond[7]=((((x7219)*(x7226)))+(((x7221)*(x7222)))+(((x7216)*(x7229)))+(((IkReal(-1.00000000000000))*(x7222)*(x7229)))+(((IkReal(-1.00000000000000))*(x7216)*(x7221)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x7220)*(x7227)))+(((IkReal(-1.00000000000000))*(py)*(x7228)))+(((x7226)*(x7227)))+(((IkReal(-1.00000000000000))*(x7219)*(x7220))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7217)*(x7222)))+(((IkReal(-1.00000000000000))*(py)*(x7218)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7219)))+(((IkReal(-1.00000000000000))*(px)*(x7228)))+(((x7216)*(x7225)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(0.0690000000000000))*(sj10)))+(((x7216)*(x7217)))+(((IkReal(-1.00000000000000))*(x7222)*(x7225)))+(((IkReal(-1.00000000000000))*(x7227)*(x7230)))+(((IkReal(-1.00000000000000))*(x7219)*(x7230)))+(((IkReal(-1.00000000000000))*(r01)*(x7236))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((cj10)*(cj10))+((sj10)*(sj10))));
dummyeval[0]=(((cj10)*(cj10))+((sj10)*(sj10)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7238=((sj10)*(sj14));
IkReal x7239=((cj14)*(r21));
IkReal x7240=((cj10)*(sj14));
IkReal x7241=((IkReal(1.00000000000000))*(cj10));
IkReal x7242=((IkReal(1.00000000000000))*(sj10));
IkReal x7243=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x7244=((cj14)*(r11)*(sj9));
IkReal x7245=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x7246=((cj14)*(cj9)*(r01));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r20)*(x7240)))+(((IkReal(-1.00000000000000))*(x7242)*(x7246)))+(((IkReal(-1.00000000000000))*(x7242)*(x7244)))+(((IkReal(-1.00000000000000))*(x7239)*(x7241)))+(((IkReal(-1.00000000000000))*(x7238)*(x7243)))+(((IkReal(-1.00000000000000))*(x7238)*(x7245))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((r20)*(x7238)))+(((sj10)*(x7239)))+(((IkReal(-1.00000000000000))*(x7240)*(x7243)))+(((IkReal(-1.00000000000000))*(x7240)*(x7245)))+(((IkReal(-1.00000000000000))*(x7241)*(x7244)))+(((IkReal(-1.00000000000000))*(x7241)*(x7246))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(r20)*(x7240)))+(((IkReal(-1.00000000000000))*(x7242)*(x7246)))+(((IkReal(-1.00000000000000))*(x7242)*(x7244)))+(((IkReal(-1.00000000000000))*(x7239)*(x7241)))+(((IkReal(-1.00000000000000))*(x7238)*(x7243)))+(((IkReal(-1.00000000000000))*(x7238)*(x7245)))))), ((gconst8)*(((((r20)*(x7238)))+(((sj10)*(x7239)))+(((IkReal(-1.00000000000000))*(x7240)*(x7243)))+(((IkReal(-1.00000000000000))*(x7240)*(x7245)))+(((IkReal(-1.00000000000000))*(x7241)*(x7244)))+(((IkReal(-1.00000000000000))*(x7241)*(x7246)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7247=IKsin(j12);
IkReal x7248=IKcos(j12);
IkReal x7249=((cj13)*(sj14));
IkReal x7250=((r11)*(sj9));
IkReal x7251=((cj13)*(cj14));
IkReal x7252=((IkReal(1.00000000000000))*(cj14));
IkReal x7253=((IkReal(1.00000000000000))*(cj10));
IkReal x7254=((cj9)*(r01));
IkReal x7255=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x7256=((sj10)*(x7248));
IkReal x7257=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x7258=((IkReal(1.00000000000000))*(sj10)*(x7247));
IkReal x7259=((x7248)*(x7253));
IkReal x7260=((x7258)+(x7259));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((cj10)*(x7247)))+(((IkReal(-1.00000000000000))*(x7256))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7249)))+(((IkReal(-1.00000000000000))*(x7260)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((r20)*(x7251))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7252)*(x7254)))+(((IkReal(-1.00000000000000))*(x7260)))+(((IkReal(-1.00000000000000))*(x7250)*(x7252)))+(((IkReal(-1.00000000000000))*(sj14)*(x7257)))+(((IkReal(-1.00000000000000))*(sj14)*(x7255))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7251)*(x7257)))+(((IkReal(-1.00000000000000))*(x7251)*(x7255)))+(x7256)+(((IkReal(-1.00000000000000))*(x7247)*(x7253)))+(((cj9)*(r02)*(sj13)))+(((x7249)*(x7250)))+(((x7249)*(x7254)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7261=((r21)*(sj10));
IkReal x7262=((r20)*(sj14));
IkReal x7263=((IkReal(1.00000000000000))*(cj10));
IkReal x7264=((IkReal(1.00000000000000))*(r22)*(sj13));
IkReal x7265=((IkReal(1.00000000000000))*(cj13)*(sj14));
IkReal x7266=((cj13)*(cj14)*(r20));
if( IKabs(((gconst7)*(((((sj10)*(x7266)))+(((IkReal(-1.00000000000000))*(cj14)*(r21)*(x7263)))+(((IkReal(-1.00000000000000))*(x7261)*(x7265)))+(((IkReal(-1.00000000000000))*(x7262)*(x7263)))+(((IkReal(-1.00000000000000))*(sj10)*(x7264))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((sj10)*(x7262)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x7263)))+(((cj14)*(x7261)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x7263)))+(((cj10)*(x7266))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst7)*(((((sj10)*(x7266)))+(((IkReal(-1.00000000000000))*(cj14)*(r21)*(x7263)))+(((IkReal(-1.00000000000000))*(x7261)*(x7265)))+(((IkReal(-1.00000000000000))*(x7262)*(x7263)))+(((IkReal(-1.00000000000000))*(sj10)*(x7264)))))), ((gconst7)*(((((sj10)*(x7262)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)*(x7263)))+(((cj14)*(x7261)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)*(x7263)))+(((cj10)*(x7266)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7267=IKsin(j12);
IkReal x7268=IKcos(j12);
IkReal x7269=((cj13)*(sj14));
IkReal x7270=((r11)*(sj9));
IkReal x7271=((cj13)*(cj14));
IkReal x7272=((IkReal(1.00000000000000))*(cj14));
IkReal x7273=((IkReal(1.00000000000000))*(cj10));
IkReal x7274=((cj9)*(r01));
IkReal x7275=((IkReal(1.00000000000000))*(cj9)*(r00));
IkReal x7276=((sj10)*(x7268));
IkReal x7277=((IkReal(1.00000000000000))*(r10)*(sj9));
IkReal x7278=((IkReal(1.00000000000000))*(sj10)*(x7267));
IkReal x7279=((x7268)*(x7273));
IkReal x7280=((x7278)+(x7279));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x7276)))+(((r20)*(sj14)))+(((cj10)*(x7267))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x7280)))+(((r20)*(x7271)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(r21)*(x7269))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x7275)))+(((IkReal(-1.00000000000000))*(sj14)*(x7277)))+(((IkReal(-1.00000000000000))*(x7280)))+(((IkReal(-1.00000000000000))*(x7272)*(x7274)))+(((IkReal(-1.00000000000000))*(x7270)*(x7272))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7267)*(x7273)))+(x7276)+(((cj9)*(r02)*(sj13)))+(((x7269)*(x7274)))+(((x7269)*(x7270)))+(((IkReal(-1.00000000000000))*(x7271)*(x7277)))+(((IkReal(-1.00000000000000))*(x7271)*(x7275)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x7281=((IkReal(0.0100000000000000))*(cj14));
IkReal x7282=((r10)*(sj9));
IkReal x7283=((cj9)*(r11));
IkReal x7284=((sj13)*(sj14));
IkReal x7285=((cj9)*(r00));
IkReal x7286=((IkReal(0.374290000000000))*(cj14));
IkReal x7287=((cj9)*(r01));
IkReal x7288=((r01)*(sj9));
IkReal x7289=((IkReal(0.0100000000000000))*(sj14));
IkReal x7290=((IkReal(0.374290000000000))*(sj14));
IkReal x7291=((r00)*(sj9));
IkReal x7292=((cj13)*(r02));
IkReal x7293=((cj9)*(r10));
IkReal x7294=((IkReal(1.00000000000000))*(sj9));
IkReal x7295=((IkReal(1.00000000000000))*(cj9));
IkReal x7296=((cj13)*(r12));
IkReal x7297=((r11)*(sj9));
IkReal x7298=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7284)))+(((IkReal(-1.00000000000000))*(sj11)))+(((r20)*(x7298)))+(((cj13)*(r22))));
evalcond[2]=((((IkReal(0.0690000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(r20)*(x7281)))+(((r21)*(x7286)))+(((r21)*(x7289)))+(pz)+(((r20)*(x7290))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7284)*(x7288)))+(((IkReal(-1.00000000000000))*(x7295)*(x7296)))+(((IkReal(-1.00000000000000))*(x7293)*(x7298)))+(cj11)+(((x7291)*(x7298)))+(((sj9)*(x7292)))+(((x7283)*(x7284))));
evalcond[4]=((((x7284)*(x7297)))+(((IkReal(-1.00000000000000))*(x7285)*(x7298)))+(((x7284)*(x7287)))+(((IkReal(-1.00000000000000))*(x7294)*(x7296)))+(((IkReal(-1.00000000000000))*(x7282)*(x7298)))+(((IkReal(-1.00000000000000))*(x7292)*(x7295))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7281)*(x7291)))+(((IkReal(-1.00000000000000))*(py)*(x7295)))+(((IkReal(-1.00000000000000))*(x7290)*(x7293)))+(((x7286)*(x7288)))+(((IkReal(0.0690000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x7283)*(x7286)))+(((IkReal(-1.00000000000000))*(x7283)*(x7289)))+(((x7290)*(x7291)))+(((px)*(sj9)))+(((x7281)*(x7293)))+(((x7288)*(x7289))));
evalcond[6]=((IkReal(0.433420000000000))+(((x7281)*(x7285)))+(((x7281)*(x7282)))+(((IkReal(-1.00000000000000))*(x7285)*(x7290)))+(((IkReal(-1.00000000000000))*(py)*(x7294)))+(((IkReal(-1.00000000000000))*(x7286)*(x7297)))+(((IkReal(-1.00000000000000))*(x7286)*(x7287)))+(((IkReal(-1.00000000000000))*(x7289)*(x7297)))+(((IkReal(-1.00000000000000))*(px)*(x7295)))+(((IkReal(-1.00000000000000))*(x7282)*(x7290)))+(((IkReal(-1.00000000000000))*(x7287)*(x7289))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x7299=((IkReal(0.0100000000000000))*(cj14));
IkReal x7300=((r10)*(sj9));
IkReal x7301=((cj9)*(r11));
IkReal x7302=((sj13)*(sj14));
IkReal x7303=((cj9)*(r00));
IkReal x7304=((IkReal(0.374290000000000))*(cj14));
IkReal x7305=((cj9)*(r01));
IkReal x7306=((r01)*(sj9));
IkReal x7307=((IkReal(0.0100000000000000))*(sj14));
IkReal x7308=((r00)*(sj9));
IkReal x7309=((IkReal(0.374290000000000))*(sj14));
IkReal x7310=((cj13)*(r02));
IkReal x7311=((cj9)*(r12));
IkReal x7312=((IkReal(1.00000000000000))*(sj9));
IkReal x7313=((IkReal(1.00000000000000))*(cj9));
IkReal x7314=((r11)*(sj9));
IkReal x7315=((cj9)*(r10));
IkReal x7316=((cj14)*(sj13));
IkReal x7317=((IkReal(1.00000000000000))*(cj13));
IkReal x7318=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7316)))+(((IkReal(-1.00000000000000))*(r21)*(x7302)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x7299)))+(((r21)*(x7304)))+(((r21)*(x7307)))+(pz)+(((r20)*(x7309))));
evalcond[3]=((((cj14)*(x7306)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7313)))+(((sj14)*(x7308)))+(((IkReal(-1.00000000000000))*(cj14)*(x7301))));
evalcond[4]=((IkReal(1.00000000000000))+(((x7301)*(x7302)))+(((IkReal(-1.00000000000000))*(r10)*(x7313)*(x7316)))+(((IkReal(-1.00000000000000))*(x7311)*(x7317)))+(((x7308)*(x7316)))+(((IkReal(-1.00000000000000))*(x7302)*(x7306)))+(((sj9)*(x7310))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x7313)*(x7318)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x7312)))+(((x7308)*(x7318)))+(((cj13)*(sj14)*(x7301)))+(((sj13)*(x7311)))+(((IkReal(-1.00000000000000))*(sj14)*(x7306)*(x7317))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x7312)))+(((x7302)*(x7305)))+(((x7302)*(x7314)))+(((IkReal(-1.00000000000000))*(x7303)*(x7316)))+(((IkReal(-1.00000000000000))*(x7310)*(x7313)))+(((IkReal(-1.00000000000000))*(x7300)*(x7316))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x7309)*(x7315)))+(((x7304)*(x7306)))+(((x7308)*(x7309)))+(((IkReal(-1.00000000000000))*(x7301)*(x7307)))+(((IkReal(-1.00000000000000))*(x7301)*(x7304)))+(((x7299)*(x7315)))+(((x7306)*(x7307)))+(((IkReal(-1.00000000000000))*(x7299)*(x7308)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(py)*(x7313))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(px)*(x7313)))+(((IkReal(-1.00000000000000))*(x7303)*(x7309)))+(((IkReal(-1.00000000000000))*(x7300)*(x7309)))+(((x7299)*(x7300)))+(((x7299)*(x7303)))+(((IkReal(-1.00000000000000))*(x7304)*(x7314)))+(((IkReal(-1.00000000000000))*(x7307)*(x7314)))+(((IkReal(-1.00000000000000))*(x7304)*(x7305)))+(((IkReal(-1.00000000000000))*(py)*(x7312)))+(((IkReal(-1.00000000000000))*(x7305)*(x7307))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7319=IKcos(j12);
IkReal x7320=((cj13)*(sj9));
IkReal x7321=((IkReal(1.00000000000000))*(cj14));
IkReal x7322=((cj13)*(sj14));
IkReal x7323=((cj9)*(r00));
IkReal x7324=((cj9)*(r01));
IkReal x7325=((IkReal(1.00000000000000))*(sj14));
IkReal x7326=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x7326))));
evalcond[1]=((x7319)+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x7322)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7319)))+(((IkReal(-1.00000000000000))*(x7323)*(x7325)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7321)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7325)))+(((IkReal(-1.00000000000000))*(x7321)*(x7324))));
evalcond[3]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x7321)*(x7323)))+(((IkReal(-1.00000000000000))*(r10)*(x7320)*(x7321)))+(((IkReal(-1.00000000000000))*(x7326)))+(((x7322)*(x7324)))+(((r12)*(sj13)*(sj9)))+(((r11)*(sj14)*(x7320))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7327=((IkReal(0.0100000000000000))*(cj14));
IkReal x7328=((r10)*(sj9));
IkReal x7329=((cj9)*(r11));
IkReal x7330=((sj13)*(sj14));
IkReal x7331=((cj9)*(r00));
IkReal x7332=((IkReal(0.374290000000000))*(cj14));
IkReal x7333=((cj9)*(r01));
IkReal x7334=((r01)*(sj9));
IkReal x7335=((IkReal(0.0100000000000000))*(sj14));
IkReal x7336=((r00)*(sj9));
IkReal x7337=((IkReal(0.374290000000000))*(sj14));
IkReal x7338=((cj13)*(r02));
IkReal x7339=((cj9)*(r12));
IkReal x7340=((IkReal(1.00000000000000))*(sj9));
IkReal x7341=((IkReal(1.00000000000000))*(cj9));
IkReal x7342=((r11)*(sj9));
IkReal x7343=((cj9)*(r10));
IkReal x7344=((cj14)*(sj13));
IkReal x7345=((IkReal(1.00000000000000))*(cj13));
IkReal x7346=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7344)))+(((IkReal(-1.00000000000000))*(r21)*(x7330)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x7327)))+(((r21)*(x7332)))+(((r21)*(x7335)))+(pz)+(((r20)*(x7337))));
evalcond[3]=((((cj14)*(x7334)))+(((IkReal(-1.00000000000000))*(cj14)*(x7329)))+(((sj14)*(x7336)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7341))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x7341)*(x7344)))+(((x7329)*(x7330)))+(((IkReal(-1.00000000000000))*(x7330)*(x7334)))+(((x7336)*(x7344)))+(((sj9)*(x7338)))+(((IkReal(-1.00000000000000))*(x7339)*(x7345))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x7341)*(x7346)))+(((IkReal(-1.00000000000000))*(sj14)*(x7334)*(x7345)))+(((x7336)*(x7346)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x7340)))+(((sj13)*(x7339)))+(((cj13)*(sj14)*(x7329))));
evalcond[6]=((((x7330)*(x7333)))+(((IkReal(-1.00000000000000))*(x7328)*(x7344)))+(((IkReal(-1.00000000000000))*(x7338)*(x7341)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x7340)))+(((x7330)*(x7342)))+(((IkReal(-1.00000000000000))*(x7331)*(x7344))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x7337)*(x7343)))+(((x7336)*(x7337)))+(((IkReal(-1.00000000000000))*(x7327)*(x7336)))+(((IkReal(-1.00000000000000))*(py)*(x7341)))+(((x7332)*(x7334)))+(((x7334)*(x7335)))+(((IkReal(-1.00000000000000))*(x7329)*(x7332)))+(((IkReal(-1.00000000000000))*(x7329)*(x7335)))+(((px)*(sj9)))+(((x7327)*(x7343))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x7332)*(x7342)))+(((x7327)*(x7328)))+(((IkReal(-1.00000000000000))*(py)*(x7340)))+(((x7327)*(x7331)))+(((IkReal(-1.00000000000000))*(x7328)*(x7337)))+(((IkReal(-1.00000000000000))*(x7332)*(x7333)))+(((IkReal(-1.00000000000000))*(x7331)*(x7337)))+(((IkReal(-1.00000000000000))*(px)*(x7341)))+(((IkReal(-1.00000000000000))*(x7333)*(x7335)))+(((IkReal(-1.00000000000000))*(x7335)*(x7342))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7347=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7347))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7347))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7347)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7347)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7347)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7347)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7348=IKsin(j12);
IkReal x7349=((cj13)*(sj9));
IkReal x7350=((IkReal(1.00000000000000))*(cj14));
IkReal x7351=((cj13)*(sj14));
IkReal x7352=((cj9)*(r00));
IkReal x7353=((cj9)*(r01));
IkReal x7354=((IkReal(1.00000000000000))*(sj14));
IkReal x7355=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((x7348)+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(x7355)))+(((IkReal(-1.00000000000000))*(r21)*(x7351)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7354)))+(((IkReal(-1.00000000000000))*(x7355)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7350)))+(((IkReal(-1.00000000000000))*(x7352)*(x7354)))+(((IkReal(-1.00000000000000))*(x7350)*(x7353))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x7349)*(x7350)))+(((IkReal(-1.00000000000000))*(cj13)*(x7350)*(x7352)))+(((r11)*(sj14)*(x7349)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x7348)))+(((r12)*(sj13)*(sj9)))+(((x7351)*(x7353))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7356=((IkReal(0.0100000000000000))*(cj14));
IkReal x7357=((r10)*(sj9));
IkReal x7358=((cj9)*(r11));
IkReal x7359=((sj13)*(sj14));
IkReal x7360=((cj14)*(r21));
IkReal x7361=((cj9)*(r00));
IkReal x7362=((IkReal(0.374290000000000))*(cj14));
IkReal x7363=((cj9)*(r01));
IkReal x7364=((r01)*(sj9));
IkReal x7365=((IkReal(0.0100000000000000))*(sj14));
IkReal x7366=((IkReal(1.00000000000000))*(sj13));
IkReal x7367=((r00)*(sj9));
IkReal x7368=((IkReal(0.374290000000000))*(sj14));
IkReal x7369=((cj13)*(sj9));
IkReal x7370=((IkReal(1.00000000000000))*(cj13));
IkReal x7371=((IkReal(1.00000000000000))*(py));
IkReal x7372=((r11)*(sj9));
IkReal x7373=((cj9)*(r10));
IkReal x7374=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x7360)+(((r20)*(sj14))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x7359)))+(((r20)*(x7374)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x7368)))+(((r21)*(x7365)))+(pz)+(((IkReal(0.374290000000000))*(x7360)))+(((IkReal(-1.00000000000000))*(r20)*(x7356))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7366)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7370))));
evalcond[5]=((((x7358)*(x7359)))+(((IkReal(-1.00000000000000))*(x7359)*(x7364)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x7370)))+(((r02)*(x7369)))+(((IkReal(-1.00000000000000))*(cj14)*(x7366)*(x7373)))+(((x7367)*(x7374))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj9)*(r02)*(x7370)))+(((IkReal(-1.00000000000000))*(r12)*(x7369)))+(((x7359)*(x7363)))+(((IkReal(-1.00000000000000))*(cj14)*(x7361)*(x7366)))+(((x7359)*(x7372)))+(((IkReal(-1.00000000000000))*(cj14)*(x7357)*(x7366))));
evalcond[7]=((IkReal(0.0690000000000000))+(((x7356)*(x7373)))+(((x7367)*(x7368)))+(((x7364)*(x7365)))+(((IkReal(-1.00000000000000))*(cj9)*(x7371)))+(((IkReal(-1.00000000000000))*(x7368)*(x7373)))+(((IkReal(-1.00000000000000))*(x7356)*(x7367)))+(((px)*(sj9)))+(((x7362)*(x7364)))+(((IkReal(-1.00000000000000))*(x7358)*(x7365)))+(((IkReal(-1.00000000000000))*(x7358)*(x7362))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x7362)*(x7372)))+(((IkReal(-1.00000000000000))*(x7363)*(x7365)))+(((x7356)*(x7357)))+(((IkReal(-1.00000000000000))*(x7357)*(x7368)))+(((IkReal(-1.00000000000000))*(sj9)*(x7371)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((x7356)*(x7361)))+(((IkReal(-1.00000000000000))*(x7361)*(x7368)))+(((IkReal(-1.00000000000000))*(x7365)*(x7372)))+(((IkReal(-1.00000000000000))*(x7362)*(x7363))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7375=((r00)*(sj14));
IkReal x7376=((cj14)*(sj9));
IkReal x7377=((IkReal(1.00000000000000))*(r11));
IkReal x7378=((IkReal(1.00000000000000))*(cj9));
IkReal x7379=((r10)*(sj14));
if( IKabs(((((sj9)*(x7375)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x7377)))+(((r01)*(x7376)))+(((IkReal(-1.00000000000000))*(x7378)*(x7379))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj9)*(x7379)))+(((IkReal(-1.00000000000000))*(x7376)*(x7377)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7378)))+(((IkReal(-1.00000000000000))*(x7375)*(x7378))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj9)*(x7375)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x7377)))+(((r01)*(x7376)))+(((IkReal(-1.00000000000000))*(x7378)*(x7379)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj9)*(x7379)))+(((IkReal(-1.00000000000000))*(x7376)*(x7377)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7378)))+(((IkReal(-1.00000000000000))*(x7375)*(x7378)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((sj9)*(x7375)))+(((IkReal(-1.00000000000000))*(cj14)*(cj9)*(x7377)))+(((r01)*(x7376)))+(((IkReal(-1.00000000000000))*(x7378)*(x7379)))), ((((IkReal(-1.00000000000000))*(sj9)*(x7379)))+(((IkReal(-1.00000000000000))*(x7376)*(x7377)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7378)))+(((IkReal(-1.00000000000000))*(x7375)*(x7378)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7380=IKcos(j12);
IkReal x7381=((cj9)*(sj14));
IkReal x7382=((IkReal(1.00000000000000))*(r00));
IkReal x7383=((cj14)*(sj9));
IkReal x7384=((IkReal(1.00000000000000))*(r11));
IkReal x7385=((cj13)*(r01));
IkReal x7386=((IkReal(1.00000000000000))*(r10));
IkReal x7387=((cj9)*(sj13));
IkReal x7388=((cj14)*(cj9));
IkReal x7389=((sj14)*(sj9));
IkReal x7390=((sj13)*(sj9));
IkReal x7391=((cj13)*(r11));
IkReal x7392=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x7381)*(x7386)))+(((r01)*(x7383)))+(((IkReal(-1.00000000000000))*(x7384)*(x7388)))+(((r00)*(x7389)))+(((IkReal(-1.00000000000000))*(x7392))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x7386)*(x7389)))+(((IkReal(-1.00000000000000))*(x7381)*(x7382)))+(((IkReal(-1.00000000000000))*(x7380)))+(((IkReal(-1.00000000000000))*(x7383)*(x7384)))+(((IkReal(-1.00000000000000))*(r01)*(x7388))));
evalcond[2]=((x7380)+(((IkReal(-1.00000000000000))*(x7385)*(x7389)))+(((x7381)*(x7391)))+(((IkReal(-1.00000000000000))*(r02)*(x7390)))+(((IkReal(-1.00000000000000))*(cj13)*(x7386)*(x7388)))+(((cj13)*(r00)*(x7383)))+(((r12)*(x7387))));
evalcond[3]=((((x7389)*(x7391)))+(((x7381)*(x7385)))+(((IkReal(-1.00000000000000))*(cj13)*(x7382)*(x7388)))+(((IkReal(-1.00000000000000))*(cj13)*(x7383)*(x7386)))+(((r12)*(x7390)))+(((r02)*(x7387)))+(((IkReal(-1.00000000000000))*(x7392))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7393=((IkReal(0.0100000000000000))*(cj14));
IkReal x7394=((r10)*(sj9));
IkReal x7395=((cj9)*(r11));
IkReal x7396=((sj13)*(sj14));
IkReal x7397=((cj14)*(r21));
IkReal x7398=((cj9)*(r00));
IkReal x7399=((IkReal(0.374290000000000))*(cj14));
IkReal x7400=((cj9)*(r01));
IkReal x7401=((r01)*(sj9));
IkReal x7402=((IkReal(0.0100000000000000))*(sj14));
IkReal x7403=((IkReal(1.00000000000000))*(sj13));
IkReal x7404=((r00)*(sj9));
IkReal x7405=((IkReal(0.374290000000000))*(sj14));
IkReal x7406=((cj13)*(sj9));
IkReal x7407=((IkReal(1.00000000000000))*(cj13));
IkReal x7408=((IkReal(1.00000000000000))*(py));
IkReal x7409=((r11)*(sj9));
IkReal x7410=((cj9)*(r10));
IkReal x7411=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((x7397)+(((r20)*(sj14))));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x7411)))+(((IkReal(-1.00000000000000))*(r21)*(x7396)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x7405)))+(((r21)*(x7402)))+(((IkReal(0.374290000000000))*(x7397)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x7393))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7407)))+(((IkReal(-1.00000000000000))*(r22)*(x7403))));
evalcond[5]=((((r02)*(x7406)))+(((x7395)*(x7396)))+(((x7404)*(x7411)))+(((IkReal(-1.00000000000000))*(cj14)*(x7403)*(x7410)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x7407)))+(((IkReal(-1.00000000000000))*(x7396)*(x7401))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r12)*(x7406)))+(((IkReal(-1.00000000000000))*(cj14)*(x7398)*(x7403)))+(((IkReal(-1.00000000000000))*(cj14)*(x7394)*(x7403)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x7407)))+(((x7396)*(x7400)))+(((x7396)*(x7409))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(cj9)*(x7408)))+(((IkReal(-1.00000000000000))*(x7393)*(x7404)))+(((x7401)*(x7402)))+(((IkReal(-1.00000000000000))*(x7395)*(x7399)))+(((x7393)*(x7410)))+(((IkReal(-1.00000000000000))*(x7405)*(x7410)))+(((x7404)*(x7405)))+(((x7399)*(x7401)))+(((IkReal(-1.00000000000000))*(x7395)*(x7402)))+(((px)*(sj9))));
evalcond[8]=((IkReal(0.433420000000000))+(((IkReal(-1.00000000000000))*(x7394)*(x7405)))+(((IkReal(-1.00000000000000))*(x7399)*(x7409)))+(((IkReal(-1.00000000000000))*(x7399)*(x7400)))+(((IkReal(-1.00000000000000))*(x7398)*(x7405)))+(((x7393)*(x7398)))+(((x7393)*(x7394)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x7408)))+(((IkReal(-1.00000000000000))*(x7400)*(x7402)))+(((IkReal(-1.00000000000000))*(x7402)*(x7409))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7412=((cj14)*(r11));
IkReal x7413=((IkReal(1.00000000000000))*(sj9));
IkReal x7414=((cj14)*(r01));
IkReal x7415=((r00)*(sj14));
IkReal x7416=((r10)*(sj14));
IkReal x7417=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((cj9)*(x7412)))+(((cj9)*(x7416)))+(((IkReal(-1.00000000000000))*(x7413)*(x7414)))+(((IkReal(-1.00000000000000))*(x7413)*(x7415))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x7414)*(x7417)))+(((IkReal(-1.00000000000000))*(x7415)*(x7417)))+(((IkReal(-1.00000000000000))*(x7412)*(x7413)))+(((IkReal(-1.00000000000000))*(x7413)*(x7416))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj9)*(x7412)))+(((cj9)*(x7416)))+(((IkReal(-1.00000000000000))*(x7413)*(x7414)))+(((IkReal(-1.00000000000000))*(x7413)*(x7415)))))+IKsqr(((((IkReal(-1.00000000000000))*(x7414)*(x7417)))+(((IkReal(-1.00000000000000))*(x7415)*(x7417)))+(((IkReal(-1.00000000000000))*(x7412)*(x7413)))+(((IkReal(-1.00000000000000))*(x7413)*(x7416)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj9)*(x7412)))+(((cj9)*(x7416)))+(((IkReal(-1.00000000000000))*(x7413)*(x7414)))+(((IkReal(-1.00000000000000))*(x7413)*(x7415)))), ((((IkReal(-1.00000000000000))*(x7414)*(x7417)))+(((IkReal(-1.00000000000000))*(x7415)*(x7417)))+(((IkReal(-1.00000000000000))*(x7412)*(x7413)))+(((IkReal(-1.00000000000000))*(x7413)*(x7416)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7418=IKsin(j12);
IkReal x7419=((cj13)*(r10));
IkReal x7420=((cj9)*(sj14));
IkReal x7421=((cj13)*(r01));
IkReal x7422=((IkReal(1.00000000000000))*(r10));
IkReal x7423=((cj14)*(r01));
IkReal x7424=((cj9)*(sj13));
IkReal x7425=((IkReal(1.00000000000000))*(cj9));
IkReal x7426=((sj14)*(sj9));
IkReal x7427=((sj13)*(sj9));
IkReal x7428=((cj13)*(r11));
IkReal x7429=((IkReal(1.00000000000000))*(IKcos(j12)));
IkReal x7430=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7431=((cj13)*(cj14)*(r00));
evalcond[0]=((((r00)*(x7426)))+(((sj9)*(x7423)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7425)))+(x7418)+(((IkReal(-1.00000000000000))*(x7420)*(x7422))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x7422)*(x7426)))+(((IkReal(-1.00000000000000))*(r11)*(x7430)))+(((IkReal(-1.00000000000000))*(x7429)))+(((IkReal(-1.00000000000000))*(r00)*(x7420)))+(((IkReal(-1.00000000000000))*(x7423)*(x7425))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x7427)))+(((sj9)*(x7431)))+(((IkReal(-1.00000000000000))*(x7421)*(x7426)))+(((IkReal(-1.00000000000000))*(x7429)))+(((x7420)*(x7428)))+(((IkReal(-1.00000000000000))*(cj14)*(x7419)*(x7425)))+(((r12)*(x7424))));
evalcond[3]=((((r02)*(x7424)))+(((x7426)*(x7428)))+(((IkReal(-1.00000000000000))*(x7418)))+(((IkReal(-1.00000000000000))*(x7419)*(x7430)))+(((x7420)*(x7421)))+(((IkReal(-1.00000000000000))*(x7425)*(x7431)))+(((r12)*(x7427))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7432=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7432)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7432)))+(((r00)*(sj14)*(sj9))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7432)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7432)))+(((r00)*(sj14)*(sj9)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7432)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7432)))+(((r00)*(sj14)*(sj9)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7433=IKsin(j12);
IkReal x7434=IKcos(j12);
IkReal x7435=((IkReal(1.00000000000000))*(sj13));
IkReal x7436=((cj13)*(r10));
IkReal x7437=((cj9)*(sj14));
IkReal x7438=((cj13)*(r01));
IkReal x7439=((IkReal(1.00000000000000))*(r10));
IkReal x7440=((r12)*(sj13));
IkReal x7441=((cj13)*(sj14));
IkReal x7442=((cj14)*(r01));
IkReal x7443=((cj13)*(cj14));
IkReal x7444=((IkReal(1.00000000000000))*(cj9));
IkReal x7445=((sj14)*(sj9));
IkReal x7446=((IkReal(1.00000000000000))*(x7433));
IkReal x7447=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x7446))));
evalcond[1]=((((r20)*(x7443)))+(((IkReal(-1.00000000000000))*(r22)*(x7435)))+(((IkReal(-1.00000000000000))*(r21)*(x7441)))+(((cj11)*(x7434))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x7446)))+(((IkReal(-1.00000000000000))*(x7437)*(x7439)))+(((r00)*(x7445)))+(((sj9)*(x7442)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7444))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7434)))+(((IkReal(-1.00000000000000))*(x7442)*(x7444)))+(((IkReal(-1.00000000000000))*(r00)*(x7437)))+(((IkReal(-1.00000000000000))*(x7439)*(x7445)))+(((IkReal(-1.00000000000000))*(r11)*(x7447))));
evalcond[4]=((((sj11)*(x7434)))+(((cj9)*(x7440)))+(((IkReal(-1.00000000000000))*(cj14)*(x7436)*(x7444)))+(((IkReal(-1.00000000000000))*(x7438)*(x7445)))+(((r00)*(sj9)*(x7443)))+(((cj13)*(r11)*(x7437)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7435))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7436)*(x7447)))+(((x7437)*(x7438)))+(((IkReal(-1.00000000000000))*(x7446)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x7443)*(x7444)))+(((r11)*(sj9)*(x7441)))+(((sj9)*(x7440))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7448=((IkReal(1.00000000000000))*(cj14));
IkReal x7449=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x7449)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7449)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7448)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7448))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x7449)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7449)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7448)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7448)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((((IkReal(-1.00000000000000))*(cj9)*(r00)*(x7449)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7449)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7448)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7448)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7450=IKsin(j12);
IkReal x7451=IKcos(j12);
IkReal x7452=((IkReal(1.00000000000000))*(sj13));
IkReal x7453=((cj13)*(r10));
IkReal x7454=((cj9)*(sj14));
IkReal x7455=((cj13)*(r01));
IkReal x7456=((IkReal(1.00000000000000))*(r10));
IkReal x7457=((r12)*(sj13));
IkReal x7458=((cj13)*(sj14));
IkReal x7459=((cj14)*(r01));
IkReal x7460=((cj13)*(cj14));
IkReal x7461=((IkReal(1.00000000000000))*(cj9));
IkReal x7462=((sj14)*(sj9));
IkReal x7463=((IkReal(1.00000000000000))*(x7450));
IkReal x7464=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x7463))));
evalcond[1]=((((cj11)*(x7451)))+(((r20)*(x7460)))+(((IkReal(-1.00000000000000))*(r21)*(x7458)))+(((IkReal(-1.00000000000000))*(r22)*(x7452))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7454)*(x7456)))+(((IkReal(-1.00000000000000))*(sj11)*(x7463)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7461)))+(((sj9)*(x7459)))+(((r00)*(x7462))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x7454)))+(((IkReal(-1.00000000000000))*(x7451)))+(((IkReal(-1.00000000000000))*(x7456)*(x7462)))+(((IkReal(-1.00000000000000))*(r11)*(x7464)))+(((IkReal(-1.00000000000000))*(x7459)*(x7461))));
evalcond[4]=((((cj13)*(r11)*(x7454)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7452)))+(((cj9)*(x7457)))+(((IkReal(-1.00000000000000))*(cj14)*(x7453)*(x7461)))+(((IkReal(-1.00000000000000))*(x7455)*(x7462)))+(((sj11)*(x7451)))+(((r00)*(sj9)*(x7460))));
evalcond[5]=((((x7454)*(x7455)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x7460)*(x7461)))+(((IkReal(-1.00000000000000))*(x7463)))+(((r11)*(sj9)*(x7458)))+(((IkReal(-1.00000000000000))*(x7453)*(x7464)))+(((sj9)*(x7457))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst9)*(((((cj14)*(r21)))+(((r20)*(sj14)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7465=IKsin(j12);
IkReal x7466=IKcos(j12);
IkReal x7467=((IkReal(1.00000000000000))*(sj13));
IkReal x7468=((cj13)*(r10));
IkReal x7469=((cj9)*(sj14));
IkReal x7470=((cj13)*(r01));
IkReal x7471=((IkReal(1.00000000000000))*(r10));
IkReal x7472=((r12)*(sj13));
IkReal x7473=((cj13)*(sj14));
IkReal x7474=((cj14)*(r01));
IkReal x7475=((cj13)*(cj14));
IkReal x7476=((IkReal(1.00000000000000))*(cj9));
IkReal x7477=((sj14)*(sj9));
IkReal x7478=((IkReal(1.00000000000000))*(x7465));
IkReal x7479=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj11)*(x7478))));
evalcond[1]=((((cj11)*(x7466)))+(((r20)*(x7475)))+(((IkReal(-1.00000000000000))*(r22)*(x7467)))+(((IkReal(-1.00000000000000))*(r21)*(x7473))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x7478)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7476)))+(((sj9)*(x7474)))+(((r00)*(x7477)))+(((IkReal(-1.00000000000000))*(x7469)*(x7471))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x7479)))+(((IkReal(-1.00000000000000))*(x7474)*(x7476)))+(((IkReal(-1.00000000000000))*(r00)*(x7469)))+(((IkReal(-1.00000000000000))*(x7471)*(x7477)))+(((IkReal(-1.00000000000000))*(x7466))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x7468)*(x7476)))+(((sj11)*(x7466)))+(((r00)*(sj9)*(x7475)))+(((cj9)*(x7472)))+(((cj13)*(r11)*(x7469)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7467)))+(((IkReal(-1.00000000000000))*(x7470)*(x7477))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((x7469)*(x7470)))+(((IkReal(-1.00000000000000))*(x7478)))+(((r11)*(sj9)*(x7473)))+(((IkReal(-1.00000000000000))*(r00)*(x7475)*(x7476)))+(((sj9)*(x7472)))+(((IkReal(-1.00000000000000))*(x7468)*(x7479))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x7480=((IkReal(0.0100000000000000))*(cj14));
IkReal x7481=((r10)*(sj9));
IkReal x7482=((cj9)*(r11));
IkReal x7483=((sj13)*(sj14));
IkReal x7484=((cj9)*(r00));
IkReal x7485=((IkReal(0.374290000000000))*(cj14));
IkReal x7486=((cj9)*(r01));
IkReal x7487=((r01)*(sj9));
IkReal x7488=((IkReal(0.0100000000000000))*(sj14));
IkReal x7489=((r00)*(sj9));
IkReal x7490=((IkReal(0.374290000000000))*(sj14));
IkReal x7491=((cj13)*(r02));
IkReal x7492=((IkReal(1.00000000000000))*(sj9));
IkReal x7493=((IkReal(1.00000000000000))*(cj9));
IkReal x7494=((cj13)*(r12));
IkReal x7495=((r11)*(sj9));
IkReal x7496=((cj9)*(r10));
IkReal x7497=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j10, IkReal(6.28318530717959))));
evalcond[1]=((sj11)+(((r20)*(x7497)))+(((IkReal(-1.00000000000000))*(r21)*(x7483)))+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x7490)))+(pz)+(((IkReal(-0.0690000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(r20)*(x7480)))+(((r21)*(x7485)))+(((r21)*(x7488))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7483)*(x7487)))+(cj11)+(((x7489)*(x7497)))+(((x7482)*(x7483)))+(((IkReal(-1.00000000000000))*(x7493)*(x7494)))+(((IkReal(-1.00000000000000))*(r10)*(x7493)*(x7497)))+(((sj9)*(x7491))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x7484)*(x7497)))+(((IkReal(-1.00000000000000))*(x7491)*(x7493)))+(((IkReal(-1.00000000000000))*(x7492)*(x7494)))+(((x7483)*(x7486)))+(((x7483)*(x7495)))+(((IkReal(-1.00000000000000))*(x7481)*(x7497))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7482)*(x7485)))+(((IkReal(-1.00000000000000))*(x7482)*(x7488)))+(((x7480)*(x7496)))+(((x7487)*(x7488)))+(((IkReal(-1.00000000000000))*(x7480)*(x7489)))+(((IkReal(-1.00000000000000))*(py)*(x7493)))+(((IkReal(0.0690000000000000))*(sj11)))+(((x7489)*(x7490)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x7490)*(x7496)))+(((x7485)*(x7487))));
evalcond[6]=((IkReal(-0.295420000000000))+(((x7480)*(x7481)))+(((x7480)*(x7484)))+(((IkReal(-1.00000000000000))*(x7486)*(x7488)))+(((IkReal(-1.00000000000000))*(x7481)*(x7490)))+(((IkReal(-1.00000000000000))*(py)*(x7492)))+(((IkReal(-1.00000000000000))*(x7488)*(x7495)))+(((IkReal(-1.00000000000000))*(x7484)*(x7490)))+(((IkReal(-1.00000000000000))*(x7485)*(x7495)))+(((IkReal(-1.00000000000000))*(x7485)*(x7486)))+(((IkReal(-1.00000000000000))*(px)*(x7493))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(cj11);
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj11;
dummyeval[1]=cj11;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x7498=((IkReal(0.0100000000000000))*(cj14));
IkReal x7499=((r10)*(sj9));
IkReal x7500=((cj9)*(r11));
IkReal x7501=((sj13)*(sj14));
IkReal x7502=((cj9)*(r00));
IkReal x7503=((IkReal(0.374290000000000))*(cj14));
IkReal x7504=((cj9)*(r01));
IkReal x7505=((r01)*(sj9));
IkReal x7506=((IkReal(0.0100000000000000))*(sj14));
IkReal x7507=((r00)*(sj9));
IkReal x7508=((IkReal(0.374290000000000))*(sj14));
IkReal x7509=((cj13)*(r02));
IkReal x7510=((cj9)*(r12));
IkReal x7511=((IkReal(1.00000000000000))*(sj9));
IkReal x7512=((IkReal(1.00000000000000))*(cj9));
IkReal x7513=((r11)*(sj9));
IkReal x7514=((cj9)*(r10));
IkReal x7515=((cj14)*(sj13));
IkReal x7516=((IkReal(1.00000000000000))*(cj13));
IkReal x7517=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7515)))+(((IkReal(-1.00000000000000))*(r21)*(x7501)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.0690000000000000))+(((r20)*(x7508)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x7498)))+(((r21)*(x7503)))+(((r21)*(x7506))));
evalcond[3]=((((cj14)*(x7505)))+(((sj14)*(x7507)))+(((IkReal(-1.00000000000000))*(cj14)*(x7500)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7512))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x7510)*(x7516)))+(((IkReal(-1.00000000000000))*(x7501)*(x7505)))+(((sj9)*(x7509)))+(((x7507)*(x7515)))+(((x7500)*(x7501)))+(((IkReal(-1.00000000000000))*(r10)*(x7512)*(x7515))));
evalcond[5]=((((cj13)*(sj14)*(x7500)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x7511)))+(((sj13)*(x7510)))+(((IkReal(-1.00000000000000))*(sj14)*(x7505)*(x7516)))+(((x7507)*(x7517)))+(((IkReal(-1.00000000000000))*(r10)*(x7512)*(x7517))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r12)*(x7511)))+(((IkReal(-1.00000000000000))*(x7502)*(x7515)))+(((x7501)*(x7504)))+(((IkReal(-1.00000000000000))*(x7509)*(x7512)))+(((x7501)*(x7513)))+(((IkReal(-1.00000000000000))*(x7499)*(x7515))));
evalcond[7]=((((x7503)*(x7505)))+(((x7498)*(x7514)))+(((IkReal(-1.00000000000000))*(x7500)*(x7506)))+(((IkReal(-1.00000000000000))*(x7500)*(x7503)))+(((x7505)*(x7506)))+(((IkReal(-1.00000000000000))*(x7498)*(x7507)))+(((IkReal(-1.00000000000000))*(x7508)*(x7514)))+(((IkReal(-1.00000000000000))*(py)*(x7512)))+(((px)*(sj9)))+(((x7507)*(x7508))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x7499)*(x7508)))+(((IkReal(-1.00000000000000))*(px)*(x7512)))+(((IkReal(-1.00000000000000))*(x7503)*(x7504)))+(((IkReal(-1.00000000000000))*(x7502)*(x7508)))+(((x7498)*(x7502)))+(((IkReal(-1.00000000000000))*(x7503)*(x7513)))+(((IkReal(-1.00000000000000))*(py)*(x7511)))+(((IkReal(-1.00000000000000))*(x7506)*(x7513)))+(((IkReal(-1.00000000000000))*(x7504)*(x7506)))+(((x7498)*(x7499))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7518=((IkReal(1.00000000000000))*(r21));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7518))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7518))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7518)))))+IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7518)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7518)))), ((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7518)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7519=IKcos(j12);
IkReal x7520=IKsin(j12);
IkReal x7521=((cj13)*(sj9));
IkReal x7522=((IkReal(1.00000000000000))*(cj14));
IkReal x7523=((cj13)*(sj14));
IkReal x7524=((cj9)*(r00));
IkReal x7525=((cj9)*(r01));
IkReal x7526=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x7520));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7523)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(x7519))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7522)*(x7525)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7526)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7522)))+(((IkReal(-1.00000000000000))*(x7524)*(x7526)))+(x7519));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj13)*(x7522)*(x7524)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r10)*(x7521)*(x7522)))+(x7520)+(((x7523)*(x7525)))+(((r12)*(sj13)*(sj9)))+(((r11)*(sj14)*(x7521))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7527=((IkReal(0.0100000000000000))*(cj14));
IkReal x7528=((r10)*(sj9));
IkReal x7529=((cj9)*(r11));
IkReal x7530=((sj13)*(sj14));
IkReal x7531=((cj9)*(r00));
IkReal x7532=((IkReal(0.374290000000000))*(cj14));
IkReal x7533=((cj9)*(r01));
IkReal x7534=((r01)*(sj9));
IkReal x7535=((IkReal(0.0100000000000000))*(sj14));
IkReal x7536=((r00)*(sj9));
IkReal x7537=((IkReal(0.374290000000000))*(sj14));
IkReal x7538=((cj13)*(r02));
IkReal x7539=((cj9)*(r12));
IkReal x7540=((IkReal(1.00000000000000))*(sj9));
IkReal x7541=((IkReal(1.00000000000000))*(cj9));
IkReal x7542=((r11)*(sj9));
IkReal x7543=((cj9)*(r10));
IkReal x7544=((cj14)*(sj13));
IkReal x7545=((IkReal(1.00000000000000))*(cj13));
IkReal x7546=((cj13)*(cj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j11, IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7544)))+(((IkReal(-1.00000000000000))*(r21)*(x7530)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x7527)))+(((r21)*(x7532)))+(((r21)*(x7535)))+(pz)+(((r20)*(x7537))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7541)))+(((IkReal(-1.00000000000000))*(cj14)*(x7529)))+(((cj14)*(x7534)))+(((sj14)*(x7536))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj9)*(x7538)))+(((IkReal(-1.00000000000000))*(r10)*(x7541)*(x7544)))+(((IkReal(-1.00000000000000))*(x7530)*(x7534)))+(((IkReal(-1.00000000000000))*(x7539)*(x7545)))+(((x7529)*(x7530)))+(((x7536)*(x7544))));
evalcond[5]=((((sj13)*(x7539)))+(((cj13)*(sj14)*(x7529)))+(((IkReal(-1.00000000000000))*(r10)*(x7541)*(x7546)))+(((IkReal(-1.00000000000000))*(sj14)*(x7534)*(x7545)))+(((IkReal(-1.00000000000000))*(r02)*(sj13)*(x7540)))+(((x7536)*(x7546))));
evalcond[6]=((((x7530)*(x7533)))+(((IkReal(-1.00000000000000))*(x7528)*(x7544)))+(((IkReal(-1.00000000000000))*(x7538)*(x7541)))+(((IkReal(-1.00000000000000))*(cj13)*(r12)*(x7540)))+(((IkReal(-1.00000000000000))*(x7531)*(x7544)))+(((x7530)*(x7542))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x7527)*(x7536)))+(((IkReal(-1.00000000000000))*(x7537)*(x7543)))+(((IkReal(-1.00000000000000))*(x7529)*(x7535)))+(((IkReal(-1.00000000000000))*(x7529)*(x7532)))+(((x7536)*(x7537)))+(((x7534)*(x7535)))+(((px)*(sj9)))+(((x7532)*(x7534)))+(((x7527)*(x7543)))+(((IkReal(-1.00000000000000))*(py)*(x7541))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x7532)*(x7533)))+(((IkReal(-1.00000000000000))*(x7535)*(x7542)))+(((x7527)*(x7528)))+(((IkReal(-1.00000000000000))*(x7533)*(x7535)))+(((IkReal(-1.00000000000000))*(x7528)*(x7537)))+(((IkReal(-1.00000000000000))*(px)*(x7541)))+(((IkReal(-1.00000000000000))*(x7531)*(x7537)))+(((x7527)*(x7531)))+(((IkReal(-1.00000000000000))*(x7532)*(x7542)))+(((IkReal(-1.00000000000000))*(py)*(x7540))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(r21)))+(((r20)*(sj14)))), ((((IkReal(-1.00000000000000))*(cj13)*(cj14)*(r20)))+(((cj13)*(r21)*(sj14)))+(((r22)*(sj13)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7547=IKcos(j12);
IkReal x7548=IKsin(j12);
IkReal x7549=((cj13)*(sj9));
IkReal x7550=((IkReal(1.00000000000000))*(cj14));
IkReal x7551=((cj13)*(sj14));
IkReal x7552=((cj9)*(r00));
IkReal x7553=((cj9)*(r01));
IkReal x7554=((IkReal(1.00000000000000))*(sj14));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x7548))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(x7547)+(((IkReal(-1.00000000000000))*(r21)*(x7551))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7554)))+(((IkReal(-1.00000000000000))*(x7550)*(x7553)))+(((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7550)))+(x7547)+(((IkReal(-1.00000000000000))*(x7552)*(x7554))));
evalcond[3]=((((x7551)*(x7553)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x7550)*(x7552)))+(((r11)*(sj14)*(x7549)))+(x7548)+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(r10)*(x7549)*(x7550))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7555=((IkReal(0.0100000000000000))*(cj14));
IkReal x7556=((r10)*(sj9));
IkReal x7557=((cj9)*(r11));
IkReal x7558=((sj13)*(sj14));
IkReal x7559=((cj14)*(r21));
IkReal x7560=((cj9)*(r00));
IkReal x7561=((IkReal(0.374290000000000))*(cj14));
IkReal x7562=((cj9)*(r01));
IkReal x7563=((r01)*(sj9));
IkReal x7564=((IkReal(0.0100000000000000))*(sj14));
IkReal x7565=((IkReal(1.00000000000000))*(sj13));
IkReal x7566=((r00)*(sj9));
IkReal x7567=((IkReal(0.374290000000000))*(sj14));
IkReal x7568=((cj13)*(sj9));
IkReal x7569=((IkReal(1.00000000000000))*(cj13));
IkReal x7570=((IkReal(1.00000000000000))*(py));
IkReal x7571=((r11)*(sj9));
IkReal x7572=((cj9)*(r10));
IkReal x7573=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x7559));
evalcond[2]=((IkReal(1.00000000000000))+(((r20)*(x7573)))+(((cj13)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x7558))));
evalcond[3]=((((IkReal(0.374290000000000))*(x7559)))+(((r21)*(x7564)))+(pz)+(((r20)*(x7567)))+(((IkReal(-1.00000000000000))*(r20)*(x7555))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7569)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7565))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7558)*(x7563)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x7569)))+(((IkReal(-1.00000000000000))*(cj14)*(x7565)*(x7572)))+(((r02)*(x7568)))+(((x7557)*(x7558)))+(((x7566)*(x7573))));
evalcond[6]=((((x7558)*(x7571)))+(((IkReal(-1.00000000000000))*(cj14)*(x7556)*(x7565)))+(((IkReal(-1.00000000000000))*(cj14)*(x7560)*(x7565)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x7569)))+(((IkReal(-1.00000000000000))*(r12)*(x7568)))+(((x7558)*(x7562))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7567)*(x7572)))+(((x7566)*(x7567)))+(((IkReal(-1.00000000000000))*(x7555)*(x7566)))+(((IkReal(-1.00000000000000))*(x7557)*(x7564)))+(((IkReal(-1.00000000000000))*(x7557)*(x7561)))+(((x7555)*(x7572)))+(((IkReal(-1.00000000000000))*(cj9)*(x7570)))+(((x7561)*(x7563)))+(((px)*(sj9)))+(((x7563)*(x7564))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x7562)*(x7564)))+(((IkReal(-1.00000000000000))*(x7561)*(x7571)))+(((IkReal(-1.00000000000000))*(x7556)*(x7567)))+(((IkReal(-1.00000000000000))*(sj9)*(x7570)))+(((IkReal(-1.00000000000000))*(x7560)*(x7567)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((x7555)*(x7556)))+(((IkReal(-1.00000000000000))*(x7561)*(x7562)))+(((IkReal(-1.00000000000000))*(x7564)*(x7571)))+(((x7555)*(x7560))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7574=((r00)*(sj14));
IkReal x7575=((cj14)*(r01));
IkReal x7576=((cj14)*(r11));
IkReal x7577=((r10)*(sj14));
IkReal x7578=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x7576)*(x7578)))+(((sj9)*(x7574)))+(((sj9)*(x7575)))+(((IkReal(-1.00000000000000))*(x7577)*(x7578))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj9)*(x7574)))+(((cj9)*(x7575)))+(((sj9)*(x7577)))+(((sj9)*(x7576))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x7576)*(x7578)))+(((sj9)*(x7574)))+(((sj9)*(x7575)))+(((IkReal(-1.00000000000000))*(x7577)*(x7578)))))+IKsqr(((((cj9)*(x7574)))+(((cj9)*(x7575)))+(((sj9)*(x7577)))+(((sj9)*(x7576)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x7576)*(x7578)))+(((sj9)*(x7574)))+(((sj9)*(x7575)))+(((IkReal(-1.00000000000000))*(x7577)*(x7578)))), ((((cj9)*(x7574)))+(((cj9)*(x7575)))+(((sj9)*(x7577)))+(((sj9)*(x7576)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7579=IKcos(j12);
IkReal x7580=IKsin(j12);
IkReal x7581=((sj13)*(sj9));
IkReal x7582=((sj14)*(sj9));
IkReal x7583=((cj13)*(r11));
IkReal x7584=((cj9)*(sj14));
IkReal x7585=((cj13)*(r10));
IkReal x7586=((cj13)*(r01));
IkReal x7587=((cj13)*(r00));
IkReal x7588=((cj14)*(sj9));
IkReal x7589=((IkReal(1.00000000000000))*(r10));
IkReal x7590=((cj9)*(sj13));
IkReal x7591=((IkReal(1.00000000000000))*(x7588));
IkReal x7592=((IkReal(1.00000000000000))*(cj14)*(cj9));
evalcond[0]=((((IkReal(-1.00000000000000))*(x7584)*(x7589)))+(((IkReal(-1.00000000000000))*(x7580)))+(((IkReal(-1.00000000000000))*(r11)*(x7592)))+(((r00)*(x7582)))+(((r01)*(x7588))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x7584)))+(((IkReal(-1.00000000000000))*(r11)*(x7591)))+(((IkReal(-1.00000000000000))*(x7582)*(x7589)))+(x7579)+(((IkReal(-1.00000000000000))*(r01)*(x7592))));
evalcond[2]=((((x7583)*(x7584)))+(((IkReal(-1.00000000000000))*(x7582)*(x7586)))+(((IkReal(-1.00000000000000))*(r02)*(x7581)))+(((r12)*(x7590)))+(x7579)+(((x7587)*(x7588)))+(((IkReal(-1.00000000000000))*(x7585)*(x7592))));
evalcond[3]=((((r12)*(x7581)))+(((x7582)*(x7583)))+(((IkReal(-1.00000000000000))*(x7587)*(x7592)))+(((x7584)*(x7586)))+(((r02)*(x7590)))+(x7580)+(((IkReal(-1.00000000000000))*(x7585)*(x7591))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7593=((IkReal(0.0100000000000000))*(cj14));
IkReal x7594=((r10)*(sj9));
IkReal x7595=((cj9)*(r11));
IkReal x7596=((sj13)*(sj14));
IkReal x7597=((cj14)*(r21));
IkReal x7598=((cj9)*(r00));
IkReal x7599=((IkReal(0.374290000000000))*(cj14));
IkReal x7600=((cj9)*(r01));
IkReal x7601=((r01)*(sj9));
IkReal x7602=((IkReal(0.0100000000000000))*(sj14));
IkReal x7603=((IkReal(1.00000000000000))*(sj13));
IkReal x7604=((r00)*(sj9));
IkReal x7605=((IkReal(0.374290000000000))*(sj14));
IkReal x7606=((cj13)*(sj9));
IkReal x7607=((IkReal(1.00000000000000))*(cj13));
IkReal x7608=((IkReal(1.00000000000000))*(py));
IkReal x7609=((r11)*(sj9));
IkReal x7610=((cj9)*(r10));
IkReal x7611=((cj14)*(sj13));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(sj14)))+(x7597));
evalcond[2]=((IkReal(-1.00000000000000))+(((r20)*(x7611)))+(((IkReal(-1.00000000000000))*(r21)*(x7596)))+(((cj13)*(r22))));
evalcond[3]=((((r20)*(x7605)))+(((r21)*(x7602)))+(pz)+(((IkReal(-1.00000000000000))*(r20)*(x7593)))+(((IkReal(0.374290000000000))*(x7597))));
evalcond[4]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7603)))+(((IkReal(-1.00000000000000))*(r21)*(sj14)*(x7607))));
evalcond[5]=((((x7595)*(x7596)))+(((x7604)*(x7611)))+(((IkReal(-1.00000000000000))*(cj14)*(x7603)*(x7610)))+(((r02)*(x7606)))+(((IkReal(-1.00000000000000))*(x7596)*(x7601)))+(((IkReal(-1.00000000000000))*(cj9)*(r12)*(x7607))));
evalcond[6]=((((x7596)*(x7600)))+(((x7596)*(x7609)))+(((IkReal(-1.00000000000000))*(cj9)*(r02)*(x7607)))+(((IkReal(-1.00000000000000))*(cj14)*(x7594)*(x7603)))+(((IkReal(-1.00000000000000))*(cj14)*(x7598)*(x7603)))+(((IkReal(-1.00000000000000))*(r12)*(x7606))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((x7599)*(x7601)))+(((IkReal(-1.00000000000000))*(x7595)*(x7602)))+(((IkReal(-1.00000000000000))*(x7593)*(x7604)))+(((IkReal(-1.00000000000000))*(x7605)*(x7610)))+(((IkReal(-1.00000000000000))*(x7595)*(x7599)))+(((x7601)*(x7602)))+(((x7604)*(x7605)))+(((x7593)*(x7610)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(x7608))));
evalcond[8]=((IkReal(-0.295420000000000))+(((IkReal(-1.00000000000000))*(x7594)*(x7605)))+(((IkReal(-1.00000000000000))*(x7600)*(x7602)))+(((IkReal(-1.00000000000000))*(x7599)*(x7609)))+(((IkReal(-1.00000000000000))*(x7599)*(x7600)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x7598)*(x7605)))+(((x7593)*(x7594)))+(((x7593)*(x7598)))+(((IkReal(-1.00000000000000))*(x7602)*(x7609)))+(((IkReal(-1.00000000000000))*(sj9)*(x7608))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7612=((cj14)*(cj9));
IkReal x7613=((IkReal(1.00000000000000))*(sj9));
IkReal x7614=((r00)*(sj14));
IkReal x7615=((r10)*(sj14));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7613)))+(((cj9)*(x7615)))+(((r11)*(x7612)))+(((IkReal(-1.00000000000000))*(x7613)*(x7614))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x7612)))+(((cj14)*(r11)*(sj9)))+(((cj9)*(x7614)))+(((sj9)*(x7615))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7613)))+(((cj9)*(x7615)))+(((r11)*(x7612)))+(((IkReal(-1.00000000000000))*(x7613)*(x7614)))))+IKsqr(((((r01)*(x7612)))+(((cj14)*(r11)*(sj9)))+(((cj9)*(x7614)))+(((sj9)*(x7615)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7613)))+(((cj9)*(x7615)))+(((r11)*(x7612)))+(((IkReal(-1.00000000000000))*(x7613)*(x7614)))), ((((r01)*(x7612)))+(((cj14)*(r11)*(sj9)))+(((cj9)*(x7614)))+(((sj9)*(x7615)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7616=IKcos(j12);
IkReal x7617=IKsin(j12);
IkReal x7618=((r12)*(sj13));
IkReal x7619=((sj14)*(sj9));
IkReal x7620=((cj13)*(r11));
IkReal x7621=((cj9)*(sj14));
IkReal x7622=((IkReal(1.00000000000000))*(cj14));
IkReal x7623=((cj13)*(cj9));
IkReal x7624=((cj13)*(r01));
IkReal x7625=((cj14)*(sj9));
IkReal x7626=((IkReal(1.00000000000000))*(r10));
IkReal x7627=((r02)*(sj13));
evalcond[0]=((((r00)*(x7619)))+(((IkReal(-1.00000000000000))*(x7621)*(x7626)))+(((r01)*(x7625)))+(((IkReal(-1.00000000000000))*(cj9)*(r11)*(x7622)))+(x7617));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7622)))+(((IkReal(-1.00000000000000))*(r00)*(x7621)))+(((IkReal(-1.00000000000000))*(x7619)*(x7626)))+(x7616)+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7622))));
evalcond[2]=((((cj9)*(x7618)))+(((x7620)*(x7621)))+(((IkReal(-1.00000000000000))*(r10)*(x7622)*(x7623)))+(((IkReal(-1.00000000000000))*(sj9)*(x7627)))+(((cj13)*(r00)*(x7625)))+(((IkReal(-1.00000000000000))*(x7616)))+(((IkReal(-1.00000000000000))*(x7619)*(x7624))));
evalcond[3]=((((x7621)*(x7624)))+(((sj9)*(x7618)))+(((IkReal(-1.00000000000000))*(r00)*(x7622)*(x7623)))+(((cj9)*(x7627)))+(((IkReal(-1.00000000000000))*(cj13)*(r10)*(sj9)*(x7622)))+(((x7619)*(x7620)))+(x7617));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7628=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x7628))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x7628))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x7628)))))))+IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x7628)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(cj9)*(r11)))+(((cj14)*(r01)*(sj9)))+(((r00)*(sj14)*(sj9)))+(((IkReal(-1.00000000000000))*(cj9)*(r10)*(x7628)))))), ((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(x7628)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7629=IKsin(j12);
IkReal x7630=IKcos(j12);
IkReal x7631=((IkReal(1.00000000000000))*(sj13));
IkReal x7632=((cj13)*(r10));
IkReal x7633=((cj9)*(sj14));
IkReal x7634=((cj13)*(r01));
IkReal x7635=((IkReal(1.00000000000000))*(r10));
IkReal x7636=((r12)*(sj13));
IkReal x7637=((cj13)*(sj14));
IkReal x7638=((cj14)*(r01));
IkReal x7639=((cj13)*(cj14));
IkReal x7640=((IkReal(1.00000000000000))*(cj9));
IkReal x7641=((sj14)*(sj9));
IkReal x7642=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj11)*(x7629)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7637)))+(((IkReal(-1.00000000000000))*(r22)*(x7631)))+(((IkReal(-1.00000000000000))*(cj11)*(x7630)))+(((r20)*(x7639))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7633)*(x7635)))+(((sj9)*(x7638)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7640)))+(((IkReal(-1.00000000000000))*(sj11)*(x7629)))+(((r00)*(x7641))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7635)*(x7641)))+(((IkReal(-1.00000000000000))*(r00)*(x7633)))+(((IkReal(-1.00000000000000))*(r11)*(x7642)))+(((IkReal(-1.00000000000000))*(x7638)*(x7640)))+(x7630));
evalcond[4]=((((r00)*(sj9)*(x7639)))+(((IkReal(-1.00000000000000))*(x7634)*(x7641)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7631)))+(((cj13)*(r11)*(x7633)))+(((cj9)*(x7636)))+(((sj11)*(x7630)))+(((IkReal(-1.00000000000000))*(cj14)*(x7632)*(x7640))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7632)*(x7642)))+(((x7633)*(x7634)))+(((r11)*(sj9)*(x7637)))+(((cj9)*(r02)*(sj13)))+(((sj9)*(x7636)))+(((IkReal(-1.00000000000000))*(r00)*(x7639)*(x7640)))+(x7629));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))))+IKsqr(((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj14)*(r21)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))), ((((cj14)*(r11)*(sj9)))+(((r10)*(sj14)*(sj9)))+(((cj14)*(cj9)*(r01)))+(((cj9)*(r00)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7643=IKsin(j12);
IkReal x7644=IKcos(j12);
IkReal x7645=((IkReal(1.00000000000000))*(sj13));
IkReal x7646=((cj13)*(r10));
IkReal x7647=((cj9)*(sj14));
IkReal x7648=((cj13)*(r01));
IkReal x7649=((IkReal(1.00000000000000))*(r10));
IkReal x7650=((r12)*(sj13));
IkReal x7651=((cj13)*(sj14));
IkReal x7652=((cj14)*(r01));
IkReal x7653=((cj13)*(cj14));
IkReal x7654=((IkReal(1.00000000000000))*(cj9));
IkReal x7655=((sj14)*(sj9));
IkReal x7656=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj11)*(x7643)))+(((cj14)*(r21)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x7645)))+(((IkReal(-1.00000000000000))*(r21)*(x7651)))+(((r20)*(x7653)))+(((IkReal(-1.00000000000000))*(cj11)*(x7644))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x7643)))+(((sj9)*(x7652)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7654)))+(((r00)*(x7655)))+(((IkReal(-1.00000000000000))*(x7647)*(x7649))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7649)*(x7655)))+(((IkReal(-1.00000000000000))*(r00)*(x7647)))+(((IkReal(-1.00000000000000))*(r11)*(x7656)))+(((IkReal(-1.00000000000000))*(x7652)*(x7654)))+(x7644));
evalcond[4]=((((cj9)*(x7650)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7645)))+(((cj13)*(r11)*(x7647)))+(((IkReal(-1.00000000000000))*(x7648)*(x7655)))+(((IkReal(-1.00000000000000))*(cj14)*(x7646)*(x7654)))+(((sj11)*(x7644)))+(((r00)*(sj9)*(x7653))));
evalcond[5]=((((r11)*(sj9)*(x7651)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x7653)*(x7654)))+(((sj9)*(x7650)))+(((IkReal(-1.00000000000000))*(x7646)*(x7656)))+(((x7647)*(x7648)))+(x7643));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7657=((IkReal(1.00000000000000))*(r21));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7657))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7657)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(x7657)))))), ((gconst10)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(sj14)*(x7657)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7658=IKsin(j12);
IkReal x7659=IKcos(j12);
IkReal x7660=((IkReal(1.00000000000000))*(sj13));
IkReal x7661=((cj13)*(r10));
IkReal x7662=((cj9)*(sj14));
IkReal x7663=((cj13)*(r01));
IkReal x7664=((IkReal(1.00000000000000))*(r10));
IkReal x7665=((r12)*(sj13));
IkReal x7666=((cj13)*(sj14));
IkReal x7667=((cj14)*(r01));
IkReal x7668=((cj13)*(cj14));
IkReal x7669=((IkReal(1.00000000000000))*(cj9));
IkReal x7670=((sj14)*(sj9));
IkReal x7671=((IkReal(1.00000000000000))*(cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((cj11)*(x7658)))+(((r20)*(sj14))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7666)))+(((r20)*(x7668)))+(((IkReal(-1.00000000000000))*(r22)*(x7660)))+(((IkReal(-1.00000000000000))*(cj11)*(x7659))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x7658)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7669)))+(((sj9)*(x7667)))+(((IkReal(-1.00000000000000))*(x7662)*(x7664)))+(((r00)*(x7670))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x7662)))+(((IkReal(-1.00000000000000))*(r11)*(x7671)))+(((IkReal(-1.00000000000000))*(x7664)*(x7670)))+(x7659)+(((IkReal(-1.00000000000000))*(x7667)*(x7669))));
evalcond[4]=((((r00)*(sj9)*(x7668)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7660)))+(((cj9)*(x7665)))+(((cj13)*(r11)*(x7662)))+(((sj11)*(x7659)))+(((IkReal(-1.00000000000000))*(cj14)*(x7661)*(x7669)))+(((IkReal(-1.00000000000000))*(x7663)*(x7670))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x7668)*(x7669)))+(((IkReal(-1.00000000000000))*(x7661)*(x7671)))+(((x7662)*(x7663)))+(((cj9)*(r02)*(sj13)))+(((r11)*(sj9)*(x7666)))+(((sj9)*(x7665)))+(x7658));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x7672=((cj9)*(r11));
IkReal x7673=((sj13)*(sj14));
IkReal x7674=((IkReal(0.0100000000000000))*(cj14));
IkReal x7675=((cj9)*(r00));
IkReal x7676=((IkReal(0.374290000000000))*(cj14));
IkReal x7677=((r10)*(sj9));
IkReal x7678=((r01)*(sj9));
IkReal x7679=((IkReal(0.0100000000000000))*(sj14));
IkReal x7680=((r00)*(sj9));
IkReal x7681=((IkReal(0.374290000000000))*(sj14));
IkReal x7682=((cj13)*(sj9));
IkReal x7683=((cj9)*(r01));
IkReal x7684=((IkReal(1.00000000000000))*(py));
IkReal x7685=((r11)*(sj9));
IkReal x7686=((cj9)*(r10));
IkReal x7687=((cj14)*(sj13));
IkReal x7688=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7673)))+(((r20)*(x7687)))+(((IkReal(-1.00000000000000))*(cj10)))+(((cj13)*(r22))));
evalcond[2]=((((r20)*(x7681)))+(((r21)*(x7679)))+(((r21)*(x7676)))+(((IkReal(-1.00000000000000))*(r20)*(x7674)))+(pz)+(((IkReal(0.364420000000000))*(sj10))));
evalcond[3]=((((x7672)*(x7673)))+(((IkReal(-1.00000000000000))*(x7686)*(x7687)))+(((x7680)*(x7687)))+(((IkReal(-1.00000000000000))*(x7673)*(x7678)))+(((IkReal(-1.00000000000000))*(r12)*(x7688)))+(((r02)*(x7682))));
evalcond[4]=((((x7673)*(x7683)))+(((x7673)*(x7685)))+(((IkReal(-1.00000000000000))*(x7677)*(x7687)))+(((IkReal(-1.00000000000000))*(x7675)*(x7687)))+(sj10)+(((IkReal(-1.00000000000000))*(r12)*(x7682)))+(((IkReal(-1.00000000000000))*(r02)*(x7688))));
evalcond[5]=((IkReal(0.0690000000000000))+(((x7680)*(x7681)))+(((x7674)*(x7686)))+(((IkReal(-1.00000000000000))*(x7681)*(x7686)))+(((IkReal(-1.00000000000000))*(x7674)*(x7680)))+(((IkReal(-1.00000000000000))*(cj9)*(x7684)))+(((x7678)*(x7679)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x7672)*(x7676)))+(((IkReal(-1.00000000000000))*(x7672)*(x7679)))+(((x7676)*(x7678))));
evalcond[6]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7676)*(x7685)))+(((IkReal(-1.00000000000000))*(x7676)*(x7683)))+(((IkReal(-1.00000000000000))*(x7677)*(x7681)))+(((IkReal(0.364420000000000))*(cj10)))+(((x7674)*(x7675)))+(((x7674)*(x7677)))+(((IkReal(-1.00000000000000))*(x7679)*(x7683)))+(((IkReal(-1.00000000000000))*(x7679)*(x7685)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(sj9)*(x7684)))+(((IkReal(-1.00000000000000))*(x7675)*(x7681))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj10;
dummyeval[1]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x7689=((IkReal(0.0100000000000000))*(cj14));
IkReal x7690=((r10)*(sj9));
IkReal x7691=((cj9)*(sj14));
IkReal x7692=((r11)*(sj13));
IkReal x7693=((cj9)*(r00));
IkReal x7694=((IkReal(1.00000000000000))*(sj9));
IkReal x7695=((cj14)*(r11));
IkReal x7696=((r01)*(sj14));
IkReal x7697=((r21)*(sj14));
IkReal x7698=((IkReal(0.0100000000000000))*(r11));
IkReal x7699=((r00)*(sj9));
IkReal x7700=((IkReal(0.374290000000000))*(sj14));
IkReal x7701=((cj13)*(r02));
IkReal x7702=((IkReal(1.00000000000000))*(cj14));
IkReal x7703=((IkReal(1.00000000000000))*(cj9));
IkReal x7704=((cj13)*(r12));
IkReal x7705=((sj14)*(sj9));
IkReal x7706=((cj9)*(r10));
IkReal x7707=((cj14)*(sj13));
IkReal x7708=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x7697)))+(((r20)*(x7707)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x7689)))+(((r20)*(x7700)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((IkReal(0.0100000000000000))*(x7697))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7702)))+(((IkReal(-1.00000000000000))*(x7694)*(x7695)))+(((IkReal(-1.00000000000000))*(r00)*(x7691)))+(((IkReal(-1.00000000000000))*(sj14)*(x7690))));
evalcond[4]=((((x7691)*(x7692)))+(((IkReal(-1.00000000000000))*(x7703)*(x7704)))+(((IkReal(-1.00000000000000))*(sj13)*(x7702)*(x7706)))+(((IkReal(-1.00000000000000))*(sj13)*(x7694)*(x7696)))+(((sj9)*(x7701)))+(((x7699)*(x7707))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x7693)*(x7702)))+(((x7692)*(x7705)))+(((IkReal(-1.00000000000000))*(x7701)*(x7703)))+(((r01)*(sj13)*(x7691)))+(((IkReal(-1.00000000000000))*(x7694)*(x7704)))+(((IkReal(-1.00000000000000))*(sj13)*(x7690)*(x7702))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x7693)*(x7702)))+(((cj13)*(r01)*(x7691)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x7705)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x7690)*(x7702))));
evalcond[7]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7691)*(x7698)))+(((IkReal(-1.00000000000000))*(py)*(x7703)))+(((IkReal(0.0100000000000000))*(sj9)*(x7696)))+(((px)*(sj9)))+(((x7689)*(x7706)))+(((IkReal(-1.00000000000000))*(x7689)*(x7699)))+(((IkReal(-0.374290000000000))*(r10)*(x7691)))+(((sj9)*(x7708)))+(((x7699)*(x7700)))+(((IkReal(-0.374290000000000))*(cj9)*(x7695))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x7689)*(x7693)))+(((x7689)*(x7690)))+(((IkReal(-0.0100000000000000))*(r01)*(x7691)))+(((IkReal(-1.00000000000000))*(x7698)*(x7705)))+(((IkReal(-0.374290000000000))*(sj9)*(x7695)))+(((IkReal(-1.00000000000000))*(cj9)*(x7708)))+(((IkReal(-1.00000000000000))*(py)*(x7694)))+(((IkReal(-1.00000000000000))*(x7690)*(x7700)))+(((IkReal(-0.374290000000000))*(r00)*(x7691)))+(((IkReal(-1.00000000000000))*(px)*(x7703))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7709=IKcos(j12);
IkReal x7710=((sj14)*(sj9));
IkReal x7711=((IkReal(1.00000000000000))*(sj13));
IkReal x7712=((cj13)*(sj14));
IkReal x7713=((cj9)*(r11));
IkReal x7714=((IkReal(1.00000000000000))*(cj13));
IkReal x7715=((cj9)*(r10));
IkReal x7716=((cj14)*(sj9));
IkReal x7717=((IkReal(1.00000000000000))*(IKsin(j12)));
evalcond[0]=((((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(x7709)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7711)))+(((IkReal(-1.00000000000000))*(x7717)))+(((IkReal(-1.00000000000000))*(r21)*(x7712))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7717)))+(((IkReal(-1.00000000000000))*(sj14)*(x7715)))+(((IkReal(-1.00000000000000))*(cj14)*(x7713)))+(((r01)*(x7716)))+(((r00)*(x7710))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x7710)*(x7714)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7711)))+(((cj13)*(r00)*(x7716)))+(((cj9)*(r12)*(sj13)))+(((x7712)*(x7713)))+(((IkReal(-1.00000000000000))*(cj14)*(x7714)*(x7715)))+(x7709));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7718=((IkReal(0.0100000000000000))*(cj14));
IkReal x7719=((r10)*(sj9));
IkReal x7720=((cj9)*(sj14));
IkReal x7721=((r11)*(sj13));
IkReal x7722=((cj9)*(r00));
IkReal x7723=((IkReal(1.00000000000000))*(sj9));
IkReal x7724=((cj14)*(r11));
IkReal x7725=((r01)*(sj14));
IkReal x7726=((r21)*(sj14));
IkReal x7727=((IkReal(0.0100000000000000))*(r11));
IkReal x7728=((r00)*(sj9));
IkReal x7729=((IkReal(0.374290000000000))*(sj14));
IkReal x7730=((cj13)*(r02));
IkReal x7731=((IkReal(1.00000000000000))*(cj14));
IkReal x7732=((IkReal(1.00000000000000))*(cj9));
IkReal x7733=((cj13)*(r12));
IkReal x7734=((sj14)*(sj9));
IkReal x7735=((cj9)*(r10));
IkReal x7736=((cj14)*(sj13));
IkReal x7737=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7736)))+(((IkReal(-1.00000000000000))*(sj13)*(x7726)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x7718)))+(pz)+(((IkReal(0.0100000000000000))*(x7726)))+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((r20)*(x7729))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x7720)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7731)))+(((IkReal(-1.00000000000000))*(sj14)*(x7719)))+(((IkReal(-1.00000000000000))*(x7723)*(x7724))));
evalcond[4]=((((sj9)*(x7730)))+(((IkReal(-1.00000000000000))*(x7732)*(x7733)))+(((x7720)*(x7721)))+(((IkReal(-1.00000000000000))*(sj13)*(x7723)*(x7725)))+(((x7728)*(x7736)))+(((IkReal(-1.00000000000000))*(sj13)*(x7731)*(x7735))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x7723)*(x7733)))+(((IkReal(-1.00000000000000))*(x7730)*(x7732)))+(((r01)*(sj13)*(x7720)))+(((IkReal(-1.00000000000000))*(sj13)*(x7719)*(x7731)))+(((x7721)*(x7734)))+(((IkReal(-1.00000000000000))*(sj13)*(x7722)*(x7731))));
evalcond[6]=((((cj13)*(r01)*(x7720)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj13)*(x7722)*(x7731)))+(((cj13)*(r11)*(x7734)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x7719)*(x7731))));
evalcond[7]=((IkReal(0.0690000000000000))+(((sj9)*(x7737)))+(((IkReal(-0.374290000000000))*(r10)*(x7720)))+(((IkReal(-0.374290000000000))*(cj9)*(x7724)))+(((x7728)*(x7729)))+(((IkReal(-1.00000000000000))*(py)*(x7732)))+(((IkReal(0.0100000000000000))*(sj9)*(x7725)))+(((IkReal(-1.00000000000000))*(x7718)*(x7728)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x7720)*(x7727)))+(((x7718)*(x7735))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-0.0100000000000000))*(r01)*(x7720)))+(((IkReal(-0.374290000000000))*(r00)*(x7720)))+(((IkReal(-0.374290000000000))*(sj9)*(x7724)))+(((IkReal(-1.00000000000000))*(x7719)*(x7729)))+(((x7718)*(x7722)))+(((IkReal(-1.00000000000000))*(cj9)*(x7737)))+(((x7718)*(x7719)))+(((IkReal(-1.00000000000000))*(py)*(x7723)))+(((IkReal(-1.00000000000000))*(x7727)*(x7734)))+(((IkReal(-1.00000000000000))*(px)*(x7732))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7738=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x7738)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(x7738)))+(((IkReal(-1.00000000000000))*(r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x7738)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x7738)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x7738)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r21)*(x7738)))+(((IkReal(-1.00000000000000))*(r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7739=IKsin(j12);
IkReal x7740=IKcos(j12);
IkReal x7741=((sj14)*(sj9));
IkReal x7742=((IkReal(1.00000000000000))*(sj13));
IkReal x7743=((cj13)*(sj14));
IkReal x7744=((cj9)*(r11));
IkReal x7745=((IkReal(1.00000000000000))*(cj13));
IkReal x7746=((cj9)*(r10));
IkReal x7747=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x7740));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7742)))+(((IkReal(-1.00000000000000))*(r21)*(x7743)))+(x7739));
evalcond[2]=((((r00)*(x7741)))+(((IkReal(-1.00000000000000))*(x7739)))+(((r01)*(x7747)))+(((IkReal(-1.00000000000000))*(sj14)*(x7746)))+(((IkReal(-1.00000000000000))*(cj14)*(x7744))));
evalcond[3]=((((x7743)*(x7744)))+(((IkReal(-1.00000000000000))*(cj14)*(x7745)*(x7746)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7742)))+(((cj13)*(r00)*(x7747)))+(((cj9)*(r12)*(sj13)))+(((IkReal(-1.00000000000000))*(r01)*(x7741)*(x7745)))+(x7740));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7748=((IkReal(1.00000000000000))*(sj14));
IkReal x7749=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(r21)*(x7748)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7749)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x7748)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7749)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7748))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(r21)*(x7748)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7749)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x7748)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7749)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7748)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj13)*(r21)*(x7748)))+(((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj9)*(x7749)))+(((IkReal(-1.00000000000000))*(cj9)*(r00)*(x7748)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7749)))+(((IkReal(-1.00000000000000))*(r10)*(sj9)*(x7748)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7750=IKsin(j12);
IkReal x7751=IKcos(j12);
IkReal x7752=((IkReal(1.00000000000000))*(sj13));
IkReal x7753=((cj13)*(r10));
IkReal x7754=((IkReal(1.00000000000000))*(cj10));
IkReal x7755=((cj9)*(sj14));
IkReal x7756=((cj13)*(r01));
IkReal x7757=((IkReal(1.00000000000000))*(r10));
IkReal x7758=((cj9)*(sj13));
IkReal x7759=((cj13)*(sj14));
IkReal x7760=((cj14)*(r01));
IkReal x7761=((cj13)*(cj14));
IkReal x7762=((IkReal(1.00000000000000))*(cj9));
IkReal x7763=((sj14)*(sj9));
IkReal x7764=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7765=((IkReal(1.00000000000000))*(x7750));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7751))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x7752)))+(((r20)*(x7761)))+(((IkReal(-1.00000000000000))*(sj10)*(x7765)))+(((IkReal(-1.00000000000000))*(r21)*(x7759))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7755)*(x7757)))+(((IkReal(-1.00000000000000))*(x7765)))+(((sj9)*(x7760)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7762)))+(((r00)*(x7763))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7760)*(x7762)))+(((IkReal(-1.00000000000000))*(r00)*(x7755)))+(((IkReal(-1.00000000000000))*(x7757)*(x7763)))+(((IkReal(-1.00000000000000))*(r11)*(x7764)))+(((IkReal(-1.00000000000000))*(x7751)*(x7754))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x7756)*(x7763)))+(((r00)*(sj9)*(x7761)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7752)))+(((IkReal(-1.00000000000000))*(cj14)*(x7753)*(x7762)))+(((cj13)*(r11)*(x7755)))+(x7751)+(((r12)*(x7758))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x7761)*(x7762)))+(((r02)*(x7758)))+(((x7755)*(x7756)))+(((r11)*(sj9)*(x7759)))+(((IkReal(-1.00000000000000))*(x7753)*(x7764)))+(((IkReal(-1.00000000000000))*(x7750)*(x7754)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7766=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7766)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7766)))+(((r00)*(sj14)*(sj9))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7766)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7766)))+(((r00)*(sj14)*(sj9)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj14)*(x7766)))+(((cj14)*(r01)*(sj9)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7766)))+(((r00)*(sj14)*(sj9)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7767=IKsin(j12);
IkReal x7768=IKcos(j12);
IkReal x7769=((IkReal(1.00000000000000))*(sj13));
IkReal x7770=((cj13)*(r10));
IkReal x7771=((IkReal(1.00000000000000))*(cj10));
IkReal x7772=((cj9)*(sj14));
IkReal x7773=((cj13)*(r01));
IkReal x7774=((IkReal(1.00000000000000))*(r10));
IkReal x7775=((cj9)*(sj13));
IkReal x7776=((cj13)*(sj14));
IkReal x7777=((cj14)*(r01));
IkReal x7778=((cj13)*(cj14));
IkReal x7779=((IkReal(1.00000000000000))*(cj9));
IkReal x7780=((sj14)*(sj9));
IkReal x7781=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7782=((IkReal(1.00000000000000))*(x7767));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7768))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7776)))+(((IkReal(-1.00000000000000))*(sj10)*(x7782)))+(((IkReal(-1.00000000000000))*(r22)*(x7769)))+(((r20)*(x7778))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7772)*(x7774)))+(((r00)*(x7780)))+(((sj9)*(x7777)))+(((IkReal(-1.00000000000000))*(x7782)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7779))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x7772)))+(((IkReal(-1.00000000000000))*(x7768)*(x7771)))+(((IkReal(-1.00000000000000))*(x7774)*(x7780)))+(((IkReal(-1.00000000000000))*(x7777)*(x7779)))+(((IkReal(-1.00000000000000))*(r11)*(x7781))));
evalcond[4]=((((r00)*(sj9)*(x7778)))+(((IkReal(-1.00000000000000))*(cj14)*(x7770)*(x7779)))+(((IkReal(-1.00000000000000))*(x7773)*(x7780)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7769)))+(((r12)*(x7775)))+(x7768)+(((cj13)*(r11)*(x7772))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7767)*(x7771)))+(((IkReal(-1.00000000000000))*(r00)*(x7778)*(x7779)))+(((x7772)*(x7773)))+(((r02)*(x7775)))+(((r11)*(sj9)*(x7776)))+(((IkReal(-1.00000000000000))*(x7770)*(x7781)))+(((r12)*(sj13)*(sj9))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst11)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst11)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7783=IKsin(j12);
IkReal x7784=IKcos(j12);
IkReal x7785=((IkReal(1.00000000000000))*(sj13));
IkReal x7786=((cj13)*(r10));
IkReal x7787=((IkReal(1.00000000000000))*(cj10));
IkReal x7788=((cj9)*(sj14));
IkReal x7789=((cj13)*(r01));
IkReal x7790=((IkReal(1.00000000000000))*(r10));
IkReal x7791=((cj9)*(sj13));
IkReal x7792=((cj13)*(sj14));
IkReal x7793=((cj14)*(r01));
IkReal x7794=((cj13)*(cj14));
IkReal x7795=((IkReal(1.00000000000000))*(cj9));
IkReal x7796=((sj14)*(sj9));
IkReal x7797=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7798=((IkReal(1.00000000000000))*(x7783));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7784))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7792)))+(((r20)*(x7794)))+(((IkReal(-1.00000000000000))*(r22)*(x7785)))+(((IkReal(-1.00000000000000))*(sj10)*(x7798))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x7798)))+(((sj9)*(x7793)))+(((r00)*(x7796)))+(((IkReal(-1.00000000000000))*(x7788)*(x7790)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7795))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7793)*(x7795)))+(((IkReal(-1.00000000000000))*(x7784)*(x7787)))+(((IkReal(-1.00000000000000))*(r11)*(x7797)))+(((IkReal(-1.00000000000000))*(x7790)*(x7796)))+(((IkReal(-1.00000000000000))*(r00)*(x7788))));
evalcond[4]=((((cj13)*(r11)*(x7788)))+(((IkReal(-1.00000000000000))*(cj14)*(x7786)*(x7795)))+(((r12)*(x7791)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7785)))+(x7784)+(((r00)*(sj9)*(x7794)))+(((IkReal(-1.00000000000000))*(x7789)*(x7796))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7786)*(x7797)))+(((IkReal(-1.00000000000000))*(x7783)*(x7787)))+(((r02)*(x7791)))+(((IkReal(-1.00000000000000))*(r00)*(x7794)*(x7795)))+(((r11)*(sj9)*(x7792)))+(((r12)*(sj13)*(sj9)))+(((x7788)*(x7789))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x7799=((IkReal(0.0100000000000000))*(cj14));
IkReal x7800=((r10)*(sj9));
IkReal x7801=((cj9)*(r11));
IkReal x7802=((sj13)*(sj14));
IkReal x7803=((cj9)*(r00));
IkReal x7804=((IkReal(0.374290000000000))*(cj14));
IkReal x7805=((cj9)*(r01));
IkReal x7806=((r01)*(sj9));
IkReal x7807=((IkReal(0.0100000000000000))*(sj14));
IkReal x7808=((r00)*(sj9));
IkReal x7809=((IkReal(0.374290000000000))*(sj14));
IkReal x7810=((cj13)*(sj9));
IkReal x7811=((IkReal(1.00000000000000))*(py));
IkReal x7812=((r11)*(sj9));
IkReal x7813=((cj9)*(r10));
IkReal x7814=((cj14)*(sj13));
IkReal x7815=((IkReal(1.00000000000000))*(cj13)*(cj9));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x7814)))+(((IkReal(-1.00000000000000))*(r21)*(x7802)))+(cj10)+(((cj13)*(r22))));
evalcond[2]=((((r21)*(x7804)))+(((r21)*(x7807)))+(((IkReal(-1.00000000000000))*(r20)*(x7799)))+(pz)+(((IkReal(0.364420000000000))*(sj10)))+(((r20)*(x7809))));
evalcond[3]=((((r02)*(x7810)))+(((IkReal(-1.00000000000000))*(x7802)*(x7806)))+(((IkReal(-1.00000000000000))*(x7813)*(x7814)))+(((IkReal(-1.00000000000000))*(r12)*(x7815)))+(((x7808)*(x7814)))+(((x7801)*(x7802))));
evalcond[4]=((((x7802)*(x7805)))+(((IkReal(-1.00000000000000))*(r12)*(x7810)))+(((IkReal(-1.00000000000000))*(r02)*(x7815)))+(((IkReal(-1.00000000000000))*(x7803)*(x7814)))+(((IkReal(-1.00000000000000))*(sj10)))+(((IkReal(-1.00000000000000))*(x7800)*(x7814)))+(((x7802)*(x7812))));
evalcond[5]=((IkReal(-0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7801)*(x7807)))+(((IkReal(-1.00000000000000))*(x7801)*(x7804)))+(((IkReal(-1.00000000000000))*(cj9)*(x7811)))+(((x7806)*(x7807)))+(((x7804)*(x7806)))+(((x7808)*(x7809)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x7799)*(x7808)))+(((x7799)*(x7813)))+(((IkReal(-1.00000000000000))*(x7809)*(x7813))));
evalcond[6]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7805)*(x7807)))+(((IkReal(-1.00000000000000))*(x7804)*(x7812)))+(((IkReal(0.364420000000000))*(cj10)))+(((IkReal(-1.00000000000000))*(sj9)*(x7811)))+(((IkReal(-1.00000000000000))*(x7800)*(x7809)))+(((x7799)*(x7800)))+(((x7799)*(x7803)))+(((IkReal(-1.00000000000000))*(x7803)*(x7809)))+(((IkReal(-1.00000000000000))*(x7807)*(x7812)))+(((IkReal(-1.00000000000000))*(cj9)*(px)))+(((IkReal(-1.00000000000000))*(x7804)*(x7805))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj10);
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj10;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x7816=((IkReal(0.0100000000000000))*(cj14));
IkReal x7817=((r10)*(sj9));
IkReal x7818=((cj9)*(sj14));
IkReal x7819=((r11)*(sj13));
IkReal x7820=((cj9)*(r00));
IkReal x7821=((IkReal(1.00000000000000))*(sj9));
IkReal x7822=((cj14)*(r11));
IkReal x7823=((r01)*(sj14));
IkReal x7824=((r21)*(sj14));
IkReal x7825=((IkReal(0.0100000000000000))*(r11));
IkReal x7826=((r00)*(sj9));
IkReal x7827=((IkReal(0.374290000000000))*(sj14));
IkReal x7828=((cj13)*(r02));
IkReal x7829=((IkReal(1.00000000000000))*(cj14));
IkReal x7830=((IkReal(1.00000000000000))*(cj9));
IkReal x7831=((cj13)*(r12));
IkReal x7832=((sj14)*(sj9));
IkReal x7833=((cj9)*(r10));
IkReal x7834=((cj14)*(sj13));
IkReal x7835=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x7824)))+(((r20)*(x7834)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(0.364420000000000))+(((IkReal(-1.00000000000000))*(r20)*(x7816)))+(((r20)*(x7827)))+(((IkReal(0.0100000000000000))*(x7824)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7829)))+(((IkReal(-1.00000000000000))*(r00)*(x7818)))+(((IkReal(-1.00000000000000))*(x7821)*(x7822)))+(((IkReal(-1.00000000000000))*(sj14)*(x7817))));
evalcond[4]=((((x7818)*(x7819)))+(((IkReal(-1.00000000000000))*(sj13)*(x7829)*(x7833)))+(((IkReal(-1.00000000000000))*(x7830)*(x7831)))+(((IkReal(-1.00000000000000))*(sj13)*(x7821)*(x7823)))+(((x7826)*(x7834)))+(((sj9)*(x7828))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj13)*(x7820)*(x7829)))+(((r01)*(sj13)*(x7818)))+(((IkReal(-1.00000000000000))*(x7828)*(x7830)))+(((x7819)*(x7832)))+(((IkReal(-1.00000000000000))*(x7821)*(x7831)))+(((IkReal(-1.00000000000000))*(sj13)*(x7817)*(x7829))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(x7817)*(x7829)))+(((cj9)*(r02)*(sj13)))+(((cj13)*(r11)*(x7832)))+(((IkReal(-1.00000000000000))*(cj13)*(x7820)*(x7829)))+(((cj13)*(r01)*(x7818)))+(((r12)*(sj13)*(sj9))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((IkReal(0.0100000000000000))*(sj9)*(x7823)))+(((x7816)*(x7833)))+(((x7826)*(x7827)))+(((sj9)*(x7835)))+(((IkReal(-1.00000000000000))*(x7816)*(x7826)))+(((IkReal(-1.00000000000000))*(py)*(x7830)))+(((IkReal(-0.374290000000000))*(cj9)*(x7822)))+(((IkReal(-0.374290000000000))*(r10)*(x7818)))+(((px)*(sj9)))+(((IkReal(-1.00000000000000))*(x7818)*(x7825))));
evalcond[8]=((IkReal(0.0690000000000000))+(((x7816)*(x7820)))+(((IkReal(-1.00000000000000))*(px)*(x7830)))+(((x7816)*(x7817)))+(((IkReal(-1.00000000000000))*(cj9)*(x7835)))+(((IkReal(-1.00000000000000))*(x7817)*(x7827)))+(((IkReal(-0.374290000000000))*(r00)*(x7818)))+(((IkReal(-1.00000000000000))*(x7825)*(x7832)))+(((IkReal(-0.0100000000000000))*(r01)*(x7818)))+(((IkReal(-1.00000000000000))*(py)*(x7821)))+(((IkReal(-0.374290000000000))*(sj9)*(x7822))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(r21)))+(((r20)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))+IKsqr(((((cj14)*(r21)))+(((r20)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))), ((((cj14)*(r21)))+(((r20)*(sj14)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7836=IKsin(j12);
IkReal x7837=((sj14)*(sj9));
IkReal x7838=((IkReal(1.00000000000000))*(sj13));
IkReal x7839=((cj13)*(sj14));
IkReal x7840=((cj9)*(r11));
IkReal x7841=((IkReal(1.00000000000000))*(cj13));
IkReal x7842=((cj9)*(r10));
IkReal x7843=((cj14)*(sj9));
IkReal x7844=((IkReal(1.00000000000000))*(IKcos(j12)));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(x7844))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7838)))+(((IkReal(-1.00000000000000))*(x7836)))+(((IkReal(-1.00000000000000))*(r21)*(x7839))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(x7840)))+(x7836)+(((r00)*(x7837)))+(((r01)*(x7843)))+(((IkReal(-1.00000000000000))*(sj14)*(x7842))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x7837)*(x7841)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7838)))+(((IkReal(-1.00000000000000))*(cj14)*(x7841)*(x7842)))+(((x7839)*(x7840)))+(((cj9)*(r12)*(sj13)))+(((cj13)*(r00)*(x7843)))+(((IkReal(-1.00000000000000))*(x7844))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x7845=((IkReal(0.0100000000000000))*(cj14));
IkReal x7846=((r10)*(sj9));
IkReal x7847=((cj9)*(sj14));
IkReal x7848=((r11)*(sj13));
IkReal x7849=((cj9)*(r00));
IkReal x7850=((IkReal(1.00000000000000))*(sj9));
IkReal x7851=((cj14)*(r11));
IkReal x7852=((r01)*(sj14));
IkReal x7853=((r21)*(sj14));
IkReal x7854=((IkReal(0.0100000000000000))*(r11));
IkReal x7855=((r00)*(sj9));
IkReal x7856=((IkReal(0.374290000000000))*(sj14));
IkReal x7857=((cj13)*(r02));
IkReal x7858=((IkReal(1.00000000000000))*(cj14));
IkReal x7859=((IkReal(1.00000000000000))*(cj9));
IkReal x7860=((cj13)*(r12));
IkReal x7861=((sj14)*(sj9));
IkReal x7862=((cj9)*(r10));
IkReal x7863=((cj14)*(sj13));
IkReal x7864=((IkReal(0.374290000000000))*(cj14)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j10)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj13)*(x7853)))+(((r20)*(x7863)))+(((cj13)*(r22))));
evalcond[2]=((IkReal(-0.364420000000000))+(((IkReal(0.0100000000000000))*(x7853)))+(((IkReal(-1.00000000000000))*(r20)*(x7845)))+(pz)+(((IkReal(0.374290000000000))*(cj14)*(r21)))+(((r20)*(x7856))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x7847)))+(((IkReal(-1.00000000000000))*(x7850)*(x7851)))+(((IkReal(-1.00000000000000))*(sj14)*(x7846)))+(((IkReal(-1.00000000000000))*(cj9)*(r01)*(x7858))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x7859)*(x7860)))+(((x7847)*(x7848)))+(((IkReal(-1.00000000000000))*(sj13)*(x7858)*(x7862)))+(((sj9)*(x7857)))+(((x7855)*(x7863)))+(((IkReal(-1.00000000000000))*(sj13)*(x7850)*(x7852))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x7857)*(x7859)))+(((IkReal(-1.00000000000000))*(sj13)*(x7846)*(x7858)))+(((r01)*(sj13)*(x7847)))+(((IkReal(-1.00000000000000))*(x7850)*(x7860)))+(((IkReal(-1.00000000000000))*(sj13)*(x7849)*(x7858)))+(((x7848)*(x7861))));
evalcond[6]=((((cj9)*(r02)*(sj13)))+(((cj13)*(r01)*(x7847)))+(((cj13)*(r11)*(x7861)))+(((IkReal(-1.00000000000000))*(cj13)*(x7849)*(x7858)))+(((r12)*(sj13)*(sj9)))+(((IkReal(-1.00000000000000))*(cj13)*(x7846)*(x7858))));
evalcond[7]=((IkReal(-0.0690000000000000))+(((sj9)*(x7864)))+(((IkReal(-1.00000000000000))*(x7847)*(x7854)))+(((IkReal(0.0100000000000000))*(sj9)*(x7852)))+(((IkReal(-1.00000000000000))*(py)*(x7859)))+(((IkReal(-0.374290000000000))*(cj9)*(x7851)))+(((px)*(sj9)))+(((x7845)*(x7862)))+(((IkReal(-0.374290000000000))*(r10)*(x7847)))+(((IkReal(-1.00000000000000))*(x7845)*(x7855)))+(((x7855)*(x7856))));
evalcond[8]=((IkReal(0.0690000000000000))+(((IkReal(-1.00000000000000))*(x7846)*(x7856)))+(((IkReal(-1.00000000000000))*(px)*(x7859)))+(((IkReal(-1.00000000000000))*(cj9)*(x7864)))+(((IkReal(-1.00000000000000))*(py)*(x7850)))+(((IkReal(-1.00000000000000))*(x7854)*(x7861)))+(((IkReal(-0.374290000000000))*(r00)*(x7847)))+(((IkReal(-0.374290000000000))*(sj9)*(x7851)))+(((x7845)*(x7849)))+(((x7845)*(x7846)))+(((IkReal(-0.0100000000000000))*(r01)*(x7847))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7865=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x7865)))+(((r22)*(sj13))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x7865))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x7865)))+(((r22)*(sj13)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x7865)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj13)*(r20)*(x7865)))+(((r22)*(sj13)))), ((((IkReal(-1.00000000000000))*(r20)*(sj14)))+(((IkReal(-1.00000000000000))*(r21)*(x7865)))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[4];
IkReal x7866=IKsin(j12);
IkReal x7867=IKcos(j12);
IkReal x7868=((sj14)*(sj9));
IkReal x7869=((IkReal(1.00000000000000))*(sj13));
IkReal x7870=((cj13)*(sj14));
IkReal x7871=((cj9)*(r11));
IkReal x7872=((IkReal(1.00000000000000))*(cj13));
IkReal x7873=((cj9)*(r10));
IkReal x7874=((cj14)*(sj9));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(x7867));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x7870)))+(x7866)+(((IkReal(-1.00000000000000))*(r22)*(x7869))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj14)*(x7873)))+(((IkReal(-1.00000000000000))*(cj14)*(x7871)))+(((r00)*(x7868)))+(x7866)+(((r01)*(x7874))));
evalcond[3]=((((cj13)*(r00)*(x7874)))+(((IkReal(-1.00000000000000))*(r01)*(x7868)*(x7872)))+(((IkReal(-1.00000000000000))*(cj14)*(x7872)*(x7873)))+(((IkReal(-1.00000000000000))*(x7867)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7869)))+(((cj9)*(r12)*(sj13)))+(((x7870)*(x7871))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7875=((cj14)*(r11));
IkReal x7876=((IkReal(1.00000000000000))*(sj9));
IkReal x7877=((cj14)*(r01));
IkReal x7878=((r00)*(sj14));
IkReal x7879=((r10)*(sj14));
IkReal x7880=((IkReal(1.00000000000000))*(cj9));
if( IKabs(((((IkReal(-1.00000000000000))*(x7876)*(x7878)))+(((IkReal(-1.00000000000000))*(x7876)*(x7877)))+(((cj9)*(x7875)))+(((cj9)*(x7879))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7875)*(x7876)))+(((IkReal(-1.00000000000000))*(x7878)*(x7880)))+(((IkReal(-1.00000000000000))*(x7876)*(x7879)))+(((IkReal(-1.00000000000000))*(x7877)*(x7880))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x7876)*(x7878)))+(((IkReal(-1.00000000000000))*(x7876)*(x7877)))+(((cj9)*(x7875)))+(((cj9)*(x7879)))))+IKsqr(((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7875)*(x7876)))+(((IkReal(-1.00000000000000))*(x7878)*(x7880)))+(((IkReal(-1.00000000000000))*(x7876)*(x7879)))+(((IkReal(-1.00000000000000))*(x7877)*(x7880)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x7876)*(x7878)))+(((IkReal(-1.00000000000000))*(x7876)*(x7877)))+(((cj9)*(x7875)))+(((cj9)*(x7879)))), ((((IKabs(cj10) != 0)?((IkReal)1/(cj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7875)*(x7876)))+(((IkReal(-1.00000000000000))*(x7878)*(x7880)))+(((IkReal(-1.00000000000000))*(x7876)*(x7879)))+(((IkReal(-1.00000000000000))*(x7877)*(x7880)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7881=IKsin(j12);
IkReal x7882=IKcos(j12);
IkReal x7883=((IkReal(1.00000000000000))*(sj13));
IkReal x7884=((cj13)*(r10));
IkReal x7885=((cj9)*(sj14));
IkReal x7886=((cj13)*(r01));
IkReal x7887=((IkReal(1.00000000000000))*(r10));
IkReal x7888=((r12)*(sj13));
IkReal x7889=((cj13)*(sj14));
IkReal x7890=((cj14)*(r01));
IkReal x7891=((cj13)*(cj14));
IkReal x7892=((IkReal(1.00000000000000))*(cj9));
IkReal x7893=((sj14)*(sj9));
IkReal x7894=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7895=((IkReal(1.00000000000000))*(x7882));
IkReal x7896=((IkReal(1.00000000000000))*(x7881));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7895))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x7883)))+(((IkReal(-1.00000000000000))*(sj10)*(x7896)))+(((IkReal(-1.00000000000000))*(r21)*(x7889)))+(((r20)*(x7891))));
evalcond[2]=((((sj9)*(x7890)))+(x7881)+(((IkReal(-1.00000000000000))*(x7885)*(x7887)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7892)))+(((r00)*(x7893))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj10)*(x7895)))+(((IkReal(-1.00000000000000))*(r11)*(x7894)))+(((IkReal(-1.00000000000000))*(x7887)*(x7893)))+(((IkReal(-1.00000000000000))*(r00)*(x7885)))+(((IkReal(-1.00000000000000))*(x7890)*(x7892))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x7895)))+(((IkReal(-1.00000000000000))*(x7886)*(x7893)))+(((cj9)*(x7888)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7883)))+(((cj13)*(r11)*(x7885)))+(((r00)*(sj9)*(x7891)))+(((IkReal(-1.00000000000000))*(cj14)*(x7884)*(x7892))));
evalcond[5]=((((r11)*(sj9)*(x7889)))+(((IkReal(-1.00000000000000))*(cj10)*(x7896)))+(((IkReal(-1.00000000000000))*(x7884)*(x7894)))+(((x7885)*(x7886)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(r00)*(x7891)*(x7892)))+(((sj9)*(x7888))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7897=((IkReal(1.00000000000000))*(sj9));
if( IKabs(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x7897)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7897))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x7897)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7897)))))+IKsqr(((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((cj14)*(cj9)*(r11)))+(((cj9)*(r10)*(sj14)))+(((IkReal(-1.00000000000000))*(r00)*(sj14)*(x7897)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x7897)))), ((((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7898=IKsin(j12);
IkReal x7899=IKcos(j12);
IkReal x7900=((IkReal(1.00000000000000))*(sj13));
IkReal x7901=((cj13)*(r10));
IkReal x7902=((cj9)*(sj14));
IkReal x7903=((cj13)*(r01));
IkReal x7904=((IkReal(1.00000000000000))*(r10));
IkReal x7905=((r12)*(sj13));
IkReal x7906=((cj13)*(sj14));
IkReal x7907=((cj14)*(r01));
IkReal x7908=((cj13)*(cj14));
IkReal x7909=((IkReal(1.00000000000000))*(cj9));
IkReal x7910=((sj14)*(sj9));
IkReal x7911=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7912=((IkReal(1.00000000000000))*(x7899));
IkReal x7913=((IkReal(1.00000000000000))*(x7898));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7912))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r21)*(x7906)))+(((IkReal(-1.00000000000000))*(r22)*(x7900)))+(((r20)*(x7908)))+(((IkReal(-1.00000000000000))*(sj10)*(x7913))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7909)))+(x7898)+(((r00)*(x7910)))+(((IkReal(-1.00000000000000))*(x7902)*(x7904)))+(((sj9)*(x7907))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x7902)))+(((IkReal(-1.00000000000000))*(x7904)*(x7910)))+(((IkReal(-1.00000000000000))*(r11)*(x7911)))+(((IkReal(-1.00000000000000))*(x7907)*(x7909)))+(((IkReal(-1.00000000000000))*(cj10)*(x7912))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj14)*(x7901)*(x7909)))+(((IkReal(-1.00000000000000))*(x7912)))+(((r00)*(sj9)*(x7908)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7900)))+(((IkReal(-1.00000000000000))*(x7903)*(x7910)))+(((cj9)*(x7905)))+(((cj13)*(r11)*(x7902))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x7901)*(x7911)))+(((IkReal(-1.00000000000000))*(cj10)*(x7913)))+(((sj9)*(x7905)))+(((x7902)*(x7903)))+(((r11)*(sj9)*(x7906)))+(((IkReal(-1.00000000000000))*(r00)*(x7908)*(x7909))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
if( IKabs(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst12)*(((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(cj13)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(r22)*(sj13)))))), ((gconst12)*(((((cj14)*(r21)))+(((r20)*(sj14)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7914=IKsin(j12);
IkReal x7915=IKcos(j12);
IkReal x7916=((IkReal(1.00000000000000))*(sj13));
IkReal x7917=((cj13)*(r10));
IkReal x7918=((cj9)*(sj14));
IkReal x7919=((cj13)*(r01));
IkReal x7920=((IkReal(1.00000000000000))*(r10));
IkReal x7921=((r12)*(sj13));
IkReal x7922=((cj13)*(sj14));
IkReal x7923=((cj14)*(r01));
IkReal x7924=((cj13)*(cj14));
IkReal x7925=((IkReal(1.00000000000000))*(cj9));
IkReal x7926=((sj14)*(sj9));
IkReal x7927=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7928=((IkReal(1.00000000000000))*(x7915));
IkReal x7929=((IkReal(1.00000000000000))*(x7914));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7928))));
evalcond[1]=((((r20)*(x7924)))+(((IkReal(-1.00000000000000))*(r22)*(x7916)))+(((IkReal(-1.00000000000000))*(r21)*(x7922)))+(((IkReal(-1.00000000000000))*(sj10)*(x7929))));
evalcond[2]=((((sj9)*(x7923)))+(x7914)+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7925)))+(((r00)*(x7926)))+(((IkReal(-1.00000000000000))*(x7918)*(x7920))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7920)*(x7926)))+(((IkReal(-1.00000000000000))*(r00)*(x7918)))+(((IkReal(-1.00000000000000))*(r11)*(x7927)))+(((IkReal(-1.00000000000000))*(cj10)*(x7928)))+(((IkReal(-1.00000000000000))*(x7923)*(x7925))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x7928)))+(((IkReal(-1.00000000000000))*(x7919)*(x7926)))+(((r00)*(sj9)*(x7924)))+(((cj9)*(x7921)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7916)))+(((IkReal(-1.00000000000000))*(cj14)*(x7917)*(x7925)))+(((cj13)*(r11)*(x7918))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((sj9)*(x7921)))+(((IkReal(-1.00000000000000))*(cj10)*(x7929)))+(((r11)*(sj9)*(x7922)))+(((x7918)*(x7919)))+(((IkReal(-1.00000000000000))*(x7917)*(x7927)))+(((IkReal(-1.00000000000000))*(r00)*(x7924)*(x7925))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7930=((IKabs(sj11) != 0)?((IkReal)1/(sj11)):(IkReal)1.0e30);
IkReal x7931=((cj14)*(r11));
IkReal x7932=((r10)*(sj14));
IkReal x7933=((IkReal(1.00000000000000))*(cj9));
IkReal x7934=((cj10)*(cj11)*(cj9));
IkReal x7935=((r00)*(sj14)*(sj9));
IkReal x7936=((cj14)*(r01)*(sj9));
IkReal x7937=((IkReal(1.00000000000000))*(cj10)*(cj11));
if( IKabs(((x7930)*(((((IkReal(-1.00000000000000))*(x7932)*(x7933)))+(x7935)+(x7936)+(((IkReal(-1.00000000000000))*(x7931)*(x7933))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x7930)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7935)*(x7937)))+(((x7932)*(x7934)))+(((IkReal(-1.00000000000000))*(x7936)*(x7937)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))+(((x7931)*(x7934))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x7930)*(((((IkReal(-1.00000000000000))*(x7932)*(x7933)))+(x7935)+(x7936)+(((IkReal(-1.00000000000000))*(x7931)*(x7933)))))))+IKsqr(((x7930)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7935)*(x7937)))+(((x7932)*(x7934)))+(((IkReal(-1.00000000000000))*(x7936)*(x7937)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))+(((x7931)*(x7934)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((x7930)*(((((IkReal(-1.00000000000000))*(x7932)*(x7933)))+(x7935)+(x7936)+(((IkReal(-1.00000000000000))*(x7931)*(x7933)))))), ((x7930)*(((IKabs(sj10) != 0)?((IkReal)1/(sj10)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7935)*(x7937)))+(((x7932)*(x7934)))+(((IkReal(-1.00000000000000))*(x7936)*(x7937)))+(((cj14)*(r21)*(sj11)))+(((r20)*(sj11)*(sj14)))+(((x7931)*(x7934)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7938=IKcos(j12);
IkReal x7939=IKsin(j12);
IkReal x7940=((IkReal(1.00000000000000))*(sj13));
IkReal x7941=((cj13)*(r10));
IkReal x7942=((cj9)*(sj14));
IkReal x7943=((cj13)*(r01));
IkReal x7944=((IkReal(1.00000000000000))*(r10));
IkReal x7945=((r12)*(sj13));
IkReal x7946=((cj13)*(sj14));
IkReal x7947=((cj11)*(sj10));
IkReal x7948=((cj14)*(r01));
IkReal x7949=((IkReal(1.00000000000000))*(cj9));
IkReal x7950=((sj14)*(sj9));
IkReal x7951=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7952=((cj10)*(x7938));
IkReal x7953=((IkReal(1.00000000000000))*(x7939));
IkReal x7954=((IkReal(1.00000000000000))*(x7938));
IkReal x7955=((cj13)*(cj14)*(r00));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(sj10)*(x7954)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x7953))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7940)))+(((IkReal(-1.00000000000000))*(r21)*(x7946)))+(((IkReal(-1.00000000000000))*(sj10)*(x7953)))+(((cj11)*(x7952))));
evalcond[2]=((((r00)*(x7950)))+(((IkReal(-1.00000000000000))*(sj11)*(x7953)))+(((sj9)*(x7948)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7949)))+(((IkReal(-1.00000000000000))*(x7942)*(x7944))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7952)))+(((IkReal(-1.00000000000000))*(r00)*(x7942)))+(((x7939)*(x7947)))+(((IkReal(-1.00000000000000))*(r11)*(x7951)))+(((IkReal(-1.00000000000000))*(x7948)*(x7949)))+(((IkReal(-1.00000000000000))*(x7944)*(x7950))));
evalcond[4]=((((sj11)*(x7938)))+(((sj9)*(x7955)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7940)))+(((IkReal(-1.00000000000000))*(cj14)*(x7941)*(x7949)))+(((cj9)*(x7945)))+(((cj13)*(r11)*(x7942)))+(((IkReal(-1.00000000000000))*(x7943)*(x7950))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x7947)*(x7954)))+(((IkReal(-1.00000000000000))*(cj10)*(x7953)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x7941)*(x7951)))+(((IkReal(-1.00000000000000))*(x7949)*(x7955)))+(((sj9)*(x7945)))+(((x7942)*(x7943)))+(((r11)*(sj9)*(x7946))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7956=(cj10)*(cj10);
IkReal x7957=(sj10)*(sj10);
IkReal x7958=((cj14)*(sj10));
IkReal x7959=((r11)*(sj9));
IkReal x7960=((sj10)*(sj14));
IkReal x7961=((r10)*(sj9));
IkReal x7962=((cj10)*(cj14));
IkReal x7963=((cj9)*(r00));
IkReal x7964=((cj9)*(r01));
IkReal x7965=((IkReal(1.00000000000000))*(cj10)*(sj14));
if( IKabs(((((IKabs(((((cj11)*(x7957)))+(((cj11)*(x7956))))) != 0)?((IkReal)1/(((((cj11)*(x7957)))+(((cj11)*(x7956)))))):(IkReal)1.0e30))*(((((r21)*(x7962)))+(((x7958)*(x7959)))+(((x7958)*(x7964)))+(((x7960)*(x7963)))+(((x7960)*(x7961)))+(((cj10)*(r20)*(sj14))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x7957)+(x7956))) != 0)?((IkReal)1/(((x7957)+(x7956)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7963)*(x7965)))+(((IkReal(-1.00000000000000))*(x7962)*(x7964)))+(((r20)*(x7960)))+(((r21)*(x7958)))+(((IkReal(-1.00000000000000))*(x7961)*(x7965)))+(((IkReal(-1.00000000000000))*(x7959)*(x7962))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj11)*(x7957)))+(((cj11)*(x7956))))) != 0)?((IkReal)1/(((((cj11)*(x7957)))+(((cj11)*(x7956)))))):(IkReal)1.0e30))*(((((r21)*(x7962)))+(((x7958)*(x7959)))+(((x7958)*(x7964)))+(((x7960)*(x7963)))+(((x7960)*(x7961)))+(((cj10)*(r20)*(sj14)))))))+IKsqr(((((IKabs(((x7957)+(x7956))) != 0)?((IkReal)1/(((x7957)+(x7956)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7963)*(x7965)))+(((IkReal(-1.00000000000000))*(x7962)*(x7964)))+(((r20)*(x7960)))+(((r21)*(x7958)))+(((IkReal(-1.00000000000000))*(x7961)*(x7965)))+(((IkReal(-1.00000000000000))*(x7959)*(x7962)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j12array[0]=IKatan2(((((IKabs(((((cj11)*(x7957)))+(((cj11)*(x7956))))) != 0)?((IkReal)1/(((((cj11)*(x7957)))+(((cj11)*(x7956)))))):(IkReal)1.0e30))*(((((r21)*(x7962)))+(((x7958)*(x7959)))+(((x7958)*(x7964)))+(((x7960)*(x7963)))+(((x7960)*(x7961)))+(((cj10)*(r20)*(sj14)))))), ((((IKabs(((x7957)+(x7956))) != 0)?((IkReal)1/(((x7957)+(x7956)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x7963)*(x7965)))+(((IkReal(-1.00000000000000))*(x7962)*(x7964)))+(((r20)*(x7960)))+(((r21)*(x7958)))+(((IkReal(-1.00000000000000))*(x7961)*(x7965)))+(((IkReal(-1.00000000000000))*(x7959)*(x7962)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7966=IKcos(j12);
IkReal x7967=IKsin(j12);
IkReal x7968=((IkReal(1.00000000000000))*(sj13));
IkReal x7969=((cj13)*(r10));
IkReal x7970=((cj9)*(sj14));
IkReal x7971=((cj13)*(r01));
IkReal x7972=((IkReal(1.00000000000000))*(r10));
IkReal x7973=((r12)*(sj13));
IkReal x7974=((cj13)*(sj14));
IkReal x7975=((cj11)*(sj10));
IkReal x7976=((cj14)*(r01));
IkReal x7977=((IkReal(1.00000000000000))*(cj9));
IkReal x7978=((sj14)*(sj9));
IkReal x7979=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x7980=((cj10)*(x7966));
IkReal x7981=((IkReal(1.00000000000000))*(x7967));
IkReal x7982=((IkReal(1.00000000000000))*(x7966));
IkReal x7983=((cj13)*(cj14)*(r00));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x7981)))+(((cj14)*(r21)))+(((IkReal(-1.00000000000000))*(sj10)*(x7982)))+(((r20)*(sj14))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((IkReal(-1.00000000000000))*(r22)*(x7968)))+(((IkReal(-1.00000000000000))*(sj10)*(x7981)))+(((IkReal(-1.00000000000000))*(r21)*(x7974)))+(((cj11)*(x7980))));
evalcond[2]=((((r00)*(x7978)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x7977)))+(((sj9)*(x7976)))+(((IkReal(-1.00000000000000))*(x7970)*(x7972)))+(((IkReal(-1.00000000000000))*(sj11)*(x7981))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7980)))+(((x7967)*(x7975)))+(((IkReal(-1.00000000000000))*(r11)*(x7979)))+(((IkReal(-1.00000000000000))*(x7972)*(x7978)))+(((IkReal(-1.00000000000000))*(r00)*(x7970)))+(((IkReal(-1.00000000000000))*(x7976)*(x7977))));
evalcond[4]=((((sj9)*(x7983)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7968)))+(((IkReal(-1.00000000000000))*(cj14)*(x7969)*(x7977)))+(((cj13)*(r11)*(x7970)))+(((IkReal(-1.00000000000000))*(x7971)*(x7978)))+(((cj9)*(x7973)))+(((sj11)*(x7966))));
evalcond[5]=((((cj9)*(r02)*(sj13)))+(((x7970)*(x7971)))+(((sj9)*(x7973)))+(((r11)*(sj9)*(x7974)))+(((IkReal(-1.00000000000000))*(x7977)*(x7983)))+(((IkReal(-1.00000000000000))*(x7969)*(x7979)))+(((IkReal(-1.00000000000000))*(x7975)*(x7982)))+(((IkReal(-1.00000000000000))*(cj10)*(x7981))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j12array[1], cj12array[1], sj12array[1];
bool j12valid[1]={false};
_nj12 = 1;
IkReal x7984=((cj14)*(r21));
IkReal x7985=((cj10)*(cj11));
IkReal x7986=((sj10)*(sj14));
IkReal x7987=((r22)*(sj13));
IkReal x7988=((IkReal(1.00000000000000))*(cj13));
IkReal x7989=((cj14)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x7986)*(x7988)))+(((IkReal(-1.00000000000000))*(sj10)*(x7987)))+(((cj13)*(sj10)*(x7989)))+(((x7984)*(x7985)))+(((r20)*(sj14)*(x7985))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r20)*(x7986)))+(((cj13)*(r21)*(sj14)*(x7985)))+(((sj10)*(x7984)))+(((x7985)*(x7987)))+(((IkReal(-1.00000000000000))*(x7985)*(x7988)*(x7989))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j12array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x7986)*(x7988)))+(((IkReal(-1.00000000000000))*(sj10)*(x7987)))+(((cj13)*(sj10)*(x7989)))+(((x7984)*(x7985)))+(((r20)*(sj14)*(x7985)))))), ((gconst4)*(((((r20)*(x7986)))+(((cj13)*(r21)*(sj14)*(x7985)))+(((sj10)*(x7984)))+(((x7985)*(x7987)))+(((IkReal(-1.00000000000000))*(x7985)*(x7988)*(x7989)))))));
sj12array[0]=IKsin(j12array[0]);
cj12array[0]=IKcos(j12array[0]);
if( j12array[0] > IKPI )
{
    j12array[0]-=IK2PI;
}
else if( j12array[0] < -IKPI )
{    j12array[0]+=IK2PI;
}
j12valid[0] = true;
for(int ij12 = 0; ij12 < 1; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 1; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[6];
IkReal x7990=IKcos(j12);
IkReal x7991=IKsin(j12);
IkReal x7992=((IkReal(1.00000000000000))*(sj13));
IkReal x7993=((cj13)*(r10));
IkReal x7994=((cj9)*(sj14));
IkReal x7995=((cj13)*(r01));
IkReal x7996=((IkReal(1.00000000000000))*(r10));
IkReal x7997=((r12)*(sj13));
IkReal x7998=((cj13)*(sj14));
IkReal x7999=((cj11)*(sj10));
IkReal x8000=((cj14)*(r01));
IkReal x8001=((IkReal(1.00000000000000))*(cj9));
IkReal x8002=((sj14)*(sj9));
IkReal x8003=((IkReal(1.00000000000000))*(cj14)*(sj9));
IkReal x8004=((cj10)*(x7990));
IkReal x8005=((IkReal(1.00000000000000))*(x7991));
IkReal x8006=((IkReal(1.00000000000000))*(x7990));
IkReal x8007=((cj13)*(cj14)*(r00));
evalcond[0]=((((cj14)*(r21)))+(((r20)*(sj14)))+(((IkReal(-1.00000000000000))*(cj10)*(cj11)*(x8005)))+(((IkReal(-1.00000000000000))*(sj10)*(x8006))));
evalcond[1]=((((cj13)*(cj14)*(r20)))+(((cj11)*(x8004)))+(((IkReal(-1.00000000000000))*(sj10)*(x8005)))+(((IkReal(-1.00000000000000))*(r21)*(x7998)))+(((IkReal(-1.00000000000000))*(r22)*(x7992))));
evalcond[2]=((((r00)*(x8002)))+(((IkReal(-1.00000000000000))*(sj11)*(x8005)))+(((sj9)*(x8000)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x8001)))+(((IkReal(-1.00000000000000))*(x7994)*(x7996))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x7996)*(x8002)))+(((IkReal(-1.00000000000000))*(r11)*(x8003)))+(((IkReal(-1.00000000000000))*(x8004)))+(((IkReal(-1.00000000000000))*(x8000)*(x8001)))+(((x7991)*(x7999)))+(((IkReal(-1.00000000000000))*(r00)*(x7994))));
evalcond[4]=((((cj13)*(r11)*(x7994)))+(((sj9)*(x8007)))+(((IkReal(-1.00000000000000))*(cj14)*(x7993)*(x8001)))+(((sj11)*(x7990)))+(((IkReal(-1.00000000000000))*(r02)*(sj9)*(x7992)))+(((IkReal(-1.00000000000000))*(x7995)*(x8002)))+(((cj9)*(x7997))));
evalcond[5]=((((sj9)*(x7997)))+(((x7994)*(x7995)))+(((r11)*(sj9)*(x7998)))+(((cj9)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(cj10)*(x8005)))+(((IkReal(-1.00000000000000))*(x7999)*(x8006)))+(((IkReal(-1.00000000000000))*(x7993)*(x8003)))+(((IkReal(-1.00000000000000))*(x8001)*(x8007))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j9;
vinfos[0].indices[0] = _ij9[0];
vinfos[0].indices[1] = _ij9[1];
vinfos[0].maxsolutions = _nj9;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j10;
vinfos[1].indices[0] = _ij10[0];
vinfos[1].indices[1] = _ij10[1];
vinfos[1].maxsolutions = _nj10;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j11;
vinfos[2].indices[0] = _ij11[0];
vinfos[2].indices[1] = _ij11[1];
vinfos[2].maxsolutions = _nj11;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j12;
vinfos[3].indices[0] = _ij12[0];
vinfos[3].indices[1] = _ij12[1];
vinfos[3].maxsolutions = _nj12;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j13;
vinfos[4].indices[0] = _ij13[0];
vinfos[4].indices[1] = _ij13[1];
vinfos[4].maxsolutions = _nj13;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j14;
vinfos[5].indices[0] = _ij14[0];
vinfos[5].indices[1] = _ij14[1];
vinfos[5].maxsolutions = _nj14;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - baxter (e88fdd469390c8f11673bb61df61a0ef)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
